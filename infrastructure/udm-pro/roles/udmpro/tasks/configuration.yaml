---
- name: onboot - ensure onboot directory exists
  raw: mkdir -p "{{ unifi_onboot_directory }}"

- name: onboot - deploy custom configurations
  delegate_to: localhost
  become: no
  with_items:
    - { file: "files/scripts/00-onboot-sshkeys.sh", enabled: yes }
    - { file: "files/scripts/05-onboot-container.sh", enabled: yes }
    - { file: "files/scripts/05-onboot-install-cni-plugins.sh", enabled: yes }
    - {
        file: "files/scripts/10-onboot-frr.sh",
        enabled: "{{ frr_enabled | bool }}",
      }
    - {
        file: "files/scripts/10-onboot-rsyncd.sh",
        enabled: "{{ rsyncd_enabled | bool }}",
      }
    - {
        file: "files/scripts/10-onboot-nodeexporter.sh",
        enabled: "{{ nodeexporter_enabled | bool }}",
      }
    - {
        file: "files/scripts/10-onboot-haproxy.sh",
        enabled: "{{ haproxy_enabled | bool }}",
      }
  raw: "[[ {{ item.enabled }} = 'True' ]] && scp {{ role_path }}/{{ item.file }} {{ ansible_user }}@{{ ansible_host }}:{{ unifi_onboot_directory }}/ || echo 'item disabled: {{ item.file }}'"

- name: onboot - ensure cni directory exists
  raw: mkdir -p "{{ cni_directory }}"

- name: onboot - deploy cni configurations
  delegate_to: localhost
  become: no
  with_items:
    - {
        file: "files/cni/10-haproxy.conflist",
        enabled: "{{ haproxy_enabled | bool }}",
      }
  raw: "[[ {{ item.enabled }} = 'True' ]] && scp {{ role_path }}/{{ item.file }} {{ ansible_user }}@{{ ansible_host }}:{{ cni_directory }}/ || echo 'item disabled: {{ item.file }}'"

- name: template masquerade nat rules
  when: masquerade_enabled and masquerade_nat_rules is defined
  tags:
    - iprules
  raw: 'echo "{{ lookup(''template'', ''masquerade-nat-rules.sh.j2'') }}" > {{ unifi_onboot_directory }}/25-masquerade-nat-rules.sh'

- name: create dir for haproxy
  when: haproxy_enabled
  tags:
    - haproxy
  raw: mkdir -p {{ unifi_mount_path }}/haproxy

- name: template haproxy config
  when: haproxy_enabled
  tags:
    - haproxy
  raw: 'echo "{{ lookup(''template'', ''haproxy.cfg.j2'') }}" > {{ unifi_mount_path }}/haproxy/haproxy.cfg && chmod 755 {{ unifi_mount_path }}/haproxy/haproxy.cfg'

- name: onboot - enasure executable flag is set on scripts
  raw: chmod +x {{ unifi_onboot_directory }}/*.sh
