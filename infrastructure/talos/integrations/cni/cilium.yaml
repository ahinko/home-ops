apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-algorithm: maglev
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: dsr
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "1"
  cluster-name: metal
  cni-uninstall: "true"
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  disable-cnp-status-updates: "true"
  disable-endpoint-crd: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ipv4: "true"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "true"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA, drop tcp flow http icmp port-distribution
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipv4-native-routing-cidr: 10.244.0.0/16
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel: disabled
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: metal\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max: \nsort-buffer-drain-timeout:
    \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQVBkSjJHVS9MSWc2aFBZakZJNFFHY293RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU16RXlORGt6T1ZvWERUSTJNRFV5TWpFeQpORGt6T1Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUEzV1NTZE1YYXVhWm9IcExadWhaUmkzbDI4T2cxdjBVRGN1NVNFNWE3T2ZWZndWbWgKY0NSRS84b3BqWVY1Y3hFSER3eXNRbmUwTlgvV0VnTThvY2d0VEhURExwdUNlRXltZ0hSUityR3lHZDh1aXdjMApPQUpvdjhXSzhyWWpRcFRod25ubkVLZUlsZ24vV2RybGNtOTFNVUJCdG14aW9CaU8zMWs2M3RIUFdkRm5ZWFdQCm5PcUU0LytPOXVtZ1hlK2NObUowSmpXdVZ1R0g0T1pVVmtPeTV0QXgxR1RJQWpzNVNyWStnN0pBNForVEhuZHoKbzRRV1BVdGpFWFY2TlR3T3pUMGgvRE9COVBaRmZOaklIOThWWWdjOElBRkNtWGoxcElvTEc2RkVVaVU4Y2p4YwphNW1SeFdDWFY3TGs3Vmp0YWhlTlJMZmxzT3dxZTFEQWljZDZEd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGTFRrMTNRbWEyUDEzYWdBZ21LVEhDR21jVkpSTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRRE1qMnN1b2RBbUhaNWZPS2NsZzI5ZTgweHo0M09LZlNvSk1Gcy83OUs4OEtlazNseDJLYTR5CnkxWm5kZkk1UFhjQWVpZW9kMmlBZFMvOVk0aHkxMmUxRXlzMXNiMmFwVmtLckhDc20vbVJUWVhDcXZaa3pTNmsKZTBoYVBaTkIyaVlac0RMT3lEV3cvRU9adWpVOE9uV3FmZmUzYk9aWVEyK3NVR3lqTjhVV01Oc2dTOEl5Y1lIdwoxVzZ4dVJ4N2t0QnV2eXNUYjZJRyt0OFcvckZuTzZURFNLcE9Zang3YkZiWjBPZUVyQUVHeDZFbVM0c3dUUnVRCm56NUtPQ0d4RWxSKy84Um04ZmtJeVd2bUJCb0JSSS8xdDl2MlRvdCsxaS9wV3YrTEcwRlZxMlBzQ2pYTEMxcnYKanpxZHlyTk9kMG4vS2wvdmwzL1BtNEhRRVk1WE5mQVQKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBM1dTU2RNWGF1YVpvSHBMWnVoWlJpM2wyOE9nMXYwVURjdTVTRTVhN09mVmZ3Vm1oCmNDUkUvOG9wallWNWN4RUhEd3lzUW5lME5YL1dFZ004b2NndFRIVERMcHVDZUV5bWdIUlIrckd5R2Q4dWl3YzAKT0FKb3Y4V0s4cllqUXBUaHdubm5FS2VJbGduL1dkcmxjbTkxTVVCQnRteGlvQmlPMzFrNjN0SFBXZEZuWVhXUApuT3FFNC8rTzl1bWdYZStjTm1KMEpqV3VWdUdINE9aVVZrT3k1dEF4MUdUSUFqczVTclkrZzdKQTRaK1RIbmR6Cm80UVdQVXRqRVhWNk5Ud096VDBoL0RPQjlQWkZmTmpJSDk4VllnYzhJQUZDbVhqMXBJb0xHNkZFVWlVOGNqeGMKYTVtUnhXQ1hWN0xrN1ZqdGFoZU5STGZsc093cWUxREFpY2Q2RHdJREFRQUJBb0lCQUEwNXM5SUwrN3Y1WitEagpydVFCNzA4Z3EyMUt3ZU15TVRtTmFSUElmbGpCQXI1ZkoxaTJvZlNSMUJlak1KVWlJRVRTNGZ0NmdTWnRBNUhCCjViNVlZZlJlU1VhZ2ZaUElLRzRtQkx1d0g4NlIyWXJ1bkR6NFQ5K2M0bWNMWUdIYTJQMndJSkNMSVlxdEFEY1MKNzMvOWpvZXBxZ05HeUVGK0ZoTGJscnUyMXVjcmtjclhTZU1ySm0ybFYzaEk0Mnp1WUVhSUh4NlhvQ3krWVFBMAo5OUR5WHhickJGYW5NU2EwWGpXVWxCOUtKU3FXTnJMRmt5VGRObytHSFpCd1Y0Uk9mcGNzUUZ4cmM2UDRNbUY4ClZQY29oN2QxUmx4dGhScVlMK1ltdzJ6N0lyV2hjL25rL1hjQVduK2xPQ0pvak4yUUJPS25rcm1NRFdJQjdqT1AKeEZaTWZHa0NnWUVBN3QvSFFselc5MktlUEhLVk9jeXRiUEREUHl2bzZMNzM4bjdILzB6YzFueHg1NVpUTzdWQgpFZWh0bmdXMmhjVlpsSk5sVG93QXN5dDEwMzRLbUtLVytma3ZMUzZxQytwZ2w0RElqUWJOZGV4RHpyb2FvZGZPClFCaUM1SCtjM3c1RHpHZTNGQ0oxSW80RFR5ZzRtenl1UzducXJaVlAweW1UY29RUHJyeDY5cTBDZ1lFQTdVUHkKcHMzV290WHhvU081MXJqbHhwYmdCK0N2RVVwVEFoWjIvN1YrcVJEWDFSWUQ5YmNpeEREK2JlT2xoSWNZVlhKbQpzdlZiUm9MNnNrTHQyL2pwei82eTVpMVlTTU9senRTM3VyVExWbHIwU1A3YTByVGxsOFhKK1UrcnYyTWdUWDRoCnE2Mm9iRmJWenl4OWloZG1xWjhrM3hhOGoyczFaUVVOcmhRZ2x5c0NnWUVBaGRmclBScnA5Q2xVd2tmdHB6b3cKL2phVkgrTkptSWZRUkJhWGwwd0kvVUV6VFhEa2FETXlKNGVWVEJLbFo2VGhnYWRvL3k3aEFZTmJmTXBGdzZwdQpiOWdZZi9lQ25qU1FOTE9iSzdIaEU2N3plM1M1a1c5ckNHenpnbmFpZmpUdTlpd3kzOXhDeDc3TXllQ2VmeFRzCkVGQTIxMVl2S1FGRnRjZWJSZXdqOWUwQ2dZRUFsQjVVRUYvMSsyZldWWU5wRTZ3UC9kN1ljdktJT0NJUEdnR08KUG1vK2JTc1BvbjRBOE5kb1E5UldNYUhwQllnVTM5cndWQTRwOGlYNGZXcWM5VE02TzlmRU5UL2ZtbVZSVUlLcApSRXh6bURCbHltQVhtV3pHMiszay9kZ0gzdzN4NzQ2clZIS3Y3eHB5bGNndmd4TEN5MmVIYkNIVWl6QWhnRFFjCmF5MHpmMHNDZ1lCQzM2UjM3YytaQkVES3pPVW5nU3ArVDEzaitLNExnSEYrRm9kblpLbUlnLzRFanU4SWV5d2sKSHB3M0F6QU9oRGIvZHp4S3NMdFlFOUFKTkhId3ZuV1l0T1cvSjJ1c2h5VExDZkxmYnBGMy9WMUFMdmIzdUVBegpCWFIzdGJMeGtldURoajJHc25sa0d0aFY5N0RkNm1qU1FEbnY0TzVYem5QZHMwTmJlSTRXQWc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQVBkSjJHVS9MSWc2aFBZakZJNFFHY293RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU16RXlORGt6T1ZvWERUSTJNRFV5TWpFeQpORGt6T1Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUEzV1NTZE1YYXVhWm9IcExadWhaUmkzbDI4T2cxdjBVRGN1NVNFNWE3T2ZWZndWbWgKY0NSRS84b3BqWVY1Y3hFSER3eXNRbmUwTlgvV0VnTThvY2d0VEhURExwdUNlRXltZ0hSUityR3lHZDh1aXdjMApPQUpvdjhXSzhyWWpRcFRod25ubkVLZUlsZ24vV2RybGNtOTFNVUJCdG14aW9CaU8zMWs2M3RIUFdkRm5ZWFdQCm5PcUU0LytPOXVtZ1hlK2NObUowSmpXdVZ1R0g0T1pVVmtPeTV0QXgxR1RJQWpzNVNyWStnN0pBNForVEhuZHoKbzRRV1BVdGpFWFY2TlR3T3pUMGgvRE9COVBaRmZOaklIOThWWWdjOElBRkNtWGoxcElvTEc2RkVVaVU4Y2p4YwphNW1SeFdDWFY3TGs3Vmp0YWhlTlJMZmxzT3dxZTFEQWljZDZEd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGTFRrMTNRbWEyUDEzYWdBZ21LVEhDR21jVkpSTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRRE1qMnN1b2RBbUhaNWZPS2NsZzI5ZTgweHo0M09LZlNvSk1Gcy83OUs4OEtlazNseDJLYTR5CnkxWm5kZkk1UFhjQWVpZW9kMmlBZFMvOVk0aHkxMmUxRXlzMXNiMmFwVmtLckhDc20vbVJUWVhDcXZaa3pTNmsKZTBoYVBaTkIyaVlac0RMT3lEV3cvRU9adWpVOE9uV3FmZmUzYk9aWVEyK3NVR3lqTjhVV01Oc2dTOEl5Y1lIdwoxVzZ4dVJ4N2t0QnV2eXNUYjZJRyt0OFcvckZuTzZURFNLcE9Zang3YkZiWjBPZUVyQUVHeDZFbVM0c3dUUnVRCm56NUtPQ0d4RWxSKy84Um04ZmtJeVd2bUJCb0JSSS8xdDl2MlRvdCsxaS9wV3YrTEcwRlZxMlBzQ2pYTEMxcnYKanpxZHlyTk9kMG4vS2wvdmwzL1BtNEhRRVk1WE5mQVQKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBM1dTU2RNWGF1YVpvSHBMWnVoWlJpM2wyOE9nMXYwVURjdTVTRTVhN09mVmZ3Vm1oCmNDUkUvOG9wallWNWN4RUhEd3lzUW5lME5YL1dFZ004b2NndFRIVERMcHVDZUV5bWdIUlIrckd5R2Q4dWl3YzAKT0FKb3Y4V0s4cllqUXBUaHdubm5FS2VJbGduL1dkcmxjbTkxTVVCQnRteGlvQmlPMzFrNjN0SFBXZEZuWVhXUApuT3FFNC8rTzl1bWdYZStjTm1KMEpqV3VWdUdINE9aVVZrT3k1dEF4MUdUSUFqczVTclkrZzdKQTRaK1RIbmR6Cm80UVdQVXRqRVhWNk5Ud096VDBoL0RPQjlQWkZmTmpJSDk4VllnYzhJQUZDbVhqMXBJb0xHNkZFVWlVOGNqeGMKYTVtUnhXQ1hWN0xrN1ZqdGFoZU5STGZsc093cWUxREFpY2Q2RHdJREFRQUJBb0lCQUEwNXM5SUwrN3Y1WitEagpydVFCNzA4Z3EyMUt3ZU15TVRtTmFSUElmbGpCQXI1ZkoxaTJvZlNSMUJlak1KVWlJRVRTNGZ0NmdTWnRBNUhCCjViNVlZZlJlU1VhZ2ZaUElLRzRtQkx1d0g4NlIyWXJ1bkR6NFQ5K2M0bWNMWUdIYTJQMndJSkNMSVlxdEFEY1MKNzMvOWpvZXBxZ05HeUVGK0ZoTGJscnUyMXVjcmtjclhTZU1ySm0ybFYzaEk0Mnp1WUVhSUh4NlhvQ3krWVFBMAo5OUR5WHhickJGYW5NU2EwWGpXVWxCOUtKU3FXTnJMRmt5VGRObytHSFpCd1Y0Uk9mcGNzUUZ4cmM2UDRNbUY4ClZQY29oN2QxUmx4dGhScVlMK1ltdzJ6N0lyV2hjL25rL1hjQVduK2xPQ0pvak4yUUJPS25rcm1NRFdJQjdqT1AKeEZaTWZHa0NnWUVBN3QvSFFselc5MktlUEhLVk9jeXRiUEREUHl2bzZMNzM4bjdILzB6YzFueHg1NVpUTzdWQgpFZWh0bmdXMmhjVlpsSk5sVG93QXN5dDEwMzRLbUtLVytma3ZMUzZxQytwZ2w0RElqUWJOZGV4RHpyb2FvZGZPClFCaUM1SCtjM3c1RHpHZTNGQ0oxSW80RFR5ZzRtenl1UzducXJaVlAweW1UY29RUHJyeDY5cTBDZ1lFQTdVUHkKcHMzV290WHhvU081MXJqbHhwYmdCK0N2RVVwVEFoWjIvN1YrcVJEWDFSWUQ5YmNpeEREK2JlT2xoSWNZVlhKbQpzdlZiUm9MNnNrTHQyL2pwei82eTVpMVlTTU9senRTM3VyVExWbHIwU1A3YTByVGxsOFhKK1UrcnYyTWdUWDRoCnE2Mm9iRmJWenl4OWloZG1xWjhrM3hhOGoyczFaUVVOcmhRZ2x5c0NnWUVBaGRmclBScnA5Q2xVd2tmdHB6b3cKL2phVkgrTkptSWZRUkJhWGwwd0kvVUV6VFhEa2FETXlKNGVWVEJLbFo2VGhnYWRvL3k3aEFZTmJmTXBGdzZwdQpiOWdZZi9lQ25qU1FOTE9iSzdIaEU2N3plM1M1a1c5ckNHenpnbmFpZmpUdTlpd3kzOXhDeDc3TXllQ2VmeFRzCkVGQTIxMVl2S1FGRnRjZWJSZXdqOWUwQ2dZRUFsQjVVRUYvMSsyZldWWU5wRTZ3UC9kN1ljdktJT0NJUEdnR08KUG1vK2JTc1BvbjRBOE5kb1E5UldNYUhwQllnVTM5cndWQTRwOGlYNGZXcWM5VE02TzlmRU5UL2ZtbVZSVUlLcApSRXh6bURCbHltQVhtV3pHMiszay9kZ0gzdzN4NzQ2clZIS3Y3eHB5bGNndmd4TEN5MmVIYkNIVWl6QWhnRFFjCmF5MHpmMHNDZ1lCQzM2UjM3YytaQkVES3pPVW5nU3ArVDEzaitLNExnSEYrRm9kblpLbUlnLzRFanU4SWV5d2sKSHB3M0F6QU9oRGIvZHp4S3NMdFlFOUFKTkhId3ZuV1l0T1cvSjJ1c2h5VExDZkxmYnBGMy9WMUFMdmIzdUVBegpCWFIzdGJMeGtldURoajJHc25sa0d0aFY5N0RkNm1qU1FEbnY0TzVYem5QZHMwTmJlSTRXQWc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ca-secret
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQVBkSjJHVS9MSWc2aFBZakZJNFFHY293RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU16RXlORGt6T1ZvWERUSTJNRFV5TWpFeQpORGt6T1Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUEzV1NTZE1YYXVhWm9IcExadWhaUmkzbDI4T2cxdjBVRGN1NVNFNWE3T2ZWZndWbWgKY0NSRS84b3BqWVY1Y3hFSER3eXNRbmUwTlgvV0VnTThvY2d0VEhURExwdUNlRXltZ0hSUityR3lHZDh1aXdjMApPQUpvdjhXSzhyWWpRcFRod25ubkVLZUlsZ24vV2RybGNtOTFNVUJCdG14aW9CaU8zMWs2M3RIUFdkRm5ZWFdQCm5PcUU0LytPOXVtZ1hlK2NObUowSmpXdVZ1R0g0T1pVVmtPeTV0QXgxR1RJQWpzNVNyWStnN0pBNForVEhuZHoKbzRRV1BVdGpFWFY2TlR3T3pUMGgvRE9COVBaRmZOaklIOThWWWdjOElBRkNtWGoxcElvTEc2RkVVaVU4Y2p4YwphNW1SeFdDWFY3TGs3Vmp0YWhlTlJMZmxzT3dxZTFEQWljZDZEd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGTFRrMTNRbWEyUDEzYWdBZ21LVEhDR21jVkpSTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRRE1qMnN1b2RBbUhaNWZPS2NsZzI5ZTgweHo0M09LZlNvSk1Gcy83OUs4OEtlazNseDJLYTR5CnkxWm5kZkk1UFhjQWVpZW9kMmlBZFMvOVk0aHkxMmUxRXlzMXNiMmFwVmtLckhDc20vbVJUWVhDcXZaa3pTNmsKZTBoYVBaTkIyaVlac0RMT3lEV3cvRU9adWpVOE9uV3FmZmUzYk9aWVEyK3NVR3lqTjhVV01Oc2dTOEl5Y1lIdwoxVzZ4dVJ4N2t0QnV2eXNUYjZJRyt0OFcvckZuTzZURFNLcE9Zang3YkZiWjBPZUVyQUVHeDZFbVM0c3dUUnVRCm56NUtPQ0d4RWxSKy84Um04ZmtJeVd2bUJCb0JSSS8xdDl2MlRvdCsxaS9wV3YrTEcwRlZxMlBzQ2pYTEMxcnYKanpxZHlyTk9kMG4vS2wvdmwzL1BtNEhRRVk1WE5mQVQKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lRSFAvUWZPT1BZOEF1SnRwUWdMeTYxakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJek1USTBPVE01V2hjTk1qWXdOVEl5TVRJMApPVE01V2pBak1TRXdId1lEVlFRRERCZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDdW1SeEEyVW9MSXNRY3hIVks5ZDQ5WVFqOFE4WHgKeWpycFpUWDBZMmtWOGNDVnYxWWkrRndBMkhIZy95ZW8rUVJpYS9sMUR6UnJLUjVSUFBrVmNZMlhUY25iUGVodQo2NjBWVktGS2NiZ04xS3hHNUd2VFF6dGppVnJrd0tJYzA3M1o5WjFRZ05hK3kyZjlvMG1jeFhXSHgwanJnNkRxCjd4V3Z5T1NqRksycGtKMThTTVRoaHJ6d3haN1JzcjlTNFNONlFGWVpiQ2dZdEZiV1hLdWlXQkhuL2ZBejUzZjkKUmxxWERVdDhUaDRucDFZTmJHYjYzWUFhTVV1TDQwcmZza3J5bExuRkhBQ0JZRk5vUTJ2QnlQbHU1U1lwSE1UNgoyUC9ncEpnSE1CdnY1Q05SWW5ZWmwwYS9xd0haY2k5c2NpeXBueVZEcXhhbWppYXlmYXVOL1dFSkFnTUJBQUdqCmdZWXdnWU13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZMVGsxM1FtYTJQMTNhZ0FnbUtUSENHbQpjVkpSTUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bExYSmxiR0Y1TG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFMbllwRlFuQThrbU5IK016Yno5TWdoOWQ1b0RtV2ZZSEJ1Ylc5UFNwYi9QampMZ3oKVUxhMzBTK05ZTGpTWXdVZ0s5d2xwaUdzOXhEOWJ1QnM1ZytPYXhjdnFNeWI3cUZZdHAzOUVSY1pBOVZ5c0lGeApwVVVZRTZqdG9VcHVZZXVPREk5eEQ3MGdRd3d0STFaZzJDYmh4aGtkZy9qWmpHNVNoVjViczU3ZVNKRUovWGszCnRwcGo2dk1QSkhWT2lkWk10bmlYNGU0Sk54YVVoUitjZ0hQT0kybTZkWmZpc2VOc3A5cGJhNmErOWJZRzN0QysKYUJPZm9mb050YnNIYXgyckU2N3FjK1IvMVphVDlEbkdKeW4yNVozc0FzekR2ZEJ5dkJpa0l3ZkVUc0RTWVF3QQpKczc4L2tRWmxMeG1VbjRHZ0JjWU50RHVQWi9OU2lRZ2g5VkVRdz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBcnBrY1FObEtDeUxFSE1SMVN2WGVQV0VJL0VQRjhjbzY2V1UxOUdOcEZmSEFsYjlXCkl2aGNBTmh4NFA4bnFQa0VZbXY1ZFE4MGF5a2VVVHo1RlhHTmwwM0oyejNvYnV1dEZWU2hTbkc0RGRTc1J1UnIKMDBNN1k0bGE1TUNpSE5POTJmV2RVSURXdnN0bi9hTkpuTVYxaDhkSTY0T2c2dThWcjhqa294U3RxWkNkZkVqRQo0WWE4OE1XZTBiSy9VdUVqZWtCV0dXd29HTFJXMWx5cm9sZ1I1LzN3TStkMy9VWmFsdzFMZkU0ZUo2ZFdEV3htCit0MkFHakZMaStOSzM3Sks4cFM1eFJ3QWdXQlRhRU5yd2NqNWJ1VW1LUnpFK3RqLzRLU1lCekFiNytRalVXSjIKR1pkR3Y2c0IyWEl2YkhJc3FaOGxRNnNXcG80bXNuMnJqZjFoQ1FJREFRQUJBb0lCQUE5NGM1OXZZWGN4SW0xbQpIdnFBWkt2Tm9FMHgrQ1VmaFM3UEVBUFNseW9obkszb0lVckI5TzBDUUx6dC91YWpBZmR5bDh6K2h1ZUQ0akxTCmswT0tKMENqM09IM1QxUWN2OTVtL0UrcldlS24ySWdEajJaTnk4SmJGbG0waytpMy9sZUV3dWF5TTlUK0V2M1AKYlNOZC83Y0RPbnZiMHZOZU1lNjhmejNRQkQ5RThxQzRVUm45Tk93eFg3RllLeTJBL2hpNUNtZ0NZN0IrNVlVSQpFdUxhRG9SUkwwVStRYkwrbnpCdWhKRG45VmJ1elhGOEVVSzQvakVhN3JqZW1oeUtIVFhQTkNQaElNK3UxK1NiCjQyZ3V2RVR5enhDdUNuOWFvcWRhV3VRSVFZVjZPNkl1dFIxZ3ZBMi9IQ2RUZXQwWFVVSkppQnM2WDgvSmlySzkKQ21RSjAvRUNnWUVBMjlDdnZEc3BNOW9YQVIxMFU1ZWZYTEZBRFhQOFF3UDZUNlhIWkh6MzNKQlhVWWxla1Rvawo4dHJlQWJFaFRQVUdYR21odDdDTUgzNDB3VGtpbmRONGxyR2ptWVRGdlpjRStIbGEvT21HM1l2dnFMRzYvcWttClhDV0Qyd1pXN0t4ekxGaE1QU1FHSUc0NFhBbURHTWVmTWEzWXF6RDVlZ3Z0ODEyOTZ3N3lVVzBDZ1lFQXkxYnAKMlZWZVBxZnRuajdhTVhkRlVpWkhRU1pPUlgvVHBBQ1h3QkxjM1J6RVRwYmswaE5PYzZLM2QxQ0NIRHdaeTNodgpGb0I4b05ZZzlrQmE0cHE5eXdFNG9qV2N6NEtOZEVNVFNGc05KS3hnN0luTi9xK2k4ZkFTd0xCNXQzODdJZVNwCkdZWG9NcTlNQ0t6UWg0VUg5RzZyV082Uk5TeVRJVW05UndvVHFJMENnWUVBeTJ5RFZhVkNhalFJV2dYU0k1SUwKN3hJeC9zRTUwU01iUVI1Z09vVFVOUkIzWG9QTU9vWWVyNGtSTDJ1bkw3c0tHZmUvcTJqOUpCLzkzbHRyeDdkdQp2N2JCZWs4L1dFY3NXRzZtWDZ3V0hXMWxheTZmcVJFTTZQWG00b2twWkhuclZEeWF3WEpYSVNnZmpEMVpUMU5kCjVmSEd0QmJzcVova28vWTZ6Zy9VL0xrQ2dZRUFuaDF5Y0FaYTU1dkxRUDhjeWRRMStrQTdyaVJzUHN5OE5NNGwKTWowNHMxTllMc2hWSENuWkdrQVFLOTVWbmtENXllZFhjb2JzNG1BL2QxenBqMFhHaWFIa2VQWDVmcjdFNGYvNgpjWXdqdHoyM2pKZEhzR0RBOHlLOFlrdVlDaUVNU1RtMmFGdGhDSENaVGpHYllaWUhib0hVQ2E1UkNha2txNERjCmh1NEdCVTBDZ1lBSHdYS1JTVDZnSjloSmlYd0U1SHoza3Fxb3ozZEJyeXJIcVdvenJjazVYV3NhYUdsOXR2b1oKUG02ZjduSEg3djlOcElpMENRNHBXUlovWVJMSWJkV1M0KzBEWHZvaDBETmhlMm5RbzVGZ3pWQWZESEFGSnN4dQo0aGxEYSttMUNmaXhxQkM1cjlIQXhNaWhKVUV6ZC9wK2tTcHhBREM1eGRGWTlMak9HVUdRclE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQVBkSjJHVS9MSWc2aFBZakZJNFFHY293RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeU16RXlORGt6T1ZvWERUSTJNRFV5TWpFeQpORGt6T1Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUEzV1NTZE1YYXVhWm9IcExadWhaUmkzbDI4T2cxdjBVRGN1NVNFNWE3T2ZWZndWbWgKY0NSRS84b3BqWVY1Y3hFSER3eXNRbmUwTlgvV0VnTThvY2d0VEhURExwdUNlRXltZ0hSUityR3lHZDh1aXdjMApPQUpvdjhXSzhyWWpRcFRod25ubkVLZUlsZ24vV2RybGNtOTFNVUJCdG14aW9CaU8zMWs2M3RIUFdkRm5ZWFdQCm5PcUU0LytPOXVtZ1hlK2NObUowSmpXdVZ1R0g0T1pVVmtPeTV0QXgxR1RJQWpzNVNyWStnN0pBNForVEhuZHoKbzRRV1BVdGpFWFY2TlR3T3pUMGgvRE9COVBaRmZOaklIOThWWWdjOElBRkNtWGoxcElvTEc2RkVVaVU4Y2p4YwphNW1SeFdDWFY3TGs3Vmp0YWhlTlJMZmxzT3dxZTFEQWljZDZEd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGTFRrMTNRbWEyUDEzYWdBZ21LVEhDR21jVkpSTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRRE1qMnN1b2RBbUhaNWZPS2NsZzI5ZTgweHo0M09LZlNvSk1Gcy83OUs4OEtlazNseDJLYTR5CnkxWm5kZkk1UFhjQWVpZW9kMmlBZFMvOVk0aHkxMmUxRXlzMXNiMmFwVmtLckhDc20vbVJUWVhDcXZaa3pTNmsKZTBoYVBaTkIyaVlac0RMT3lEV3cvRU9adWpVOE9uV3FmZmUzYk9aWVEyK3NVR3lqTjhVV01Oc2dTOEl5Y1lIdwoxVzZ4dVJ4N2t0QnV2eXNUYjZJRyt0OFcvckZuTzZURFNLcE9Zang3YkZiWjBPZUVyQUVHeDZFbVM0c3dUUnVRCm56NUtPQ0d4RWxSKy84Um04ZmtJeVd2bUJCb0JSSS8xdDl2MlRvdCsxaS9wV3YrTEcwRlZxMlBzQ2pYTEMxcnYKanpxZHlyTk9kMG4vS2wvdmwzL1BtNEhRRVk1WE5mQVQKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVakNDQWpxZ0F3SUJBZ0lRRmYvbmhZRStCVjN5VTg1WFdLbGRLVEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJek1USTBPVE01V2hjTk1qWXdOVEl5TVRJMApPVE01V2pBb01TWXdKQVlEVlFRRERCMHFMbTFsZEdGc0xtaDFZbUpzWlMxbmNuQmpMbU5wYkdsMWJTNXBiekNDCkFTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTVBGN1I3elB4a2hJaEd5amFxRWtnNUQKSzJJS0NueXFDajhTVWdVTkFOVzZyb3pWN0YrVHhwQWZQWFVvdGd4TXFCblA4REdLT3h6WVlNQ2N3bjZ0YS8vTgpJZXY5OSt6UlB6THdTcDM0dGl3elFhRVlCNGVPRzN3ZUxHSzhZeTVNM1d4Q1FONWZieFUvRC9tR2NtRndTeXEvCnRUTmcraVc4T1U2OWZTN1hadytFQ0ZpYkJ6VDRqdUtDaitmUCttZjZZUTU2MkFUNnVvM0RCSVlDdHgyL0VXZHUKdHlScG05Zi9YYnJLcTVaRHhGZkN5S1BvNjBCUmZudjdZNW1rbU5hZ2Fqejc4L2hpbGdmVThwd01GUml0T0xaMQowWlA4OHFOcW95a1pOWXpPV1VpUlMzZi9pNEpSM0p4UFpmMzVmR2Q4VmZuRys1TFcwNkxoaEphNTMzYkRJMkVDCkF3RUFBYU9CaXpDQmlEQU9CZ05WSFE4QkFmOEVCQU1DQmFBd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUcKQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXdId1lEVlIwakJCZ3dGb0FVdE9UWGRDWnJZL1hkcUFDQwpZcE1jSWFaeFVsRXdLQVlEVlIwUkJDRXdINElkS2k1dFpYUmhiQzVvZFdKaWJHVXRaM0p3WXk1amFXeHBkVzB1CmFXOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBTmFkd2V6bUFKaE9nMXVLRFdaL3JLNm9ZZldtL0hSWmFRMzUKMjI5RUE5dGppK0tWTUptRVR3TWRHSExrcnoyMjZ2Rm5CSG96K1dHWTlRRmJZamFxby9ySHFJR1FUSGNlb2MyTApSUVhQQVA1VC9Da1dPVXpGOFIwN2JRU0NVL2QxZ0F4TTdtaGQrQitPZytvOHdGSFVmV1RhaDRhNXo5U2ZGcXNjCk1JYlpTUmk2WVZ6WEFydXVwL0hPbUUzdVJFV0JRTzR0TUtNaEZVa3J4dVFoR1N3eXZzZkFEVjRROVhUa1ZkM2sKeVhsTFZkMHhSY2dUT3BkeTVsNkFCNTZPYlBlLzZsUHgxUDhKQXFleHhQeGxUSGNoWWxFcnNTbDNyWmJKWlh1VQp6MDVFK01CWjQ0ZXBKeUFzdE1LWjdVcmVLMWVJY2M4MXBkdS9aK253MzBrUC90WGkwTmc9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdzhYdEh2TS9HU0VpRWJLTnFvU1NEa01yWWdvS2ZLb0tQeEpTQlEwQTFicXVqTlhzClg1UEdrQjg5ZFNpMkRFeW9HYy93TVlvN0hOaGd3SnpDZnExci84MGg2LzMzN05FL012QktuZmkyTEROQm9SZ0gKaDQ0YmZCNHNZcnhqTGt6ZGJFSkEzbDl2RlQ4UCtZWnlZWEJMS3IrMU0yRDZKYnc1VHIxOUx0ZG5ENFFJV0pzSApOUGlPNG9LUDU4LzZaL3BoRG5yWUJQcTZqY01FaGdLM0hiOFJaMjYzSkdtYjEvOWR1c3FybGtQRVY4TElvK2pyClFGRitlL3RqbWFTWTFxQnFQUHZ6K0dLV0I5VHluQXdWR0swNHRuWFJrL3p5bzJxaktSazFqTTVaU0pGTGQvK0wKZ2xIY25FOWwvZmw4WjN4VitjYjdrdGJUb3VHRWxybmZkc01qWVFJREFRQUJBb0lCQUZXVEk5WStqNXRGYjJYNgovWS9HeVMwdzBUcldsc1R0Y3ZNazUvTkxQczB0Ly9TUjRmUFpYWmRNQUlwQTFHckY2MGoxS3RJTTBWQUhpU3RJCm1uL1RBSDFkUm5Hb253SEdhWEN6dG5vYzZFeWp6eEZDdHEvYlAwcGV5aG9Tck92bEwzaU44VnNDcmtURVB4QmMKWTQwU0Q5bE0yVUR2S0Fqc29NUTVjZ25Tb0RzWVFJWmk0Y3lkRytmT0dpYkpZNFZ0Y1pQcVQrQnV3aU9SNmRsdwpCNTN5Q0FLaXdSWU11ZzJWSUEyQkxZalB0cEhZRnhCcGZEMGV2YlRVTDcyQXRJTUZjMFA5ZFBjNjZpUkdmNHNVClRGbTBBMWdTRXNHL2xnMEJhTTFjb2QvdUdZVXR5QXV2N1FvYUxJekw5Y2IrblZrNXY0Z2YxVFdTYWIyV3F5NFoKaktOU3dsRUNnWUVBMGFRRVp1Slh4dGJFU3M0aFYyc0NlTE5IVXEzUVl4SUVFbndYQVZFL1A3SFRFdmZDLzFicApLZWd3NFU1a0tRZE9zRG5BUDR3a05RNzRma0szUGpaQmJEQktyUm40S1grbjVTYnZzU0VzeHB4S0Iybmh3U0dDCmFPWWQzSC9iRnlaM3R0Zmh6aUZZQllEZ01WZlZrcThoNW9WUVNFc1dzczZGY2k2Z2dHczVVM1VDZ1lFQTd4RGEKU201U21mck13Wk52YjVzUDJSM1dFejVINkRSeE1nTFRpN1Z5VmFoa3FJbUFWZ0x1Tk44Y0RpQXZVeGd6dnRVRAoxcER1bTlUMXhhNUkrbmsvZlRnU2M0U0dvZnFIWnB4RE5NcXV3T2IvYWN2Y09zVG9hcjVUbWV4dVdBSEdQem15Clh5NHJ1ZVQ3Qng1ZDJuQzhnNTNUcTlkeldtZ1FyWWo0THhmN3JyMENnWUJJMUtKeTI4K0MxTG45QXYreVR3cmMKdyt2VFhXODMrOXBPVWEzc1Z6MlI4MFZSSWFJczh4U3Q2bXlRMlpzU1plZUFjWS9JZy9kUU41TTh5aEMvSERvKwpTOGlsdW8vc1d0MEpUeTJXYStBU1g5bVlHY0RFUjgvMmdYdCtUeXplTGc4SkJwYjc5Ym1PcitjelBVQ0ZaVEp4CjAzN0FudFdUNlF1VFQzK1RIYTBjd1FLQmdBbDZHNDB6em1aNFFNR3p2SWtxRm5pKzdBdWJQbktBRWJTdjAvOEgKMUY1ODdIQ1o4dEoyRDBkZFNObHVnVEhFRmRrTXpMZ215cTYyeEg5dnAwajJvWU92UTF2ODl2Rlk0eUU0TkpuVgpKeFJTay9GM3VXVkRCUXVtTzk0d056ZVo2bWY3TzR6MllabGU4R3laMFpLbFFYUGVQOVBpR0pxTzRZcGZrYWNjClJrZnBBb0dCQUlOZ2JTV0lwTTVYTW9BSkdKQ1MveFNoeWdaUHI1dTczb2E1UkUyWEZ4amJQdTN1U29KcjZzcXAKbTBaOEpDenRuMzhidC82TWhCS2JPNW5uTC9EMC9jT1ozWGxJblN1T09ieFNUMHdMQ1FobGgxYUxoTEVLVmpYZQpRbTRIRC93MUJuQlQveVZTdjdkSjk2TE9rcVY1SnFTeFp3TTZnT2xZeE14dE4wZlprcTBkCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: 7686f6d27f88dee8dcab04eaa7fa6bf6de86155d440f7de6f20896f60dc33b4a
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.20.20
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/operator-generic:v1.13.2@sha256:a1982c0a22297aaac3563e428c330e17668305a41865a842dec53d241c5490ab
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: c168c3ad813c1adbd265ee9b6d1ed2fd2be0fae5752035a4996cd1f6e1d6e64b
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.13.2@sha256:51b772cab0724511583c3da3286439791dc67d7c35077fa30eaba3b5d555f8f4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          tcpSocket:
            port: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: hubble-server-ca.crt
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: 02d6b04b131029fae39270192dcff10fa3a64af9d1d4d0049f1efbc3f5526a34
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.11.0@sha256:bcb369c47cada2d4257d63d3749f7f87c91dde32e010b223597306de95d1ecc8
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.11.0@sha256:14c04d11f78da5c363f88592abae8d2ecee3cbe009f443ef11df6ac5f692d839
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: 7686f6d27f88dee8dcab04eaa7fa6bf6de86155d440f7de6f20896f60dc33b4a
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              key: cni-chaining-mode
              name: cilium-config
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              key: custom-cni-conf
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.20.20
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                /cni-install.sh --enable-debug=false --cni-exclusive=true --log-file=/var/run/cilium/cilium-cni.log
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.20.20
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.20.20
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        secret:
          defaultMode: 256
          optional: true
          secretName: cilium-clustermesh
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
