apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-algorithm: maglev
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: dsr
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "1"
  cluster-name: metal
  cni-uninstall: "true"
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  disable-cnp-status-updates: "true"
  disable-endpoint-crd: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ipv4: "true"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "true"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA, drop tcp flow http icmp port-distribution
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipv4-native-routing-cidr: 10.244.0.0/16
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel: disabled
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: metal\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max: \nsort-buffer-drain-timeout:
    \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUw4SW96M0ttNkJvWlVrTjVKY3FlZUV3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURReU1URTBNak16TkZvWERUSTJNRFF5TURFMApNak16TkZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUEwaFlVdXRob0l0SllhclZyVzNsQTFWM1FvclhaWllTVC9MeG9iM013TFRBNzdVZ3AKSWJFZjJyT3hLY0dHc0crOFVpVmpwZkpRc3hGRlBMMitvUlJHamNNaG1pWVlzaEk1QUt6SEJvVTdtZk50SFltZgplQ2xMNm9pTVNqWmRMSmNaMXJHcGxiV0FHejVSVXJ3cTRNL2FEYit6Sk9RZHhucDJKVG5IL3A3VVo0SWdFWW80ClkyZUhkRWRwZ0RNRVpCdkFxMW5xTXllNkhXWlV3MEd3aFJMdjRkT3NuaWJHaUNvY2duRHZkSy80Q1JxVXBQZCsKZDA0eVNxSkMzMEN6WGRYZ3F0V0VIVXRib2Njd2xzc2dnT0Fld2JSUk0rMzhlejc5YVAwVmlCemNuVGpvUkJobAo1dTN0cVhxeE00T21hTUN1Q245eVNJeVJIdDR5QXVmd054bEV3UUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGT1hQOC94cnVSTU9hVVlJMFk2aHR1UW81eWFlTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQU04QW5laEZjME1YMUlMUy9nbXZlc2tJRjBJSXBXZVhTUlNVWlVyUGYreHN5dFpvMHFFOERCCk40UHdSblNiR2ZsUnRpWWtnQU04azU1SDJHQ1JvWklSTDVYVlh2OUNZSDdCWXlybFJoWVExOVBGcjNjbFdVblcKZVU4YUNRZ09rNHhTNWJMOSttbE8rMTNyci9aMHZlampFbDA5OG5FZDlnbGtiQ1hnLzZmVHY4SnlkTmxwSzB1OQp3VmYrWVRaZG1ZNkhiVTRMY051dXZ3eEYvZ25FOC8rZ3poWERDUndjS3JBNEtEZTAwV1VtV2s4R29KazV6cldWClF6NVhLeDAzWXJIblBzd0lNRUlnRmloMHVrTDRTZVlINFNUMW1DM0hyQ25FRjRraDYwTEZVZmNYNVFxeTNjNTIKTmg4YUQ0Q00vdnl5d09LY0tKWk01eUg4dk5lMkFtaGMKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBMGhZVXV0aG9JdEpZYXJWclczbEExVjNRb3JYWlpZU1QvTHhvYjNNd0xUQTc3VWdwCkliRWYyck94S2NHR3NHKzhVaVZqcGZKUXN4RkZQTDIrb1JSR2pjTWhtaVlZc2hJNUFLekhCb1U3bWZOdEhZbWYKZUNsTDZvaU1TalpkTEpjWjFyR3BsYldBR3o1UlVyd3E0TS9hRGIrekpPUWR4bnAySlRuSC9wN1VaNElnRVlvNApZMmVIZEVkcGdETUVaQnZBcTFucU15ZTZIV1pVdzBHd2hSTHY0ZE9zbmliR2lDb2NnbkR2ZEsvNENScVVwUGQrCmQwNHlTcUpDMzBDelhkWGdxdFdFSFV0Ym9jY3dsc3NnZ09BZXdiUlJNKzM4ZXo3OWFQMFZpQnpjblRqb1JCaGwKNXUzdHFYcXhNNE9tYU1DdUNuOXlTSXlSSHQ0eUF1ZndOeGxFd1FJREFRQUJBb0lCQVFDK1ZpTVI1Vjd6clg5TgpybkJGditWdGFrSE1LTlY5bEZBL2VyTmp4Z2l2NkROakZ5MnN5TDBEZUNuYW11dGNqdDhmemFBcWlROTBMUUY5CnRxc3ZaUjlHOExOUTVaTWFRa2hDeEViTk1ZaCtRbjFwZFhaMWQzVEFXRlpDSmw3a04wSEJzZFRqUGoyQ2NVTmMKb2Y1M0Q5bU8rMDlpN1FuTStNWnhrNWdPcC9mb2plZHhKOEdWZjRpUTltb21ON1FSeGJjYWFRTldkcmVGNjMrSwp0Q0NRVWt4SDk2YkxiNGxsWnoxRlVFc0pJTXBmVVNHdlZPczdFNmsvSHJuMDVhRFVldE5iQnhZRE56NEppMFZxCm9Ya0xBOHhyVG1OZXdDeTZNYnNxNGlYV2pWU1A2QmZxbUUrdXE3QUtqRGN4TTFjL0NUTmQ0TFNVRHQ2WjExd24KZ0pXMERuckJBb0dCQVBYSnA0K1A5Z0N5cGJNMExDLyswZDIyYlk4L2ROelJWQ1VVdmw1eFB3a0plZ1BoTTFpTwp5NGxzSUJMeUZDMGJ1WFJVY0ZOaVY5d3l0RVF2dE1pY05NSjVFam1kUjd0V2tqOEFEeFNUck90S2gra3RDQklwCkRGMFh5OUFseGRIK1paZlErNWc0dTNOcHppSFVBZGJyVHlQRFh0VkpPSS90QmFRTXNQaVBGbFlUQW9HQkFOclEKcnk5K3FEMDNtVkV1U1ZyZnNYWmdEaGtrcy9vVCtWUVVIRmtHa2dsY3BSQm9hd2IxcER5cU9uQ2x2VTNLSmQxVQpPWVFBbmVGS21UNUdBSzZ5VldpYVhlRkJRQjZyVkp5azJMcG5DaCthR2cveVUxZjJDcWxNdUZhN0NqYlo0K2ZiCnNRR0d3aHVsQnlEd3o2ZzZVZTlneFp6V3dDa0hxOElNdDdRcmVpUmJBb0dBRXRHLzdMUWZKK3FGMlhUVE5WR1QKakNCZHZ5d2lySTJ5bmF3NjcweElnVTZpY3cyWk90eWtKUCtNYlNiditJdzQ1UGxhS0doTlJlVHovSXlTa1JHMAowSGNvdUJTYzIzRkRmV05weEMrU2UrbVhBbm1hTnBuQ0FwYkIya3dxRzJ3WkowaXZHdmF0RTZjMFMwN0tYVVJqCktOL2FzUVlNT0tqelY1NUpKcDcrSE5VQ2dZRUFrUDZGaDJCVFZUVlpaOXpYQ050L3VhUU8wNFJwcWtYQUNvSEYKQXcwQ2lpZVV6Vm1UeWluTnFkRlhKanY5UStXMno0RzNGd3hka2VNZnhvOFdkcXgvUWZCQVV6b3NwZVg4REV5RAp2SWo0d1ZZWS9RWWpTZjhrczJpK0llS1E4eVhSQ2x1ZVlCZU8ya2l4ZjVkeTB0UEtaV2ZucW5UM0lua056R2ttCjljRjFqMDhDZ1lCbDFTUE96UUJGZnBiUFRMblpxbDRFclZTczRkMzZVRk9ZSkc5OXpTUHdSeVNhNUlPVzhaaTcKOFVicEZXaDFvK0ppenZucTlJTHlSb0FHWHZFeDloSmFFRXpzbXdkVEdCZzVMSDBTZmpVV1B4dU1Ic1FaTnhtcAp5Njh3L29id29yOEJrRmxEdldCRUpsSE56SkFoVEdyMHhNd0MwU3lTcks0RTZ2c0t5K0N3TUE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUw4SW96M0ttNkJvWlVrTjVKY3FlZUV3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURReU1URTBNak16TkZvWERUSTJNRFF5TURFMApNak16TkZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUEwaFlVdXRob0l0SllhclZyVzNsQTFWM1FvclhaWllTVC9MeG9iM013TFRBNzdVZ3AKSWJFZjJyT3hLY0dHc0crOFVpVmpwZkpRc3hGRlBMMitvUlJHamNNaG1pWVlzaEk1QUt6SEJvVTdtZk50SFltZgplQ2xMNm9pTVNqWmRMSmNaMXJHcGxiV0FHejVSVXJ3cTRNL2FEYit6Sk9RZHhucDJKVG5IL3A3VVo0SWdFWW80ClkyZUhkRWRwZ0RNRVpCdkFxMW5xTXllNkhXWlV3MEd3aFJMdjRkT3NuaWJHaUNvY2duRHZkSy80Q1JxVXBQZCsKZDA0eVNxSkMzMEN6WGRYZ3F0V0VIVXRib2Njd2xzc2dnT0Fld2JSUk0rMzhlejc5YVAwVmlCemNuVGpvUkJobAo1dTN0cVhxeE00T21hTUN1Q245eVNJeVJIdDR5QXVmd054bEV3UUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGT1hQOC94cnVSTU9hVVlJMFk2aHR1UW81eWFlTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQU04QW5laEZjME1YMUlMUy9nbXZlc2tJRjBJSXBXZVhTUlNVWlVyUGYreHN5dFpvMHFFOERCCk40UHdSblNiR2ZsUnRpWWtnQU04azU1SDJHQ1JvWklSTDVYVlh2OUNZSDdCWXlybFJoWVExOVBGcjNjbFdVblcKZVU4YUNRZ09rNHhTNWJMOSttbE8rMTNyci9aMHZlampFbDA5OG5FZDlnbGtiQ1hnLzZmVHY4SnlkTmxwSzB1OQp3VmYrWVRaZG1ZNkhiVTRMY051dXZ3eEYvZ25FOC8rZ3poWERDUndjS3JBNEtEZTAwV1VtV2s4R29KazV6cldWClF6NVhLeDAzWXJIblBzd0lNRUlnRmloMHVrTDRTZVlINFNUMW1DM0hyQ25FRjRraDYwTEZVZmNYNVFxeTNjNTIKTmg4YUQ0Q00vdnl5d09LY0tKWk01eUg4dk5lMkFtaGMKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBMGhZVXV0aG9JdEpZYXJWclczbEExVjNRb3JYWlpZU1QvTHhvYjNNd0xUQTc3VWdwCkliRWYyck94S2NHR3NHKzhVaVZqcGZKUXN4RkZQTDIrb1JSR2pjTWhtaVlZc2hJNUFLekhCb1U3bWZOdEhZbWYKZUNsTDZvaU1TalpkTEpjWjFyR3BsYldBR3o1UlVyd3E0TS9hRGIrekpPUWR4bnAySlRuSC9wN1VaNElnRVlvNApZMmVIZEVkcGdETUVaQnZBcTFucU15ZTZIV1pVdzBHd2hSTHY0ZE9zbmliR2lDb2NnbkR2ZEsvNENScVVwUGQrCmQwNHlTcUpDMzBDelhkWGdxdFdFSFV0Ym9jY3dsc3NnZ09BZXdiUlJNKzM4ZXo3OWFQMFZpQnpjblRqb1JCaGwKNXUzdHFYcXhNNE9tYU1DdUNuOXlTSXlSSHQ0eUF1ZndOeGxFd1FJREFRQUJBb0lCQVFDK1ZpTVI1Vjd6clg5TgpybkJGditWdGFrSE1LTlY5bEZBL2VyTmp4Z2l2NkROakZ5MnN5TDBEZUNuYW11dGNqdDhmemFBcWlROTBMUUY5CnRxc3ZaUjlHOExOUTVaTWFRa2hDeEViTk1ZaCtRbjFwZFhaMWQzVEFXRlpDSmw3a04wSEJzZFRqUGoyQ2NVTmMKb2Y1M0Q5bU8rMDlpN1FuTStNWnhrNWdPcC9mb2plZHhKOEdWZjRpUTltb21ON1FSeGJjYWFRTldkcmVGNjMrSwp0Q0NRVWt4SDk2YkxiNGxsWnoxRlVFc0pJTXBmVVNHdlZPczdFNmsvSHJuMDVhRFVldE5iQnhZRE56NEppMFZxCm9Ya0xBOHhyVG1OZXdDeTZNYnNxNGlYV2pWU1A2QmZxbUUrdXE3QUtqRGN4TTFjL0NUTmQ0TFNVRHQ2WjExd24KZ0pXMERuckJBb0dCQVBYSnA0K1A5Z0N5cGJNMExDLyswZDIyYlk4L2ROelJWQ1VVdmw1eFB3a0plZ1BoTTFpTwp5NGxzSUJMeUZDMGJ1WFJVY0ZOaVY5d3l0RVF2dE1pY05NSjVFam1kUjd0V2tqOEFEeFNUck90S2gra3RDQklwCkRGMFh5OUFseGRIK1paZlErNWc0dTNOcHppSFVBZGJyVHlQRFh0VkpPSS90QmFRTXNQaVBGbFlUQW9HQkFOclEKcnk5K3FEMDNtVkV1U1ZyZnNYWmdEaGtrcy9vVCtWUVVIRmtHa2dsY3BSQm9hd2IxcER5cU9uQ2x2VTNLSmQxVQpPWVFBbmVGS21UNUdBSzZ5VldpYVhlRkJRQjZyVkp5azJMcG5DaCthR2cveVUxZjJDcWxNdUZhN0NqYlo0K2ZiCnNRR0d3aHVsQnlEd3o2ZzZVZTlneFp6V3dDa0hxOElNdDdRcmVpUmJBb0dBRXRHLzdMUWZKK3FGMlhUVE5WR1QKakNCZHZ5d2lySTJ5bmF3NjcweElnVTZpY3cyWk90eWtKUCtNYlNiditJdzQ1UGxhS0doTlJlVHovSXlTa1JHMAowSGNvdUJTYzIzRkRmV05weEMrU2UrbVhBbm1hTnBuQ0FwYkIya3dxRzJ3WkowaXZHdmF0RTZjMFMwN0tYVVJqCktOL2FzUVlNT0tqelY1NUpKcDcrSE5VQ2dZRUFrUDZGaDJCVFZUVlpaOXpYQ050L3VhUU8wNFJwcWtYQUNvSEYKQXcwQ2lpZVV6Vm1UeWluTnFkRlhKanY5UStXMno0RzNGd3hka2VNZnhvOFdkcXgvUWZCQVV6b3NwZVg4REV5RAp2SWo0d1ZZWS9RWWpTZjhrczJpK0llS1E4eVhSQ2x1ZVlCZU8ya2l4ZjVkeTB0UEtaV2ZucW5UM0lua056R2ttCjljRjFqMDhDZ1lCbDFTUE96UUJGZnBiUFRMblpxbDRFclZTczRkMzZVRk9ZSkc5OXpTUHdSeVNhNUlPVzhaaTcKOFVicEZXaDFvK0ppenZucTlJTHlSb0FHWHZFeDloSmFFRXpzbXdkVEdCZzVMSDBTZmpVV1B4dU1Ic1FaTnhtcAp5Njh3L29id29yOEJrRmxEdldCRUpsSE56SkFoVEdyMHhNd0MwU3lTcks0RTZ2c0t5K0N3TUE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ca-secret
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUw4SW96M0ttNkJvWlVrTjVKY3FlZUV3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURReU1URTBNak16TkZvWERUSTJNRFF5TURFMApNak16TkZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUEwaFlVdXRob0l0SllhclZyVzNsQTFWM1FvclhaWllTVC9MeG9iM013TFRBNzdVZ3AKSWJFZjJyT3hLY0dHc0crOFVpVmpwZkpRc3hGRlBMMitvUlJHamNNaG1pWVlzaEk1QUt6SEJvVTdtZk50SFltZgplQ2xMNm9pTVNqWmRMSmNaMXJHcGxiV0FHejVSVXJ3cTRNL2FEYit6Sk9RZHhucDJKVG5IL3A3VVo0SWdFWW80ClkyZUhkRWRwZ0RNRVpCdkFxMW5xTXllNkhXWlV3MEd3aFJMdjRkT3NuaWJHaUNvY2duRHZkSy80Q1JxVXBQZCsKZDA0eVNxSkMzMEN6WGRYZ3F0V0VIVXRib2Njd2xzc2dnT0Fld2JSUk0rMzhlejc5YVAwVmlCemNuVGpvUkJobAo1dTN0cVhxeE00T21hTUN1Q245eVNJeVJIdDR5QXVmd054bEV3UUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGT1hQOC94cnVSTU9hVVlJMFk2aHR1UW81eWFlTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQU04QW5laEZjME1YMUlMUy9nbXZlc2tJRjBJSXBXZVhTUlNVWlVyUGYreHN5dFpvMHFFOERCCk40UHdSblNiR2ZsUnRpWWtnQU04azU1SDJHQ1JvWklSTDVYVlh2OUNZSDdCWXlybFJoWVExOVBGcjNjbFdVblcKZVU4YUNRZ09rNHhTNWJMOSttbE8rMTNyci9aMHZlampFbDA5OG5FZDlnbGtiQ1hnLzZmVHY4SnlkTmxwSzB1OQp3VmYrWVRaZG1ZNkhiVTRMY051dXZ3eEYvZ25FOC8rZ3poWERDUndjS3JBNEtEZTAwV1VtV2s4R29KazV6cldWClF6NVhLeDAzWXJIblBzd0lNRUlnRmloMHVrTDRTZVlINFNUMW1DM0hyQ25FRjRraDYwTEZVZmNYNVFxeTNjNTIKTmg4YUQ0Q00vdnl5d09LY0tKWk01eUg4dk5lMkFtaGMKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQU9DdkY2a2s1TWFBSGYzV0J0YXRKYTh3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURReU1URTBNak16TkZvWERUSTJNRFF5TURFMApNak16TkZvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXhzZk1TNDhKdmVTamE2ejVncU9iMzNqZndRWW8Kck9RenZjM1I2ckphZDZ5WENQS0QwZjQ4QXpOZWlXUTRDL05POUgrT0UzaDZZazErdkRDLzBnUFhBOVgxa3B0cApucmFpQVRQMjI3RTkyeTAyaGhMdVY1dk4vdHlhbGttandIeHJOTmhXejJZQnZXWFFYVnJjekdUYmkrRmxDNllvCmZiM0V3T0ljWlQzR3ZwMWV4dW5SOVNXaHpRQUpBVExOR1lmQXNMcGxjSnRvcW9CZ3RxNmU5TG1ZRFBTM0t6aksKa3czMWVmajk2RjRUT096QTV3TFowNjl6clNLUUx0dTdWeURCTmo1MWxhalZvTTlzWkxqZXBBS1pYSUl1UVR1Qgp5U2xBZXc1TElPL0Q0bDB2SjZocWFXZWZ1aXVQdXM2M1UyT3NuS3dUM0J3Y3IrcUlZdmRDVkNlU01RSURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCVGx6L1A4YTdrVERtbEdDTkdPb2JiawpLT2NtbmpBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBTWlTT3NpYU5qVWl0TEFZd1libUFHTG9seGxIT1F0V3dNQ3IyK1VVbzVMd21Ec28KNXZmSTdpSGNEK093b3lySXJyaXlhSDdDVmRRellxVzNjS1NNWGFla2d2dy9IOUVwR1IwdlRPMjBHWm5pUVNXMgpJR2Q1N0JwNFNzVmZramRKSGMvYzdjZHNaU2d5T3ZKeFRuVU1lSkI4aVIvN251ei8rRGI4anFJZE9SajRCajJJCmMvRTNRY3FZSHlTMHF3b1V6K3VHZHNmZkoxTlVQUHBxbVZxeGZjQnFkNCtPOFhyT1RuUnZUZzB4cXVIKzNoNE8KZ0xXbXFDZEJaOWlpM2hJSUtoN0JabkYyNWVpc2s2NUZIVDFRa0VnR3BMcCtjcEc3SE1PcEFOa2VxQW1lRU1udQpiSm00Mjhkd2poclZpT1g1T082cGJQZk53QVk2dXpuR0tCUGhSVGc9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBeHNmTVM0OEp2ZVNqYTZ6NWdxT2IzM2pmd1FZb3JPUXp2YzNSNnJKYWQ2eVhDUEtECjBmNDhBek5laVdRNEMvTk85SCtPRTNoNllrMSt2REMvMGdQWEE5WDFrcHRwbnJhaUFUUDIyN0U5MnkwMmhoTHUKVjV2Ti90eWFsa21qd0h4ck5OaFd6MllCdldYUVhWcmN6R1RiaStGbEM2WW9mYjNFd09JY1pUM0d2cDFleHVuUgo5U1doelFBSkFUTE5HWWZBc0xwbGNKdG9xb0JndHE2ZTlMbVlEUFMzS3pqS2t3MzFlZmo5NkY0VE9PekE1d0xaCjA2OXpyU0tRTHR1N1Z5REJOajUxbGFqVm9NOXNaTGplcEFLWlhJSXVRVHVCeVNsQWV3NUxJTy9ENGwwdko2aHEKYVdlZnVpdVB1czYzVTJPc25Ld1QzQndjcitxSVl2ZENWQ2VTTVFJREFRQUJBb0lCQUhTYUFLbVYxeVlQdHhqVApWMjBkWWJLOXFhc0ZYTmpGNTkvL21wSXNXc3IyYjRZdEU4d2JjTUtENElHQlN5c2Zad0llekkxNVQzalljbTRiCnZubUlEUmxQNllROUs4Q1E2d2ovblYrVFlYQnUzaHZaZ1B2ZEJnSHBEN2oycTFxZTRSZ1hpeHlQZnBmRjRHclMKZ05CWW5UdzVVOWQ0ZVNvQkppZnF1ck5jZ0hlUXVXZ2J2bGs1d0dPMHF6cDBtMmVBcjlRLzljdFBDVnpnQlVKRQp4UnZQN3FEek1RYUx4YjBFL1VxQ0pYTWxsQm5NcWFTUmxyMTJ1QkxEUEYvcHJqR1RtanVBVm1VeTV6eGpVUGI0ClpKSGpxbnN4cGR3RDFKN25pQnhLSzlSNFJRK1cycE02blduOUJhcGlKMDBUa1h5NVp0TnM3eGFlK21mOUt1MHUKd0JEajdzMENnWUVBMW1IVU1VaW1rRUlua3pybFowRjRsK1NWdFNJVEthRFFCSjUvbEMwcEt5Zk5FUXBlRmlBSQovZzhBQXAvcjBMZ1BwdTNBY1RZVkU0NFpsK0ZHcmQ2dHFSQ1pBaWZWeExhS0daeGtIR3NhSnhOeWRWMXROQllmCmNsSlNabzJtV1FOZE1SUGs2SlZoZTloM2c5RDQ0RW1oWWtpcWY5SFpkK2hWV09mVm9WQVZHdThDZ1lFQTdWNmMKV05rSVVVRXdDU2ZKb0ZaMnR1c3dvTnk5b3FQbWZDTDhIQ1pJMUVzZzZQU0xsM0Z6RzVTcHVWUUd5UDgxMzFndApvVDdGMTkwcXIwSFhlSXJQZFhZOUtXVWVjRk9LNVgxYi9Lc1YwZDlrYURQVTU3dzloVWdya3R6UkxwRDBZTE1WCmd0SzFqekxqRGxYNW4zSHhhZlhtV2gxVTlORWZIL25idUF1OHBOOENnWUJRdUIwUlFXMlZ1NUx6R0tYdnJ2TWQKSGZCUWR6Z0g0SWp5ZEV0Tkc0UDR2OCt5cnRpbU5BR3V4eThWemVrWWVYVkxRUkhJanJoNDJIUkNmNHdCUTJyWAowV3dMSjd5UmlMbU8weGZPcTNUNWFaVWJJOFpPYWxZRTBZSTlJdkNUYTNUWFdjcEMySndQNlgxMm9HUlU3dVJaCkFVdFJQVTVJbTY0bS80T3NiVjdFK1FLQmdFWElrY2hoRGR2dGdUUy8yTHZsajRNWlE3T1hFYjAxMkRYWWh5dXoKYWFmWDZuWHlKdk8vNjZwSkcxaWJ4bDdqQUxDSG1PcVZyTTVZZkFzSUhWT1g0NFBSM2d0RWFoMTF3aGpUc081bwpVY0xnblFFeGM3OHBEU0VZNVk2SWtvclJITGN0RHY3bCtYQis4bGV0bVBSeUtCb1JxOFlFWjR5TnlrdTVSZ29tCmtUQWJBb0dBUEgxeUZSTnZMODg1NUZ1ajJPZDZXcENBc3l4K2lHWmhRdEcvcWRBOWV4VU1LVGpSN2hadHp3MWYKRXpMdnY5a3FmN1dPZVpCM3hLVXpvMHdHRXRhOTlGSWhyWDNZNGxYVzk5WnBITHhKYzMyeVNwYkpBWm1UUXNudApMcldFZ2V6QmE4emtURmd2UUpNc1cwTTRoK3hkem12T3U0bzBnL1Q0dVVwa01MODBFMVk9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUw4SW96M0ttNkJvWlVrTjVKY3FlZUV3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURReU1URTBNak16TkZvWERUSTJNRFF5TURFMApNak16TkZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUEwaFlVdXRob0l0SllhclZyVzNsQTFWM1FvclhaWllTVC9MeG9iM013TFRBNzdVZ3AKSWJFZjJyT3hLY0dHc0crOFVpVmpwZkpRc3hGRlBMMitvUlJHamNNaG1pWVlzaEk1QUt6SEJvVTdtZk50SFltZgplQ2xMNm9pTVNqWmRMSmNaMXJHcGxiV0FHejVSVXJ3cTRNL2FEYit6Sk9RZHhucDJKVG5IL3A3VVo0SWdFWW80ClkyZUhkRWRwZ0RNRVpCdkFxMW5xTXllNkhXWlV3MEd3aFJMdjRkT3NuaWJHaUNvY2duRHZkSy80Q1JxVXBQZCsKZDA0eVNxSkMzMEN6WGRYZ3F0V0VIVXRib2Njd2xzc2dnT0Fld2JSUk0rMzhlejc5YVAwVmlCemNuVGpvUkJobAo1dTN0cVhxeE00T21hTUN1Q245eVNJeVJIdDR5QXVmd054bEV3UUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGT1hQOC94cnVSTU9hVVlJMFk2aHR1UW81eWFlTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQU04QW5laEZjME1YMUlMUy9nbXZlc2tJRjBJSXBXZVhTUlNVWlVyUGYreHN5dFpvMHFFOERCCk40UHdSblNiR2ZsUnRpWWtnQU04azU1SDJHQ1JvWklSTDVYVlh2OUNZSDdCWXlybFJoWVExOVBGcjNjbFdVblcKZVU4YUNRZ09rNHhTNWJMOSttbE8rMTNyci9aMHZlampFbDA5OG5FZDlnbGtiQ1hnLzZmVHY4SnlkTmxwSzB1OQp3VmYrWVRaZG1ZNkhiVTRMY051dXZ3eEYvZ25FOC8rZ3poWERDUndjS3JBNEtEZTAwV1VtV2s4R29KazV6cldWClF6NVhLeDAzWXJIblBzd0lNRUlnRmloMHVrTDRTZVlINFNUMW1DM0hyQ25FRjRraDYwTEZVZmNYNVFxeTNjNTIKTmg4YUQ0Q00vdnl5d09LY0tKWk01eUg4dk5lMkFtaGMKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVakNDQWpxZ0F3SUJBZ0lRUTB4NHNPT2pSTEkzUG5KdXNxdGx6REFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TkRJeE1UUXlNek0wV2hjTk1qWXdOREl3TVRReQpNek0wV2pBb01TWXdKQVlEVlFRRERCMHFMbTFsZEdGc0xtaDFZbUpzWlMxbmNuQmpMbU5wYkdsMWJTNXBiekNDCkFTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTFI3YXJFOFNVTXlLc2NGMWtFZmlkOFoKNG1CNVVXUE9iL1IzRXp3WTdFU1BQdXlKMitUdFJhenJXWjRhNnlTb2hnaXNnNW91bWJjQmJMSTRSMExZdFBjQQpTWnB6Q0k2dXl5WFhsblJreURDOVhkQS9xWWVpZVlRRjRzNHdJQmk2VWI4dDRsWlFZQjM2blh1YURURXgzWUdmCnc4V2VuTy9EanRZTWIxanVpMmJiTlRjZnhqZ003bWIvK3pXZktCT0s5WHJRMWJmcTZKMU8yc01SZUFnMkpCVkEKMDl3Ri9vektEVTgxVzVlMjM3WXVxL1o5aGJvMTR1KzNtbkRrK3lpWWpoQ1gzYTd2TEdBNkVYWk5WUFdUcXJxMwpwaE1MV2ZGeWd6Y1h3R0EyR2g0ckRGdmxtVTZVbEVaVVBNemkrb253VWNZMmFWRm1NaDJCaldGRHovaXNISU1DCkF3RUFBYU9CaXpDQmlEQU9CZ05WSFE4QkFmOEVCQU1DQmFBd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUcKQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXdId1lEVlIwakJCZ3dGb0FVNWMvei9HdTVFdzVwUmdqUgpqcUcyNUNqbkpwNHdLQVlEVlIwUkJDRXdINElkS2k1dFpYUmhiQzVvZFdKaWJHVXRaM0p3WXk1amFXeHBkVzB1CmFXOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBQy94TnNxSXZFSDV5ckY3Um90elM5TmFkdDlnUG9qMCt6NHIKcERQV205L2JMQlhaVm9QS3F2Y1h5MEFJMmR3SUswNXJQZmtmOFh3SzZTRXhEVHdpZnd6ZEY0dVJKVFhEMWRWQgpUVEJkcmJsTHJ1N1JTdXJHbmtjcEN0VVMwTkVxQ3BadXJKTTQ2cHdrOVZyY3pVbVZkYWpxcWlWQXNibThkZ0p1CjVFWlFENURWRWNwdTI0RkM4YldCaXFkU1lmOFloUTF2N0E1R2tZMS9WNnhlWnlaYWtSOEpMSHh1MEJya1F2eWcKYjRJN3FiOEhzRjBOYUcxTXRSWVUvaVVyV3dQS2J3VmJoakxiYk1PZURpVGNlcEU1SHF5Smk2WUU0Y2IvazVUSgprUFlwbDNEdDFObEMxd3lsSHZVbjlUWXA1anYwUHhtZ1FTWWxZZVlYZXluS1kxalRCcWc9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBdEh0cXNUeEpReklxeHdYV1FSK0ozeG5pWUhsUlk4NXY5SGNUUEJqc1JJOCs3SW5iCjVPMUZyT3RabmhyckpLaUdDS3lEbWk2WnR3RnNzamhIUXRpMDl3Qkptbk1JanE3TEpkZVdkR1RJTUwxZDBEK3AKaDZKNWhBWGl6akFnR0xwUnZ5M2lWbEJnSGZxZGU1b05NVEhkZ1ovRHhaNmM3OE9PMWd4dldPNkxadHMxTngvRwpPQXp1WnYvN05aOG9FNHIxZXREVnQrcm9uVTdhd3hGNENEWWtGVURUM0FYK2pNb05UelZibDdiZnRpNnI5bjJGCnVqWGk3N2VhY09UN0tKaU9FSmZkcnU4c1lEb1JkazFVOVpPcXVyZW1Fd3RaOFhLRE54ZkFZRFlhSGlzTVcrV1oKVHBTVVJsUTh6T0w2aWZCUnhqWnBVV1l5SFlHTllVUFArS3djZ3dJREFRQUJBb0lCQVFDQ0RqVnlCbGxjM0xmSwp0MEFQcWFSMmFuYWd3b3VOK21MZXJUZmxKS2lOTnhSRzY0alR6TTlhcmpYa0lzMnptdVVMTnhXV2MySTlaLzlsCjVmd2tCWGxTVEppOWZZdDdGaVk1M01NRW1PTlJqQVFnWHQvUlo1bGRNOGllZ0R1QTFqSzJLMkJnaG9iYzA0M00KVmRTUDBMa29BWExYNDFaL3lGSVRtTjVjSFhuQzRabjVvN2NpUjJYQUJGNGErSmVVM0p4dWw4UG93SWZyK2NMVApoWDR2UitXM1Q3blV5MnhjQkFML01jN1A0Z2tZekxKaE9ubEh5NFZHL1JtVzNrL3JrNjF3UVdXVENIZnIrNnpjClcxM3MwMDhqcEpIckVOYnFBTEtoMmNITHVCK2VRNVN0VkhxOWZYVkxNcnA3Q3pXZ29NMEgydmJtMlRUQjNqOU0KU0FHREwySmhBb0dCQU5LQWNMZzdEb3M2VUMrdWhDK21PdDM5NFAvU0pOK1NLSlRLcHE5b3BTcHdsV2VHWjE1QgpOUFdjZ1Z3QXcvNS9RdWx0NnVyQWtXZzZPYlUxUVlsU2FKNDIrdEFMaEszak1oMmJPbThRQ01hdzMxNU9PdURSCkUza0RYMGJCNjFMS0ZleGhQak1TTnRROWd0ZlFyeGx0emQwbkdIMDlueitYN0h3WDBZbFZNcnk3QW9HQkFOdDkKNjJJaENld3VmRm45Qzh6WTRZdUIwSUE4ZGE5MzdJRnJDdHdjc3NNK3RWNlZxaEdKb0U3YVhpVUc1M2djMW1LTApHdDZHNmQ2dnRoS29zWWpKNS9HbWJTS0VSMjEwT0JoVGl3MTlIRlJaNE5ZdlBia1FvYXNOM3ZGTTRrSnJxc2FUClJpbGt2K3Bnc3V1NWNVVmlPUFFYbVN6SHZzWm02QUpvMWhWeHZVYlpBb0dCQUpIKy95N24xdWg5bzB2TzBHTnoKK1hRcU56bDIrSmdQZVJIcGs3NG82QlVOVExJbXA5N1pmdSt5Z28zYkFoU3JFeTl2U3ZWU1pnZFNDdUJCZFpqVwpqVFRla1FwbVVybC8wQ3gwa3d5Z3BGV2FLdkh2ZENxbEY4cGdxbDRhOVNuUWUzQWM2ZFRtRngwUkpJU21laXM2CjJ3TTlzR0I4c3N5YWhDeDFJS0VOZEVrdEFvR0FSbzVjdXdlWjAvVkJmZi9zNmlXUm96SFFuMWhRRUY3QmhQeXUKMmdEVHFoV2ZZYzlFZ3l5MWZvT05uZU54UnRnbVJqa25JdjlGY0pNVk9UeEhEWXl4NWFrMURkSnR6NDU3ZGI1dApSYUhCR0pCbnlSSVlpa1FCWkNZcVUzRCtqcEZqclQrc1h5UUcyVVhLWGlJWGVsRlBzNDllYXRtdXhzSlB0RzZVCjJ3SGI4VWtDZ1lFQXU1UXJ3TmxsSDlPYnlkR1loUW5USTl5RzZJaEZ1MFJIOTRBbDh4YmlmUnM4Q0YvNE53dHkKa3ZIVHIvU1A0SE5Jd1VIMStLMW9jQlF4OEh1bnZqWkZpbmUxTklUSnZSZUd2QmVYNlF3NUdGTDFLOUpMTGllQQpDbjluVUpMMkhhdUlhenpxYjN6b0NsdXU5VVpSYTFBNmpkNTJRcG1zUTIxVmZ3V1FMMVVmdG5VPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: 7686f6d27f88dee8dcab04eaa7fa6bf6de86155d440f7de6f20896f60dc33b4a
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.20.20
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/operator-generic:v1.13.2@sha256:a1982c0a22297aaac3563e428c330e17668305a41865a842dec53d241c5490ab
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: c168c3ad813c1adbd265ee9b6d1ed2fd2be0fae5752035a4996cd1f6e1d6e64b
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.13.2@sha256:51b772cab0724511583c3da3286439791dc67d7c35077fa30eaba3b5d555f8f4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          tcpSocket:
            port: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: hubble-server-ca.crt
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: 02d6b04b131029fae39270192dcff10fa3a64af9d1d4d0049f1efbc3f5526a34
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.11.0@sha256:bcb369c47cada2d4257d63d3749f7f87c91dde32e010b223597306de95d1ecc8
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.11.0@sha256:14c04d11f78da5c363f88592abae8d2ecee3cbe009f443ef11df6ac5f692d839
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: 7686f6d27f88dee8dcab04eaa7fa6bf6de86155d440f7de6f20896f60dc33b4a
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              key: cni-chaining-mode
              name: cilium-config
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              key: custom-cni-conf
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.20.20
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                /cni-install.sh --enable-debug=false --cni-exclusive=true --log-file=/var/run/cilium/cilium-cni.log
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.20.20
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.20.20
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        secret:
          defaultMode: 256
          optional: true
          secretName: cilium-clustermesh
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
