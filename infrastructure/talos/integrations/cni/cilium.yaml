apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  - ciliumcidrgroups
  - ciliuml2announcementpolicies
  - ciliumpodippools
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  - ciliuml2announcementpolicies/status
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  - ciliumcidrgroups.cilium.io
  - ciliuml2announcementpolicies.cilium.io
  - ciliumpodippools.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumpodippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumpodippools
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-algorithm: maglev
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: dsr
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "1"
  cluster-name: metal
  cni-exclusive: "false"
  cni-log-file: /var/run/cilium/cilium-cni.log
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  disable-cnp-status-updates: "false"
  egress-gateway-reconciliation-trigger-interval: 1s
  enable-auto-protect-node-port-range: "true"
  enable-bandwidth-manager: "true"
  enable-bbr: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "false"
  enable-bpf-masquerade: "true"
  enable-bpf-tproxy: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ipv4: "true"
  enable-ipv4-big-tcp: "false"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-networkpolicy: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "true"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  endpoint-status: policy
  external-envoy-proxy: "false"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA drop tcp flow port-distribution icmp http
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipam-cilium-node-update-rate: 15s
  ipv4-native-routing-cidr: 10.244.0.0/16
  k8s-client-burst: "10"
  k8s-client-qps: "5"
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  mesh-auth-enabled: "true"
  mesh-auth-gc-interval: 5m0s
  mesh-auth-queue-size: "1024"
  mesh-auth-rotated-identities-queue-size: "1024"
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  proxy-connect-timeout: "2"
  proxy-max-connection-duration-seconds: "0"
  proxy-max-requests-per-connection: "0"
  proxy-prometheus-port: "9964"
  remove-cilium-node-taints: "true"
  routing-mode: native
  set-cilium-is-up-condition: "true"
  set-cilium-node-taints: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-proxy-response-max-delay: 100ms
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
  write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: metal\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ngops: true\ngops-port: \"9893\"\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max:
    \nsort-buffer-drain-timeout: \ntls-hubble-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-hubble-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUx5Mk94ZFlHUmUrb1IyVk5YaFJGS1V3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRBeE9URXhNVFl6TVZvWERUSTJNVEF4T0RFeApNVFl6TVZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFxd0lDNFE0VVcwdVdCak4zbXJvUmE0djZVS3kyc3FrSVc3SzJvempIMnFRWmFpZXkKL0VOcGlOVEpjdnN1cDU0ZHM0bVAxNFp4aEZjSC91ek9zMm9qcGtTQ3pEd0YwRXlDOHJEeU9xcEF1NzBINGUxYwpPalo5WXdWS2hvUEhhQVJOSW9XWkFDSUZ6WDFjVXRGNHJtaXNNZitZMGJNQ2VXTkRkT2V4dnA2b2tsS0t3SWRlClprais0elYrWEJWOVVWemNub0JjWU5BVFhmUE5GNzNoV1ZFTS9NcjZIN3FMWTNERGU0ejF0L1dzRmE1bWNLVzYKTm5ZVHA0TmRKVHVSNmFPWTRvRmtaTm1rRnoreVpBNExTQTJuU2hBaGpjT0lYd0FpMTE0UXRDcjNaWHkySXlMNApjTVdJaFczeUQvZEM4STk1NEN6VkRvSWZhVzVsTkF5V0N2UkdyUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGTGd6dzRaRGZuZ3o1eTZhUXExV1lOWkVLSWdoTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQmtCUVFEMlpEdmRXMlZGOUcyRmVEN1VSSEd3SWJycG5XQm92aGNyS2w5akYrakhrVHk0N3c3Cjc4eXRKV01qMXlhUFlGeWtvbHV6Y1RzVVczeHVib3dJTVlzN3hhUzFDSndJVkx4K20xTEZ1SjY2K2tMVWhGMkoKdTBoUVBnOXQrM2ozUjM3Q2k2eUx6RGZNUDQzdC9LT2cyUlEweXdSMUtmaHNSdXBCK0RNTk5PUGFIWUYrTW52SgpGNDU5TkpDWUNzQzRoS1p5Wi9rOGs4V21aMFhBenVTWTJLYTZvVGVLWWIzTnhqdDRJbW1aTlhyRlhmbEVTVEN5CmNJZjE5Y1ZDek9TRCtVbWd0ZnBBVFhWRi9kY0NaUHBHNUdoZFd0M3hEcjVRY2ZSeUlUb0luVTJDcW5vQ0RvOUUKbmY1VW5xNzR6M3RQMHRQY0gxOEwrbnVFYVNlTUhGVXcKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBcXdJQzRRNFVXMHVXQmpOM21yb1JhNHY2VUt5MnNxa0lXN0syb3pqSDJxUVphaWV5Ci9FTnBpTlRKY3ZzdXA1NGRzNG1QMTRaeGhGY0gvdXpPczJvanBrU0N6RHdGMEV5QzhyRHlPcXBBdTcwSDRlMWMKT2paOVl3Vktob1BIYUFSTklvV1pBQ0lGelgxY1V0RjRybWlzTWYrWTBiTUNlV05EZE9leHZwNm9rbEtLd0lkZQpaa2orNHpWK1hCVjlVVnpjbm9CY1lOQVRYZlBORjczaFdWRU0vTXI2SDdxTFkzRERlNHoxdC9Xc0ZhNW1jS1c2Ck5uWVRwNE5kSlR1UjZhT1k0b0ZrWk5ta0Z6K3laQTRMU0EyblNoQWhqY09JWHdBaTExNFF0Q3IzWlh5Mkl5TDQKY01XSWhXM3lEL2RDOEk5NTRDelZEb0lmYVc1bE5BeVdDdlJHclFJREFRQUJBb0lCQUdveEtJcUxETGNZdkFRRAp4OTBNZUs3WlVNcnlSYzJ5Uzk5dG5oN0RycyttSWFZYkd2bXQvd1lhWlRLQ3Fwa3FCZldza2VkYnRIaGk5ek1sCjZNSGZRbDRJbzFTaVhWWFpmV09wMy9Id01aeWpxUlp5S0ZoNTUra3Fxdm5YTVdmMWE5VHBNM2F5cWZuT1JCdWwKdXBSTHFjcXVsejU1TkNzZktnK1pwWFhpM25sbHhrNUZQM2JHUWFoNWxWR0lVVVJKank3MUU3ZE4wdThpbkhQTQpCN3F2dUw3SzVzcmkyb2oraWQzemxIQWxiSFhHeXVjNDFIQ0llYjNPaVAyM2h1RitvV3Y4VHZpMzNoNUVvS3ErCi9Pd0F6aHRrbHRaM0pBeEF2b3ZDbUJCRENmd1RwS0xrWDBGa1BMTmttdHlXTUpRMWFYSkVNNVJBRmlvRTJlNHgKbzljcTZtRUNnWUVBeG92c043MTVVaGJPVE1xZ2EwV2tFU01SWkE2QnlhYzNsSGl2MnZtdXRSTzRvTVdvZTE4egpSRDFiUHZDY1hnbkxsMnd3SmpEVXBIQmxtb3ZoTVRQN3R3TWNHOUk2cGhKY05qdkVtTVUzQWhQeTNoSVZYSzRZCmljNXAwNHBUUlA3MW9FTXJzUjdsWUQ0OW5OeVFMT3k1TktSOGpWa2UwM2kxbmxNOW52TXhIL2tDZ1lFQTNINE8KTXBlWEE4Vms0dWY0cVJGbG1mcldYNTBWSTJTY1cwM1B0WC96aXhlVUtQNGVyMHBLSDJzWk5lQzB6cThEV0RYeQpqVEEza2wwOWxhSTg5REFKMUp2T25jZzl5Yk41UkJCSThqZjQwZ0tpdTAxWWNTZEEzYkVBUGZuTytoS05wZXZpCjIrdFFZalBMS2JINzN4M0NmdUZjWGdZbFlMS3NYQ1laak5ZMk1WVUNnWUFqQSs1RzdrMkZJcXlEY29EVUtsWUQKQjdJN2VTdCtpdFVNaERSUFpCVmhyZmF6cytoQXljdGF6NDlXREUwbmNJYk5UN0UyS3dwMWJiVWRpbW5PcWFKTQo1bW1BcHBUZFVRT2VOUEE1R1I3WWFQZytIZVpTa0FtWDFDVnB2MDFzTDZMVi9zS24zQkVMNWk0cmllS0xhYnhJCkFuSk00MWpDWnRsdzhMRS9aUmhXMFFLQmdHZEtVZ0pYU3pKRURWL1NoWVZHRmcrTkYxSFJOMjdPR2dVWHJYNzgKQXE0ZERKWXJmVnBtZGRURUNocFlPcnM3OTFnaVpZN0lrSy9yS0FkcDZoNEdSd1NuUEtKamhMWnhjaFIxZ0lhZgp1OXM5eXRmdGdzbjNOb2JqL1JZTGFXOXlzNUtQcjBXUXRhWmJWd2dnVGJxV3FWOWcyVEZldGJIWDRiQ0ZWS0RLClZMYkZBb0dBVU9LbkREMW1EQmRnNyttMU5hTFJFODQyc2FKSmpFT2NoV1VSZ3dRc1ZzVkV0bHAvZ1U1TjdlMksKV1o0MWxBUGZ3QmVGOGwvN3FDeW5OUFZFanc3QnF4YWF0MElCUCtBbHRzcWsrM2ZvSk1vT1ltWmdqcWovTTYvRQp3NTZBOWNXYmZyRmJ6Q0IrTjlsc3lBZndVY2NoM3g4bXk3RjNCZUZEZTdLcCtKUDZ0QWM9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUx5Mk94ZFlHUmUrb1IyVk5YaFJGS1V3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRBeE9URXhNVFl6TVZvWERUSTJNVEF4T0RFeApNVFl6TVZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFxd0lDNFE0VVcwdVdCak4zbXJvUmE0djZVS3kyc3FrSVc3SzJvempIMnFRWmFpZXkKL0VOcGlOVEpjdnN1cDU0ZHM0bVAxNFp4aEZjSC91ek9zMm9qcGtTQ3pEd0YwRXlDOHJEeU9xcEF1NzBINGUxYwpPalo5WXdWS2hvUEhhQVJOSW9XWkFDSUZ6WDFjVXRGNHJtaXNNZitZMGJNQ2VXTkRkT2V4dnA2b2tsS0t3SWRlClprais0elYrWEJWOVVWemNub0JjWU5BVFhmUE5GNzNoV1ZFTS9NcjZIN3FMWTNERGU0ejF0L1dzRmE1bWNLVzYKTm5ZVHA0TmRKVHVSNmFPWTRvRmtaTm1rRnoreVpBNExTQTJuU2hBaGpjT0lYd0FpMTE0UXRDcjNaWHkySXlMNApjTVdJaFczeUQvZEM4STk1NEN6VkRvSWZhVzVsTkF5V0N2UkdyUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGTGd6dzRaRGZuZ3o1eTZhUXExV1lOWkVLSWdoTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQmtCUVFEMlpEdmRXMlZGOUcyRmVEN1VSSEd3SWJycG5XQm92aGNyS2w5akYrakhrVHk0N3c3Cjc4eXRKV01qMXlhUFlGeWtvbHV6Y1RzVVczeHVib3dJTVlzN3hhUzFDSndJVkx4K20xTEZ1SjY2K2tMVWhGMkoKdTBoUVBnOXQrM2ozUjM3Q2k2eUx6RGZNUDQzdC9LT2cyUlEweXdSMUtmaHNSdXBCK0RNTk5PUGFIWUYrTW52SgpGNDU5TkpDWUNzQzRoS1p5Wi9rOGs4V21aMFhBenVTWTJLYTZvVGVLWWIzTnhqdDRJbW1aTlhyRlhmbEVTVEN5CmNJZjE5Y1ZDek9TRCtVbWd0ZnBBVFhWRi9kY0NaUHBHNUdoZFd0M3hEcjVRY2ZSeUlUb0luVTJDcW5vQ0RvOUUKbmY1VW5xNzR6M3RQMHRQY0gxOEwrbnVFYVNlTUhGVXcKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQUlWR09SeGhhbDVTazBwSlJrcXhMcG93RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRBeE9URXhNVFl6TVZvWERUSTJNVEF4T0RFeApNVFl6TVZvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTBDd05MTXdhNGdtK2k4TVU4ZHYzZktWN3JXZTMKK0RwSXlqcVBWOGZsQnZkQ0lNY3FNR1BEV3ZmWW9MQ01odmxMcHUvMmsxVmVsMkFISGJXY3d4UEZ3cW9Fb3F1bgpadmZVdktxQlA0M0Z2c0FCNDZGczZXdU1kNGtpaWF3UjhMZFB2ZmxuWDB3TFREQ1FQejVBR01oTmdFbGlMV0RnCklxa0NUQ0tLUE0yaDdTdk83SmxyU25FTy8vckhtNVRudzFFTmlOTm1WR1Z4Z3BpMEM1a1ZLY1ZHTzhKckRxcW8KZTdIalhMOG5sS3lVMlcyMVBrK0s1NXFmUkVVUWNNcXRVMWRQVjB4RXp5Z08vTEx5WHltRnF0OUNqelBPRzZFbQpCSUNqQW5abU1Rb0ZlRGtsUjhKSWRweitROGVUdTlvZitJUnh4V21IT0puSjhFVFFqNStoR09iSkx3SURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCUzRNOE9HUTM1NE0rY3Vta0t0Vm1EVwpSQ2lJSVRBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBRW9wbjFVOThwby9JVGJuSklNclY0RkpBb09PbEt2YkYwWDNiUE5PeXdPUWFac2IKZ0FHaE1hSUljcHRUeitNT3htekZOS0dLSUVkN2llNGhFOGdMYkFhQzFXOHYzdjVPVGNod2ZEWmRYd0pRVFUyNgpMVmdDZFBRelF1bzJJbUpUN0RySlBKcG1JYlVSeFBPRTVRVWFhQVhjdVEyRXpOYlVvdEs2TGpOazZORVVnZzZ4CmdLV2s4Mi91aXUrTDJ6RmQzb1pVODJURWpHSFhXQi9aVUhjUndaZUQvanVJamYrMnA3MTZVNG9jQmRLZHcraW8KUlhYbnZpd0ZnSFpKV1JsWkxsWmVGMEphbk1CTnpyTVZSc0YzNE0waGdiaDY3NjRhUnpwektXWkx5ckNQbVpTWQpKLzdIV0dHeXE3akVJYS82WmN0WVB6T2M1UXgyRnd3aTd1eDMxZ1E9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBMEN3TkxNd2E0Z20raThNVThkdjNmS1Y3cldlMytEcEl5anFQVjhmbEJ2ZENJTWNxCk1HUERXdmZZb0xDTWh2bExwdS8yazFWZWwyQUhIYldjd3hQRndxb0VvcXVuWnZmVXZLcUJQNDNGdnNBQjQ2RnMKNld1TWQ0a2lpYXdSOExkUHZmbG5YMHdMVERDUVB6NUFHTWhOZ0VsaUxXRGdJcWtDVENLS1BNMmg3U3ZPN0pscgpTbkVPLy9ySG01VG53MUVOaU5ObVZHVnhncGkwQzVrVktjVkdPOEpyRHFxb2U3SGpYTDhubEt5VTJXMjFQaytLCjU1cWZSRVVRY01xdFUxZFBWMHhFenlnTy9MTHlYeW1GcXQ5Q2p6UE9HNkVtQklDakFuWm1NUW9GZURrbFI4SkkKZHB6K1E4ZVR1OW9mK0lSeHhXbUhPSm5KOEVUUWo1K2hHT2JKTHdJREFRQUJBb0lCQVFDQUhmeGx5NS9uNlhOWgo5TkFaSWZXb3d2ZmcrdXBnWFE2YlYzc00zVHQ1RkFlZ3dMS1lZVzNEdUxHY0E4d1k3YWkvcndPa0hYQS8zWnZECmp4aFJmd1BCRUg0VjEyc0psaEZabzk0enpQOGNySEw5TTBZaVNreUM3T1ZTc1pIQkFqQ1RqTUV3QjA4VXJ2YTMKMVlvQk5wVnNGTDNWaTcrbDFUcFN2UmN5NEtOOW9ORVM0UFF5SnNlYkZSaXdHTnlDdmw0UEdYeURHQ2ZHZGZUUQpISTVNanR0SjUxbml6cEJUL2VzL0N0cFdlTkZJcUdDVHk0SVgzakJTcjZTUmQ1VDVwMktRMDZxMnZONVBPMTZhCjFDaXFua29ZSmhnejBUZjJPektxbXNiYUtQa0liaTBsZU1ReVJFaWtJOEFHRTgvTzJ1UURMN3pWWStpN0I1S2EKTm1vR2pIR0JBb0dCQU5GdjBxaVQ0WDdWczRHL3ZuWTdaT1ZteHV6ZkV5dS9weUg4QWEyRGdBeDB0T1VIcjZ0VApZZUFpWm5DL2tDVlFWWUl2akFUTEZFSWpGSnZnNmNheC9PWVdkZndiQTVEN0IzYzdVcTlyakZaNU50RXRVejFQCjc5cFBKYW1XSVhtcjRIMVRwaklVWm5IUUtjdzZoZld1TXNOcmUvbHd2NVN4cmF4djlPV3BxQTJQQW9HQkFQNTAKUHZETVRLZVM0cCtpeCs0dEJ5QmVIcUVjVlFqR2pPbGxMYXlGSlBpZ2lQL2RBdDFhLzRaV2s4OElFZmIxWUdVbApxY2Y0elZqeW9MMFFLY1k5Y3ZXL3ljOEhjWG1HWUFEbFBYOGNXOHB4cWNPTjllUGlsaStaYkZNQ3E1ZzNmUjJ1CkU5TmtEUGhTbFlPMUpaRDBoMDdIRXBVRmxCK2xZbkFjZ3luWFJQcGhBb0dCQUl4eDNHWkhwTE9WUXVjRFdnbVgKRXJYekVmck9MT0R0aUhwMXIvcFhjSXJweUZTOXJzUEpDcDF1OUJzdm1zNHE3T3g4VGZ6NDRnRG4zVzRhaVNwQgpPVUppVllSVjZUSlQ1RkhFYWxKUVlLK3NZV0lzYnVGeXRYbEVFaEdESjdlYjF0SzBRWUxidzBjWFBMQkRub2w5CjQzVEFvMFpHb1hKcEkvbTZxaE5JamZWcEFvR0FRQ2oxbWVnWnlBTThpMzRUSlpaSy9ybGN4Y2tNRS90a21wRTkKbEF1Nmg4cUs0T0ZNa0o0YVlqaEFhdXFoQlFGWVBnamlKNTh2d0NibHF1YUJjaEFhaGFiSGJ5RjBWbTB3bGVrMwp1VzVnSXNySVFKdnlEWFViNDRLdkVydFFvMEFTbDBKR2szM2QyMXVQZ2JkU2NwdUY1ckpCbUR2ZzNwM29GVmJMCkoraTA1dUVDZ1lBWGVvQlltcE9RUEd5aENvTlBoWG9Pa0lYVjV4VFRvdXFDaFducCtWalc2TXZSQUZSejhMbzkKMHhFb1ZWUlBmREZEUjBSMFpMTWxDTVhrbzArVmhRZ2NUQitSRTVVOUhxQTZGajJmYzZvMTZYOGZabS9aQ0lIcApuRCtyaXpRSkZGL0lTQ2V5L2pJSlRKc1NMWTM5c1Z2c0QwcStVTGhFV0RuZUN0TDdGbXZUelE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUx5Mk94ZFlHUmUrb1IyVk5YaFJGS1V3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRBeE9URXhNVFl6TVZvWERUSTJNVEF4T0RFeApNVFl6TVZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFxd0lDNFE0VVcwdVdCak4zbXJvUmE0djZVS3kyc3FrSVc3SzJvempIMnFRWmFpZXkKL0VOcGlOVEpjdnN1cDU0ZHM0bVAxNFp4aEZjSC91ek9zMm9qcGtTQ3pEd0YwRXlDOHJEeU9xcEF1NzBINGUxYwpPalo5WXdWS2hvUEhhQVJOSW9XWkFDSUZ6WDFjVXRGNHJtaXNNZitZMGJNQ2VXTkRkT2V4dnA2b2tsS0t3SWRlClprais0elYrWEJWOVVWemNub0JjWU5BVFhmUE5GNzNoV1ZFTS9NcjZIN3FMWTNERGU0ejF0L1dzRmE1bWNLVzYKTm5ZVHA0TmRKVHVSNmFPWTRvRmtaTm1rRnoreVpBNExTQTJuU2hBaGpjT0lYd0FpMTE0UXRDcjNaWHkySXlMNApjTVdJaFczeUQvZEM4STk1NEN6VkRvSWZhVzVsTkF5V0N2UkdyUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGTGd6dzRaRGZuZ3o1eTZhUXExV1lOWkVLSWdoTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQmtCUVFEMlpEdmRXMlZGOUcyRmVEN1VSSEd3SWJycG5XQm92aGNyS2w5akYrakhrVHk0N3c3Cjc4eXRKV01qMXlhUFlGeWtvbHV6Y1RzVVczeHVib3dJTVlzN3hhUzFDSndJVkx4K20xTEZ1SjY2K2tMVWhGMkoKdTBoUVBnOXQrM2ozUjM3Q2k2eUx6RGZNUDQzdC9LT2cyUlEweXdSMUtmaHNSdXBCK0RNTk5PUGFIWUYrTW52SgpGNDU5TkpDWUNzQzRoS1p5Wi9rOGs4V21aMFhBenVTWTJLYTZvVGVLWWIzTnhqdDRJbW1aTlhyRlhmbEVTVEN5CmNJZjE5Y1ZDek9TRCtVbWd0ZnBBVFhWRi9kY0NaUHBHNUdoZFd0M3hEcjVRY2ZSeUlUb0luVTJDcW5vQ0RvOUUKbmY1VW5xNzR6M3RQMHRQY0gxOEwrbnVFYVNlTUhGVXcKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVekNDQWp1Z0F3SUJBZ0lSQUk1RVBiNkUrRjJHd3E5cDJNK1o5M0l3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRBeE9URXhNVFl6TVZvWERUSTJNVEF4T0RFeApNVFl6TVZvd0tERW1NQ1FHQTFVRUF3d2RLaTV0WlhSaGJDNW9kV0ppYkdVdFozSndZeTVqYVd4cGRXMHVhVzh3CmdnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUMrQzFvcXFKd2NETzg3ak0vNkJpQkUKRklJWmp4Z0NWOWFmYkx4OTJhV0RkdW91VlFOWDJOcnNOeEp3MjNOeDB0S3kxTzNmc2VvQ1FBUC93YkxEZnljVgpRNkZGK2IxTGFjZnQydU53Y2ZxYXBmNy9MT09lVTR3akZ5dkZCaEV2eEhCUlZ3Y291R2VJWXNPS1h5Tmp6anpIClNaUVdBamk3MmZ0ZVJDT29kSjN2bkhqYzF2ZmZsYXJtVmthbURxWDNtSXg2OWVhZGZMNGtBNExXMDFjQ0l5R3AKL1dGbUFrcTBVT2l4RzQwSUtQODhjYXpLUENmYzdCbjFnNk9SeTRqY2kweFoxSjI3U28zQkRjcFFPTzNOcUdLOQpDOUMyRTdTa1ZzZ0hwMVg3K3lURThQakQ2b09rOG5sTUNyQzNaTGFEb2lCQnZJamMrMTJsZnFDVEo2dXYrNzVSCkFnTUJBQUdqZ1lzd2dZZ3dEZ1lEVlIwUEFRSC9CQVFEQWdXZ01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUIKQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RUFqQUFNQjhHQTFVZEl3UVlNQmFBRkxnenc0WkRmbmd6NXk2YQpRcTFXWU5aRUtJZ2hNQ2dHQTFVZEVRUWhNQitDSFNvdWJXVjBZV3d1YUhWaVlteGxMV2R5Y0dNdVkybHNhWFZ0CkxtbHZNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUFMTyt0NitxdFRaVWFmeTBVMEZiM3lFcWl0M2JPUkVUS1QKTmthRGpmM2RLOU1Sb0VXZ2ZXRmNkdXIyS0FhYUgyNi9pWDE0SCtuNGlZRUV2VUtpbHRCVjRTcW9NZDJjbC8zaQptT050UWJjSGNqTGdQUjBUZEhIR1ppZkcwc2ZWZ2YzbzhHK1hHVlBGM0lNY2xZaWRYWDVLSEVIZ0pzSmE3bFlwCnJZak9RNHNyays4N085NHhWWGF4dm9hc3RPNkloY1BvUGVJQ0k2T0kwSldoMjdyK3puQTgyV21EM2h4bVowaEEKa2Q3bDJSTjNWSDE0L292R0ZpSVlCOEFxclFSNG5lZ3NqTU1hQTE1K1RCMDNFdWREVzlTSm5yTHltM2Nmem1MawpkaHlPdG1iaWtnZE80Y1VsRyt0SjNlNFhRVnNLQnBramttUlNJRlR0MW0zY3BQZUx0NzlzCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdmd0YUtxaWNIQXp2TzR6UCtnWWdSQlNDR1k4WUFsZlduMnk4ZmRtbGczYnFMbFVEClY5amE3RGNTY050emNkTFNzdFR0MzdIcUFrQUQvOEd5dzM4bkZVT2hSZm05UzJuSDdkcmpjSEg2bXFYKy95emoKbmxPTUl4Y3J4UVlSTDhSd1VWY0hLTGhuaUdMRGlsOGpZODQ4eDBtVUZnSTR1OW43WGtRanFIU2Q3NXg0M05iMwozNVdxNWxaR3BnNmw5NWlNZXZYbW5YeStKQU9DMXROWEFpTWhxZjFoWmdKS3RGRG9zUnVOQ0NqL1BIR3N5anduCjNPd1o5WU9qa2N1STNJdE1XZFNkdTBxTndRM0tVRGp0emFoaXZRdlF0aE8wcEZiSUI2ZFYrL3NreFBENHcrcUQKcFBKNVRBcXd0MlMyZzZJZ1FieUkzUHRkcFg2Z2t5ZXJyL3UrVVFJREFRQUJBb0lCQUR4QlJ5NWRWVm5EZEJxUwpjK0tYREtYcFJyS3AzdmZuTjhKR2JLRU9YOThGMWd3b29pMjVNUGhTSWNPc29MYkhIRXpkSENxZnMwMVJWTE5ECmk5VldQR01PbFZTbGNUSTI4TS9tWmRSaUh3M25jYWtnWjI3c21ITUx4ckhxVVlxdW90bjNXT3E5UlA1R0tpOTIKS0xkZFRZSDJQMENYSmJ2UnlsUkNFSGc1dVZXZDM5NHUwdjJrKzdkU0JXSjhHNFBtVlNzb2pYdGNqck1YSVpwRAp5d3J5blpyMmtkNFBvQ0REU2t5SlRsMXBMQmJGdmpTcHJ2Z1gxU095d0ExU1IwQk1reHM4SW44VnRSa1lqQTQrCi9GMnp2a2IvRnZscERqaTVGL2dYaDNQNDhvYTk1RVFYYnFFRFFQNTdxSUZVVGpzVEIyWHJOeXVaWUlZUG03Q0wKbzBIbzdyMENnWUVBNTdvYkl3UngrT215NGJCNUxIRm12QlFvUHQwT2ljK2wvWFdZUkdKYThOSEc1OUF5LzZpbgpyNDRjYWpRTGd5MjdSK2RUMm0zZXBVdldBZFlYTnU1Mml6dUdNeEwwcndMZ0ZwcW9xY1JzYi92M1pGYUswTUtNCktnaVdLVHZENG16dGZ6bHRYdG5obWRYZkZPNktOUDRTWWE4ZVBKUXNic0ZSaThDRlovRElwa01DZ1lFQTBmT0EKaTN2ZVFTcnRvSFdWZjlUKyt2bFJXWDdKME85aEdQNm5DdWNTQ3cwMk93cGFJNEZtUE9WLzJINE5iT0UzWDdIUQpKYkVhYlFyY1hYZHNFVmM4VEFlN25QNnljUGtTdUJLM0xYSGVJWGFKMk12bStLRy9YMmhsNSt5bVRvSHlOdFBpCk1tYklENU13UkFRZ3hlZjFqVnE5THZiN3pUUGl2cWRtQW1HL3dkc0NnWUVBa2FzdVQrOEZib0lLajFHT2V0KzIKdzFpd2pBUU9sWmRSTTJudkZGMzM2UmNXUUxkaXQ5QmZ5VDQrb295aENBK0JnWXZyN0kzUXZueFR4Y2U5eEN4WApuT01JVTZjQTVkdWEzdHJPV0JwQVNJMU9VV2NOMEhuYi9yaHpIT3lURVEyRXBzdUU4M0ZvSG5xUngrakVQTmZTCjJsRnBZbytLOXZ6VHRGU01DSEVXMFYwQ2dZQlRGTGJUZTRyeDR0angzRlh5cGdqWXEveGpHK2NsQlBVNWZOd0IKVm5zdllHVUxiQWRMY1pOUm1jZkRsZTRlSGVsWnR2V1ZWTVlPVEhQemtLUjFJRDQrSC9sQUlSSGYzdEJuZ3hCMQpyVStua2s3dU9aSUc1WXJqYUY2YkxteUpPS2J1eDE0RmIrTFBOd0dzaUsybll5a3FiTFBjZCtRZ3lkMTZjS2ZQClhYc1NiUUtCZ1FDQ1BjWENzbFNnemNFMGpWWit0T2hHbEhBVGZZT0pKcUhzRzFPRFBDejNEUTZVb25SMFg5WkYKa0g5dVpQRmg2UzFYN1N1d3orY0M5dnBVRFowMkNhMU9PNmlxSGx1TWtFMkszRSszZ2JZcTMrL0ltbEtudUtCaQpXQWU2a3dXWmVranBKWUJGT0paSENNRzhWbGsrSzAzOE4ySTl3OW9UbDI4c0NoRi9sVTEwTmc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 50%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: fd497284b1c8d966be7dea373aed7f8d1e3192fa9b94bebce9a05e46176f6006
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.20.20
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/operator-generic:v1.14.3@sha256:c9613277b72103ed36e9c0d16b9a17cafd507461d59340e432e3e9c23468b5e2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        readinessProbe:
          failureThreshold: 5
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 5
          timeoutSeconds: 3
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: 375a925bed4758ffc0fbd25a2ca46b1e775668d02925f0281af97cd647ada807
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.14.3@sha256:3f5c425faca4f8a38e29d4f86db2aadd8f33c9f05debd78a2bb2a24dd9e565d8
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          tcpSocket:
            port: grpc
        securityContext:
          capabilities:
            drop:
            - ALL
          runAsGroup: 65532
          runAsNonRoot: true
          runAsUser: 65532
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      securityContext:
        fsGroup: 65532
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              - key: ca.crt
                path: hubble-server-ca.crt
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: 02d6b04b131029fae39270192dcff10fa3a64af9d1d4d0049f1efbc3f5526a34
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.12.1@sha256:9e5f81ee747866480ea1ac4630eb6975ff9227f9782b7c93919c081c33f38267
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.12.1@sha256:1f86f3400827a0451e6332262467f894eeb7caf0eb8779bd951e2caa9d027cbe
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: fd497284b1c8d966be7dea373aed7f8d1e3192fa9b94bebce9a05e46176f6006
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.20.20
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.14.3@sha256:e5ca22526e01469f8d10c14e2339a82a13ad70d9a359b879024715540eef4ace
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.20.20
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.14.3@sha256:e5ca22526e01469f8d10c14e2339a82a13ad70d9a359b879024715540eef4ace
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.14.3@sha256:e5ca22526e01469f8d10c14e2339a82a13ad70d9a359b879024715540eef4ace
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.20.20
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.14.3@sha256:e5ca22526e01469f8d10c14e2339a82a13ad70d9a359b879024715540eef4ace
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.14.3@sha256:e5ca22526e01469f8d10c14e2339a82a13ad70d9a359b879024715540eef4ace
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        projected:
          defaultMode: 256
          sources:
          - secret:
              name: cilium-clustermesh
              optional: true
          - secret:
              items:
              - key: tls.key
                path: common-etcd-client.key
              - key: tls.crt
                path: common-etcd-client.crt
              - key: ca.crt
                path: common-etcd-client-ca.crt
              name: clustermesh-apiserver-remote-cert
              optional: true
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              - key: ca.crt
                path: client-ca.crt
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
