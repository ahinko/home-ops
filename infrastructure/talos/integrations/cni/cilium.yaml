apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumbgpnodeconfigs
  - ciliumbgpadvertisements
  - ciliumbgppeerconfigs
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  - ciliumcidrgroups
  - ciliuml2announcementpolicies
  - ciliumpodippools
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  - ciliuml2announcementpolicies/status
  - ciliumbgpnodeconfigs/status
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumbgppeerconfigs
  - ciliumbgpadvertisements
  - ciliumbgpnodeconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumbgpclusterconfigs.cilium.io
  - ciliumbgppeerconfigs.cilium.io
  - ciliumbgpadvertisements.cilium.io
  - ciliumbgpnodeconfigs.cilium.io
  - ciliumbgpnodeconfigoverrides.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  - ciliumcidrgroups.cilium.io
  - ciliuml2announcementpolicies.cilium.io
  - ciliumpodippools.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumpodippools
  - ciliumbgpclusterconfigs
  - ciliumbgpnodeconfigoverrides
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumpodippools
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-acceleration: disabled
  bpf-lb-algorithm: maglev
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: dsr
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "1"
  cluster-name: metal
  cni-exclusive: "false"
  cni-log-file: /var/run/cilium/cilium-cni.log
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  dnsproxy-enable-transparent-mode: "true"
  egress-gateway-reconciliation-trigger-interval: 1s
  enable-auto-protect-node-port-range: "true"
  enable-bandwidth-manager: "true"
  enable-bbr: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "false"
  enable-bpf-masquerade: "true"
  enable-bpf-tproxy: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-health-check-loadbalancer-ip: "false"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ipv4: "true"
  enable-ipv4-big-tcp: "false"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-networkpolicy: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "true"
  enable-masquerade-to-route-source: "false"
  enable-metrics: "true"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  endpoint-status: policy
  external-envoy-proxy: "false"
  hubble-disable-tls: "false"
  hubble-export-file-max-backups: "5"
  hubble-export-file-max-size-mb: "10"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA drop tcp flow port-distribution icmp http
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipam-cilium-node-update-rate: 15s
  ipv4-native-routing-cidr: 10.244.0.0/16
  k8s-client-burst: "20"
  k8s-client-qps: "10"
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  max-connected-clusters: "255"
  mesh-auth-enabled: "true"
  mesh-auth-gc-interval: 5m0s
  mesh-auth-queue-size: "1024"
  mesh-auth-rotated-identities-queue-size: "1024"
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  operator-prometheus-serve-addr: :9963
  policy-cidr-match-mode: ""
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  proxy-connect-timeout: "2"
  proxy-max-connection-duration-seconds: "0"
  proxy-max-requests-per-connection: "0"
  proxy-prometheus-port: "9964"
  remove-cilium-node-taints: "true"
  routing-mode: native
  service-no-backend-response: reject
  set-cilium-is-up-condition: "true"
  set-cilium-node-taints: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-proxy-response-max-delay: 100ms
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
  write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: metal\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ngops: true\ngops-port: \"9893\"\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max:
    \nsort-buffer-drain-timeout: \ntls-hubble-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-hubble-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n\n        # Liveness probe\n        location
    /healthz {\n            access_log off;\n            add_header Content-Type text/plain;\n
    \           return 200 'ok';\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRQkNDaUlhOUU0VVBwY3g4S3NLZW90akFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TWpBeE1UTTBOakEwV2hjTk1qY3dNVE14TVRNMApOakEwV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQzNnOGJNeVRXKzVxSHRyWDZRRVFCRk1nUFowMUNpemttSzEyMXlUaWhIbzkzdWJpc1YKaTZYNU1SUWNUczlESU95MHE2OGRxYWtkRlc2WW1pWWhuZkI4V1IvR2FjNFJhWlNPUGhpRXdkU3JNV1AxSDRPawowejgvV2h2a1JnNEp0RWpwaGM0cDRwcG1IS0dITDlBWDNkdDZaVVg2MHVjQytsVStoSG5FTmsxelRGWE03UjdGCm1PSlc3M3VPb1ZPYlVHTkF1dXR2Ym5qNDl1T2p1amRFTFBuSlF2OG1wbThhdks1elpiZVJSME42WEx3SEFaaksKaWlOTTh2R2QzVjkwZEtEY3lWdXZpNGI0cFEzbFB5aytWY05xL3RsNkIvam9aQ29vWTJXdmt4UFo4S0FmMm0rdgozemlEV0dGeE5SMGdnTW4yRlZSZFdpbXRjLzZ5ZFhXdjN0WHpBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVUdnVFTXBxTDlMRUxKNlZ6R091SGNINUF4c0l3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFMR3YzK2paNTRiR2YvZ2J0U1N6eHBoR2VoWnQrWEdNaytsNHEyUW9WbUNNY1BNbGUwbXl6eXV0CkkrdXJwN3hQaEI3QXNGK2oxRDYwTC9Hd0JBQmFnNUM4REN0dEdrR2dLZ0VEV2kzU2NDS3pOTllMR1ltOUpERFkKYzBRRjF3ZjdCam1ZbjJFK2Z0MDlqMlBJajlaTGJsaWIvSE9qRWtYamcxK3FMY09EV3dtSU16SnVERzNlZWtMSQo2L01iNkREeTN1Q1lCQkRqUDFBNUk2NHZpSDlOVFpJZjgzVWlwKzZqNXJPWlNaODhleGl1Nzd1Q2E1OGhOMVkrCkh2WFBpalRUWUZzL0Y4aVNMSVkwdmUrNEVlWmNSR0t5bWx2QkxoU3E0VzJiL2E2d0IyNEVCdzJGMXNUNEVaQVYKR20vcGc0K3NkZEpRZE52TE5adXNaZnY2N1NyeXN2VT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBdDRQR3pNazF2dWFoN2ExK2tCRUFSVElEMmROUW9zNUppdGR0Y2s0b1I2UGQ3bTRyCkZZdWwrVEVVSEU3UFF5RHN0S3V2SGFtcEhSVnVtSm9tSVozd2ZGa2Z4bW5PRVdtVWpqNFloTUhVcXpGajlSK0QKcE5NL1Axb2I1RVlPQ2JSSTZZWE9LZUthWmh5aGh5L1FGOTNiZW1WRit0TG5BdnBWUG9SNXhEWk5jMHhWek8wZQp4WmppVnU5N2pxRlRtMUJqUUxycmIyNTQrUGJqbzdvM1JDejV5VUwvSnFadkdyeXVjMlcza1VkRGVseThCd0dZCnlvb2pUUEx4bmQxZmRIU2czTWxicjR1RytLVU41VDhwUGxYRGF2N1plZ2Y0NkdRcUtHTmxyNU1UMmZDZ0g5cHYKcjk4NGcxaGhjVFVkSUlESjloVlVYVm9wclhQK3NuVjFyOTdWOHdJREFRQUJBb0lCQVFDMk5FczAxbTNiYllmRwp3U1JSQytBMTA1UEpPU3J0aWwyd1VYWWtNSCtEcWFwVzZlRXpFaVVuUmxoT1J0MDRMRDk0bnFGT2xUNElWMWdvCmdaeHNjakRzZFZ5OEZoNzRZTmlUWmduWC9jOFdiZ0p0eE8xaXdDOGl5bWU0L09sQkwxUFpML1hpMWs4d0pTc24KV3d5RU5jMk5OM0lFdUZPUFBGZFlyQlZ0Ly9Ca0VPeTJoeXZHTnVoZHZaRm5yWjJyY1JML05qNkkwMjY2TjV1bwpGdTAwNHd1dm5tWkc4WEdKeGRibHhWU0pRVEdueW5abVJtNVZaRyt4c1RsY0MrNkRPT0NkVm5xYVk4R0ppQ0h0ClZMdU96emtBYm1KajU5aVRWa3VuNjlpeUgzSm1yaFh6OVV3dTZ2VzNHbXhQZ05zMVRqZzlUUW5Bb0FSc3NEUkIKZ0kvZ2c3MHhBb0dCQU1NeTY5TkJ2cjhYNVF4WnF1U1BFMlVweTZ5OHVIQ1VERWlhUUtzZitHUTlLeXpkUEl2Vgo4T1FCNHhScDFmeVdERW50Yy9aN1ZMaUp5bHU4QzJWdUVqNEVqSmhwMVNuSnN6aGV4clZJK0Q4V2NVZVNJUWhkCnFaY3kxQWdxaUJqVjJSeXBqSWJ0czh4RS9vcVRLazZ0M01ScVRJUk1BeVNCeFlMRjFsMWFMYUVaQW9HQkFQQ3QKS2wwaG1qb1VDeEExYXo3S0phOGhuSHI0bDRzNDdRV1NIanREMnhHdDMxdGpMQ2d0U0lWT3lBNTdwaWh5eXozcQpuekM2TDh4dE1OZmsrRzZkNjI0QllibkNmYURCN1VySDZDbmFvL3dSVTR3OVJuRkhZOXpKQkp2SHBsZm9hNHdnCkVGWkx4azBramFQek8wc3dDQldKYnoraE1Lb204RFBkZHFBaFZoVHJBb0dCQUk3QkdkaTVOei9Yd01wRWRZZUwKMzNwWGs3M3prc3U2YWpWYW9qckVPY3ROTk5zdHZVN2pHcllWYnpZSnBOYUNBZUM3Q05qVkg0T0tPZlRXMUZyTQpvZ2k3R1B1S1FydTU2QmtzcnhQN2xwbkUxdm1wdEFERFJ2anQwa1ZhbllmVU5XRVIybFQvV0VQbW5XVkk5V0x2CklncC9WeEJWNnVKekNiaDI2U3dDZkdaWkFvR0FHZHhoaXZSTFlDWTdNaGlyVjJuZE5yNUQxQ3JXRGMybUdrMGoKRm5jcUdQSTM1OWYyTExNQThlSVBPUThzUVhoa1FsanRsZ3pMaWduSmo4azRzSm9qYkFTVi9hSGFZZVcwbTY1egpVZHYrZHQxZHZ0bnVzY2xiLzZOUjdYTThlb0dzM0xldFNiaUdyRTliTU55MzZGSlc3QW1DZkxIVFN0VTRSanByCnZyVVdUTlVDZ1lFQWhncFJVL3pONWRGUzdGWEtVMnFHa2xNUzZMSUZmRWIySGZDMGt2bGFvWnVZaFVPODBjcy8KcFhGM2pSWW1wRmtycnY4U0xlam1wNVAvYlRRT3FhVWNJdzBraFFXcUtsQm52UFdQRXNnVndMenhuWjJSQldIRApTWWxQMS9Zc2Ftb2dFYm8zQ2ZJOEpRN2lmRmJQdkJvSStPVElDSTVTaFAwUFdTanRHV2lhSzA4PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRQkNDaUlhOUU0VVBwY3g4S3NLZW90akFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TWpBeE1UTTBOakEwV2hjTk1qY3dNVE14TVRNMApOakEwV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQzNnOGJNeVRXKzVxSHRyWDZRRVFCRk1nUFowMUNpemttSzEyMXlUaWhIbzkzdWJpc1YKaTZYNU1SUWNUczlESU95MHE2OGRxYWtkRlc2WW1pWWhuZkI4V1IvR2FjNFJhWlNPUGhpRXdkU3JNV1AxSDRPawowejgvV2h2a1JnNEp0RWpwaGM0cDRwcG1IS0dITDlBWDNkdDZaVVg2MHVjQytsVStoSG5FTmsxelRGWE03UjdGCm1PSlc3M3VPb1ZPYlVHTkF1dXR2Ym5qNDl1T2p1amRFTFBuSlF2OG1wbThhdks1elpiZVJSME42WEx3SEFaaksKaWlOTTh2R2QzVjkwZEtEY3lWdXZpNGI0cFEzbFB5aytWY05xL3RsNkIvam9aQ29vWTJXdmt4UFo4S0FmMm0rdgozemlEV0dGeE5SMGdnTW4yRlZSZFdpbXRjLzZ5ZFhXdjN0WHpBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVUdnVFTXBxTDlMRUxKNlZ6R091SGNINUF4c0l3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFMR3YzK2paNTRiR2YvZ2J0U1N6eHBoR2VoWnQrWEdNaytsNHEyUW9WbUNNY1BNbGUwbXl6eXV0CkkrdXJwN3hQaEI3QXNGK2oxRDYwTC9Hd0JBQmFnNUM4REN0dEdrR2dLZ0VEV2kzU2NDS3pOTllMR1ltOUpERFkKYzBRRjF3ZjdCam1ZbjJFK2Z0MDlqMlBJajlaTGJsaWIvSE9qRWtYamcxK3FMY09EV3dtSU16SnVERzNlZWtMSQo2L01iNkREeTN1Q1lCQkRqUDFBNUk2NHZpSDlOVFpJZjgzVWlwKzZqNXJPWlNaODhleGl1Nzd1Q2E1OGhOMVkrCkh2WFBpalRUWUZzL0Y4aVNMSVkwdmUrNEVlWmNSR0t5bWx2QkxoU3E0VzJiL2E2d0IyNEVCdzJGMXNUNEVaQVYKR20vcGc0K3NkZEpRZE52TE5adXNaZnY2N1NyeXN2VT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQUo0NzFlMDR0UFhEU3I4U0xJRDVaNW93RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURJd01URXpORFl3TkZvWERUSTNNREV6TVRFegpORFl3TkZvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXRkTjdNcXJDUnNEeW5yRUx4TzJNTXpsL3dSTjkKQVlCSkkyOTEyeHBRSmtoblFyZGRhaXRPNU11YTBhcnJtb1NHb2JPemovZTFraU9PMVhtUnh4ZHgyUCt4aU1yMwp5SWZlbmNLaFhEdC9zbTZ0cVBma2hkQll1ZjZ4YmhwS253UkE2Z1Y1di95aTloditUUU9FblkzMVdBMzIyU2JCCkVKZVNEdmEzc0JVZ25taWRKbng0cmN4QjJGZ0pmU2hkbFJocWdWYmNJOGJMUjFSN0xzTDJEVXJZL0dDU2JnSFEKK3hFcmNBclhGTlpTUTA5dVhPd0ROTmp2VmYrREpFQ2NXdGN0TmZMNkowQ25IdmtOcUdBSFNDVUd2WlBMdTU0bwpUM3pOR3NJRHB4VVB6VXVYbXc2VkxNVWtMUVc3cGRML1N6aU5kSWliaVNHVFQ2M25XbjJGeTN0N0R3SURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCUk8rNFF5bW92MHNRc25wWE1ZNjRkdwpma0RHd2pBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBR1p2VExQandseHRjcnMxQ0FOUzhlQk9FbThOSEpEVEFzQ2l3cFUxSEpVSVNCK1kKWUVWTVhVVHUxTEpKdEYxMFFjOWlDWWM0YUxUZFRSWDljQWd3U0JNMThrOXVlZVNUZ2dzS3pESmY5MHlxTFhqdwpuVDlkdEZMcDMzWDRoV3RkUUJDalNieTBGTVJHYXZndTBmVEU1RE9zTVBXaHF4NFVOZEQxVjNyOWZqUEN2c1N0CjlBWmNhWEVGNk5Pd2t4Ty9TeVdIcEs2THRIWXgvOWNXQll3VVdRNlJobkxienN5OXdGQ0wvSmY5ZDNPN2dQMGIKNFFhc2h3b3lKWlFZcVp4VDY5UkoxMFhIWjY3ckg3azNJZEsyYWFiMzFrRHM4UU50UHNKNFdOQzhUcThiQjhKeQpiTXZFaEhJVThsY2xnTkRlTnBTeHdhY3VtNTdZMWwzdHRsU2FxcGc9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdGRON01xckNSc0R5bnJFTHhPMk1Nemwvd1JOOUFZQkpJMjkxMnhwUUpraG5RcmRkCmFpdE81TXVhMGFycm1vU0dvYk96ai9lMWtpT08xWG1SeHhkeDJQK3hpTXIzeUlmZW5jS2hYRHQvc202dHFQZmsKaGRCWXVmNnhiaHBLbndSQTZnVjV2L3lpOWh2K1RRT0VuWTMxV0EzMjJTYkJFSmVTRHZhM3NCVWdubWlkSm54NApyY3hCMkZnSmZTaGRsUmhxZ1ZiY0k4YkxSMVI3THNMMkRVclkvR0NTYmdIUSt4RXJjQXJYRk5aU1EwOXVYT3dECk5OanZWZitESkVDY1d0Y3ROZkw2SjBDbkh2a05xR0FIU0NVR3ZaUEx1NTRvVDN6TkdzSURweFVQelV1WG13NlYKTE1Va0xRVzdwZEwvU3ppTmRJaWJpU0dUVDYzblduMkZ5M3Q3RHdJREFRQUJBb0lCQVFDU2FwZ2NkdEUyOUl6cgpLUnFYRzhyNFBPY1piVDRPaFdWZitaTm9Pa29zYWNWdFBnY2xSWGFrV3loeWlqWnJHU2pvOGJJNHpub1NFandrCnYxNmFlZENkczFrZEZJUnZvS210VkZ0bjBDbkdYOFhMK01LMjFzMThDUktMM1BRV0ZQREpBbHZHTkFSdU5xQ1QKRjdBa3gzbTN6SmJveW9KUmdCeUhuRGpTdkZDbC9hNTdsZG5QVkpGWU9qZzBxZkk3cUxkL2s5NmV4emZvSmhzcwp5S2Z2dXAxRjFxUmJZR1Z6N2RDRlJrNnlsWk0vRWo2enR0QU9QWmFDaDkxb2xrTTNDdkkwRXZHMWtwalhncDk3Cm1udW43YmlSUzVKYkRSRHFsZGo0Ukxra09BMm5GYkJSVjE0aDgzL1ZlMEVxbmU4NlFqcEloVXk3YWRTTmx4Q3QKK2JhYUFvT3hBb0dCQVBCdmdLY1h2R04xU1VDR3BOTThnQ0RkMVRrUEQyZnE0a2orUkNwZUJ5R0E4MTNCZjM2dgpZaE85Wjc5TEVudmExc1FXZlprU3VaN1Z3U0lGdHkwbmJNdzNUWjF1TUtIMmV2SGlHYkswaG1zY082U09sZmV0CkMvNnlXbmJvWVd0OURJSFVHM1RjYS81TFFnNjNTcTZrVUlWSkFjV1IvSEV1Nk5lbnZuemZoQ21qQW9HQkFNR1kKcy9EK3BSMzZZTVc2WEwwZ2ZxampsdWw1UWFBQUJ2VEszc3oyb0wzdWZWNHdBemw4bUJGeDBORkFpc3JGeG9oUApPNjl0Z2JJOFc5V01PZlZva2hVRDhBSXNpbjQwMDMwZTZQbGIyMkNVbXZPRlVoa1ppNWhQY1lHekpDSmMzS1R6ClZqUDVFRHNPV1NxbHl3dGU4UU5hdFZTSDYrY2liajAwUGtVOUpSZWxBb0dBYVRqUys4MUdjOXhiVDNMZFpWaC8KMW1KZXN4YmxMaHc4SmFlcEcwV0ZKMk53bmlKVmNwSzhnRmtPczBmZWNmZW1yN0FNRFZhRmgzNlNoQm91UFFPWQorSkpuVkROcDh5ZVVUSkVmbi9hak1QTHRJeW9IZFpuMHV1VkE4L0xrMTQ2bFQ1Z000QXFxOUdIcEtkbUxSSHpDCmhHSWI5V1BiTDRsUSt6ZjlCRmNwVnJNQ2dZQm91L01GT3M0YlJMd2IzSEdWZzhIaUhwWWpJdzFrd1A4Q2FjcFYKT2t2RjFRTVA5SXVhQ3hTOXcwUkVJRlcxMDM5UGVRWUNKdzBXWHQ4VHpYUUJseHdJc0lPa3VYSUhTdzdyVHRDZApMcHVsU1YvMnhMYWdpNWhnd3dIV09CTWhYL21pWjE3SWFVTGxvQ0tQRnZpYzR6VWlLbTJWR0orQUFMbUE5UVdICk1jZ2lYUUtCZ1FEdUJucjhucjEyeWlIUzBoekRRd09NeEJwYVZHVG1jYzdRUGU3Mm1oK3hsOGpKUmRObk5jbFQKcFBnRGxYcGN4TURNVUNPTk9nQWpwNDdZdXUrNGExQkxBWHg2a2lPMVIvUzBNT3NRVVQ2aGtDaUhSUGZuUUJ1NwpWTnpKbDQ4UWZkZDlKZzZEam13YUREU2xqamlJUHJUclZwandwUUFqRXUyT0VCUkpGbTE5S3c9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRQkNDaUlhOUU0VVBwY3g4S3NLZW90akFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TWpBeE1UTTBOakEwV2hjTk1qY3dNVE14TVRNMApOakEwV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQzNnOGJNeVRXKzVxSHRyWDZRRVFCRk1nUFowMUNpemttSzEyMXlUaWhIbzkzdWJpc1YKaTZYNU1SUWNUczlESU95MHE2OGRxYWtkRlc2WW1pWWhuZkI4V1IvR2FjNFJhWlNPUGhpRXdkU3JNV1AxSDRPawowejgvV2h2a1JnNEp0RWpwaGM0cDRwcG1IS0dITDlBWDNkdDZaVVg2MHVjQytsVStoSG5FTmsxelRGWE03UjdGCm1PSlc3M3VPb1ZPYlVHTkF1dXR2Ym5qNDl1T2p1amRFTFBuSlF2OG1wbThhdks1elpiZVJSME42WEx3SEFaaksKaWlOTTh2R2QzVjkwZEtEY3lWdXZpNGI0cFEzbFB5aytWY05xL3RsNkIvam9aQ29vWTJXdmt4UFo4S0FmMm0rdgozemlEV0dGeE5SMGdnTW4yRlZSZFdpbXRjLzZ5ZFhXdjN0WHpBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVUdnVFTXBxTDlMRUxKNlZ6R091SGNINUF4c0l3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFMR3YzK2paNTRiR2YvZ2J0U1N6eHBoR2VoWnQrWEdNaytsNHEyUW9WbUNNY1BNbGUwbXl6eXV0CkkrdXJwN3hQaEI3QXNGK2oxRDYwTC9Hd0JBQmFnNUM4REN0dEdrR2dLZ0VEV2kzU2NDS3pOTllMR1ltOUpERFkKYzBRRjF3ZjdCam1ZbjJFK2Z0MDlqMlBJajlaTGJsaWIvSE9qRWtYamcxK3FMY09EV3dtSU16SnVERzNlZWtMSQo2L01iNkREeTN1Q1lCQkRqUDFBNUk2NHZpSDlOVFpJZjgzVWlwKzZqNXJPWlNaODhleGl1Nzd1Q2E1OGhOMVkrCkh2WFBpalRUWUZzL0Y4aVNMSVkwdmUrNEVlWmNSR0t5bWx2QkxoU3E0VzJiL2E2d0IyNEVCdzJGMXNUNEVaQVYKR20vcGc0K3NkZEpRZE52TE5adXNaZnY2N1NyeXN2VT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVakNDQWpxZ0F3SUJBZ0lRVDVrK21HMlVjZkNnOE9uVnZkRERXVEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TWpBeE1UTTBOakEwV2hjTk1qY3dNVE14TVRNMApOakEwV2pBb01TWXdKQVlEVlFRRERCMHFMbTFsZEdGc0xtaDFZbUpzWlMxbmNuQmpMbU5wYkdsMWJTNXBiekNDCkFTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBT2hlcWtOZjl4R3FzcTRwSllFdWtlWTIKR0FDRHJmVlJLdXFmYSt6OHFpa2Q1ZHlibXFUTVNxS2FzNzZ0Z2g3NXJkZEtnVXZKKy9XbWk5R2QvdXZpdFhZTgpDbnl2VCtCOU9EOTlSS0pEUUoyaGtoVWpKdHVselpCMkw1dzAwY2ZTY0lhQy9DVVhzRkJNVmZMQklZNFUwMmFkCkg1Qm9hYW9qbXJyNjljQjFWL0dYQy9kUDdoby9vamNDWlE0dUg3dWhKZ0dSSVRySVArTFpwMHZISDZvVEhmL1QKK2wwL0x2b3N5enhVTFJYUTRHVVpYOThJaDN0MnNpZEo4cE8vVW1ITFJPZENCS3JJN1hmQzlLMXV1SXVKc21DagpvVDFlbGRrT0d3VmliTDRqRUttVnZrVjIxUXQrckthaUpPZVpiQURSZjl4SU9OTGN2VDFUR3pzdStFTjJZMDBDCkF3RUFBYU9CaXpDQmlEQU9CZ05WSFE4QkFmOEVCQU1DQmFBd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUcKQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXdId1lEVlIwakJCZ3dGb0FVVHZ1RU1wcUw5TEVMSjZWegpHT3VIY0g1QXhzSXdLQVlEVlIwUkJDRXdINElkS2k1dFpYUmhiQzVvZFdKaWJHVXRaM0p3WXk1amFXeHBkVzB1CmFXOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSWpQbyszaDNVaVAzanJKeU9pT2FkOGpQWG9lTHl1WUt5Wk8KSERiU0V4WXdxOGd0cGlvTGNpbWk1ekE4a1J5WmxkWi9PSmpRNFhzekZNNU9iREpoSThpcjlqMU53bzVpN1c2dAovbU4yd25DdFVMYjlPN3N4K1BnOVJZOTZjck9xT2ZQQmpaZzVjZkRnaE5zQnBRZHBJVnhxWmVyNEx4RjNoU1dECmthWFVxcWhnSkFyZUdHeGZlKzJ5UDdJNGEyRnMzSWYzWm51TXdiT0xXNDFqeGJZUmF3NnFmSzRZVnJQdVZTcDcKME41MGx2ZGlTUXJWV1hNSFpyS25maDRUZzRpU0N6TGVIU1RiTWpaMm5yb0lJUituY2FFZG1PU2hHLys0blhlMwpja3paSjR0aGFSc3dyTXlLV2x5OEVGZ1p6cVRyUHdNU1VoUHBiL3A0RjVFMC9KdHVrUDg9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcGdJQkFBS0NBUUVBNkY2cVExLzNFYXF5cmlrbGdTNlI1allZQUlPdDlWRXE2cDlyN1B5cUtSM2wzSnVhCnBNeEtvcHF6dnEyQ0h2bXQxMHFCUzhuNzlhYUwwWjMrNitLMWRnMEtmSzlQNEgwNFAzMUVva05BbmFHU0ZTTW0KMjZYTmtIWXZuRFRSeDlKd2hvTDhKUmV3VUV4VjhzRWhqaFRUWnAwZmtHaHBxaU9hdXZyMXdIVlg4WmNMOTAvdQpHaitpTndKbERpNGZ1NkVtQVpFaE9zZy80dG1uUzhjZnFoTWQvOVA2WFQ4dStpekxQRlF0RmREZ1pSbGYzd2lICmUzYXlKMG55azc5U1ljdEU1MElFcXNqdGQ4TDByVzY0aTRteVlLT2hQVjZWMlE0YkJXSnN2aU1RcVpXK1JYYlYKQzM2c3BxSWs1NWxzQU5GLzNFZzQwdHk5UFZNYk95NzRRM1pqVFFJREFRQUJBb0lCQVFDazJweFN4bCtEa2lYSAo5M3NiSmczdVZFdzgrUzdPVHZKeWwvMjZtUnFqcHdsdnRKbEc5NFN2emE5ZHhMeisrc1lCYW1OR2dKc1hrVHU2CjBDdU44RDRxN1YrV1M4NFFodVlEN1B4blhlMFdxQXo2b0FDdWJmZmoyR1U0bmlTQ2JtTFVtMU1GZ2NQZGcvcXEKQ2Fpam8xVERoUTlpcFNEcHl1NjRYdGxBM0Q4ekxrckRuUWZvL0lEeEVGbXFPT09kaWRPR1cwaHowZFM2aFdCUwowMlUyZGI3ZGhyYU1iWFJ0bmswU1YzNm1oRll0blAwdEFybmM5UXlhYzBVNWgxM3plTG1Ea1lrWWZvMUZPNnc3CmEzZjljWHhkeWFrbkNvRmttTW1VbUdNbllTb0g4aGpxam42bjBUL1lRa3IwcVZMS3dlTDhUc3pnek5saHQ4TEgKMFJaODlVbWhBb0dCQVAxL2poT3Bkbm1rRmNZbmtvTlg3ajk0N0Ywb2hJeDliRjR5RUJBY3V6YXlxZkd6dEY3eApuWUlNZjhSRmNxWHBRR3lkZDVkOUM5VE9zQWhCNVdiU0xuSDYxYllmZUU2NVNWYVlJcVhleFg5b0cyWVJ0YVc4CkdYbGZnT1dJVDNyenJ1Zlg4bGF1emtxSmJqOG9qZU5KY2tleTA4LzVrYlptUnFYaXk1SXkvbWw1QW9HQkFPcXAKdXdSNmdjMHhtV1RiOTU4OU8xRG9kdzBIeGlhUmIzNktUdVNqcjlPWUZLb3QyRnFlUmlRTHFHd2JQOU9BRzdCdwo4aEErZUFhOHVsdTNYSTFYLzZPOXcrWEptRWw5cGVwOUwzZVppWFQ4WXR6SjgvQVhMRjkxYUJjRU5IaVlLY3ZrCkt6MmRuRUxFQ3pmWi9WN0ZlWGtuUDMyZEw1aFF5NzBOUS94SEpPZDFBb0dCQU15eERkRlVtaVQ0Mk5ncnBnUEcKb2N2QTRlTUxUNVI5eGw1OVFEa3lhZjF0NFFvWldJRDl5bmh6alV1MzVDNlNIUUpYV0hVTGROMCtsQ2ZteGN6egoxS3NXcHpDclVxTUd2SEJlNGtOYmtkQWlDVld1NFNWVnNLQXYvTTNhOW9yS2NDWW5XamlpYUZNSmkrc1YzUlIxCmZ3RGtKbUtlSEFuVHBpSlc4cGczOHZUSkFvR0JBTlJFS0VtS3ozTmZWRlFwcmJvN1Z6WitzWUgxOEVYZTlLM1EKU2tFRDEvNWM2UVJ2WisvQWo4MzNSYWhVbGMycGFtS1dLRUNOWVdFbXdxUklIczQwTmFoVjlhZ2NUVWJkQTRJegpMd2JPdWNvNnF1cnhPMW1JZkxqMHFPMTQva1cvenI4Q2JDTFdPUTBqN01uZXhCUkFLUHR3aHp3SFBaQllOWk9UCk5sWXp2S3dwQW9HQkFKaEpkaTJtVFBzOEtscmpFUGhjNFZVU2ZiRlpYemNTempISUdEKzRXekRXNW1mMzRmNHkKOE1MREhISmRiZU5yM0lTeXhJdkF1ZXdQK0dPNlNOKzZBNHhFazhGSzlWajRzZ3VDbTFhQjlnNWREODBiMUFBcgpPZ0FqbVB3OHo1blZ4SVVTZ0ZnSHVRbDFEUWdBY3p0RS92Qk9UWmVZOTlzWXlKSjFYQURuVkR1UwotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 50%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: 5a339e7976d5be761ec44414bcb0253d2c7f41fc6f9495a6d6f50a00ffaf0dbc
        prometheus.io/port: "9963"
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: localhost
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        image: quay.io/cilium/operator-generic:v1.15.0@sha256:e26ecd316e742e4c8aa1e302ba8b577c2d37d114583d6c4cdd2b638493546a79
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        ports:
        - containerPort: 9963
          hostPort: 9963
          name: prometheus
          protocol: TCP
        readinessProbe:
          failureThreshold: 5
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 5
          timeoutSeconds: 3
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: 375a925bed4758ffc0fbd25a2ca46b1e775668d02925f0281af97cd647ada807
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.15.0@sha256:45b3ea70b73aee01644f800b8f6138c36446bfb130d2b88b0f75775ebe6a9ab6
        imagePullPolicy: IfNotPresent
        livenessProbe:
          grpc:
            port: 4222
          timeoutSeconds: 3
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          grpc:
            port: 4222
          timeoutSeconds: 3
        securityContext:
          capabilities:
            drop:
            - ALL
          runAsGroup: 65532
          runAsNonRoot: true
          runAsUser: 65532
        startupProbe:
          failureThreshold: 20
          grpc:
            port: 4222
          periodSeconds: 3
          timeoutSeconds: 3
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      securityContext:
        fsGroup: 65532
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              - key: ca.crt
                path: hubble-server-ca.crt
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: e8acee96ed990156efd0291c8c33709d2c7902d2ec993eefa16c7cd3d1a9d84b
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.12.3@sha256:e6b825302fc1e406b1305363fe0bcd1fdf95730b32c2b99a2b36dfa37bdaeec2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        readinessProbe:
          httpGet:
            path: /
            port: 8081
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.12.3@sha256:1cd84251cec46e20f9e839ee0afba9b51c8de59d35681234f701d7f42062f138
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: 5a339e7976d5be761ec44414bcb0253d2c7f41fc6f9495a6d6f50a00ffaf0dbc
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: GOMEMLIMIT
          valueFrom:
            resourceFieldRef:
              resource: limits.memory
        - name: KUBERNETES_SERVICE_HOST
          value: localhost
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        image: quay.io/cilium/cilium:v1.15.0@sha256:9cfd6a0a3a964780e73a11159f93cc363e616f7d9783608f62af6cfdf3759619
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                set -o errexit
                set -o pipefail
                set -o nounset

                # When running in AWS ENI mode, it's likely that 'aws-node' has
                # had a chance to install SNAT iptables rules. These can result
                # in dropped traffic, so we should attempt to remove them.
                # We do it using a 'postStart' hook since this may need to run
                # for nodes which might have already been init'ed but may still
                # have dangling rules. This is safe because there are no
                # dependencies on anything that is part of the startup script
                # itself, and can be safely run multiple times per node (e.g. in
                # case of a restart).
                if [[ "$(iptables-save | grep -E -c 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN')" != "0" ]];
                then
                    echo 'Deleting iptables rules created by the AWS CNI VPC plugin'
                    iptables-save | grep -E -v 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN' | iptables-restore
                fi
                echo 'Done!'
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium-dbg
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: localhost
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        image: quay.io/cilium/cilium:v1.15.0@sha256:9cfd6a0a3a964780e73a11159f93cc363e616f7d9783608f62af6cfdf3759619
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.15.0@sha256:9cfd6a0a3a964780e73a11159f93cc363e616f7d9783608f62af6cfdf3759619
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: WRITE_CNI_CONF_WHEN_READY
          valueFrom:
            configMapKeyRef:
              key: write-cni-conf-when-ready
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: localhost
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        image: quay.io/cilium/cilium:v1.15.0@sha256:9cfd6a0a3a964780e73a11159f93cc363e616f7d9783608f62af6cfdf3759619
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.15.0@sha256:9cfd6a0a3a964780e73a11159f93cc363e616f7d9783608f62af6cfdf3759619
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        projected:
          defaultMode: 256
          sources:
          - secret:
              name: cilium-clustermesh
              optional: true
          - secret:
              items:
              - key: tls.key
                path: common-etcd-client.key
              - key: tls.crt
                path: common-etcd-client.crt
              - key: ca.crt
                path: common-etcd-client-ca.crt
              name: clustermesh-apiserver-remote-cert
              optional: true
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              - key: ca.crt
                path: client-ca.crt
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
