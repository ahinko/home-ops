apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  - ciliumcidrgroups
  - ciliuml2announcementpolicies
  - ciliumpodippools
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  - ciliuml2announcementpolicies/status
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  - ciliumcidrgroups.cilium.io
  - ciliuml2announcementpolicies.cilium.io
  - ciliumpodippools.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumpodippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumpodippools
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-algorithm: maglev
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: dsr
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "1"
  cluster-name: metal
  cni-exclusive: "false"
  cni-log-file: /var/run/cilium/cilium-cni.log
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  disable-cnp-status-updates: "false"
  egress-gateway-reconciliation-trigger-interval: 1s
  enable-auto-protect-node-port-range: "true"
  enable-bandwidth-manager: "true"
  enable-bbr: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "false"
  enable-bpf-masquerade: "true"
  enable-bpf-tproxy: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ipv4: "true"
  enable-ipv4-big-tcp: "false"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-networkpolicy: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "true"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  endpoint-status: policy
  external-envoy-proxy: "false"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA drop tcp flow port-distribution icmp http
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipam-cilium-node-update-rate: 15s
  ipv4-native-routing-cidr: 10.244.0.0/16
  k8s-client-burst: "10"
  k8s-client-qps: "5"
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  mesh-auth-enabled: "true"
  mesh-auth-gc-interval: 5m0s
  mesh-auth-queue-size: "1024"
  mesh-auth-rotated-identities-queue-size: "1024"
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  proxy-connect-timeout: "2"
  proxy-max-connection-duration-seconds: "0"
  proxy-max-requests-per-connection: "0"
  proxy-prometheus-port: "9964"
  remove-cilium-node-taints: "true"
  routing-mode: native
  set-cilium-is-up-condition: "true"
  set-cilium-node-taints: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-proxy-response-max-delay: 100ms
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
  write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: metal\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ngops: true\ngops-port: \"9893\"\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max:
    \nsort-buffer-drain-timeout: \ntls-hubble-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-hubble-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRTUU2b3BYRmxEcjRBK04yazRtOUR0akFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TWpJd01UQXdNakV3V2hjTk1qWXhNakU1TVRBdwpNakV3V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRGZNYjBFT2xCczkzbG15bTc3eEN4VkRGZzdKTE9CMng1TER6WGQ4M1FuR0Zudm5nRDkKSEdubG1NaEJqYXVSdFdhdDFRQ2oyNkJnMkZsV3pNUGdyOWpxM1VoWS85eGt2TFExUDhrankzWWFwQUIwdEZaagpMUm5hRUNLaHc1NFRGQ25Wc2RlWU1IQy9CaGZXcjFnK0Y2S3MwZjBEQkk0Tktybkwzd1JtMHhvS21YUVFSbldtCjdYcEZaTWZ6OGhoejdkRDhIOS91TWdZNC9mTC9JckxWZ2ZndmFTMm5sTVRzTmRRNTdMT1l4S3ZjUXlvVWkzSHUKZ2lRU3pNd2ZEMXNvNVdBU2hoU01JU0ZyYXU1RmUrQzFVdFJ4cjhqM0pTY3NhVjNyN2R0MTNYcW96SDd5ZysybApTRnZ1RUY3dXlPSGl1bEkyaW9kV1p3Y1d0Ym9NZUp6QVB1T3BBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVzZnc2QWZDSCtSNlVNRmREQWRqL3ZBTWo4SVl3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFGcFR6NysweEpGeE41UjhGVjBWYnlEaUpveUYySkxma2VqRVRLMFBlQk1GTkNhSXY5dmppNDYvCjF2SDFmRm8xSFJjRWdZemFoaDZzSld2dWFLdFBXQzIwck9vb0tBZTU2RjBEWmsrbHQ1R2VxS3RIVzZ1RWt2MHMKRXZVSzFtcW5UNnNTOVBFREVWM1pSaTNKKzBIOU9kREZhaTkxLzM1Y0o0NzcwRmNsanB1ZGdzVVJoRG5pUGNrUQo3OWNwZzJhOWR1QkRrZjlQOHlscXBzZlRhOFF6SXBjcnBxSUJuWG92RCswS0ZUTk1DN3V1NFhNb2lSNnVzWjJzClNYRnRCcHBSSXdOZnF2SUYwM2xEdnJKUVJXRVJ3WXpiWjU3SGRwQXhGdlRNSHpsc25QM04rOEo2TVh5bVEzdUkKS0J3SDllQ29QeUpLRlkreFNuSXJHVksxajJhbnFVVT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcGdJQkFBS0NBUUVBM3pHOUJEcFFiUGQ1WnNwdSs4UXNWUXhZT3lTemdkc2VTdzgxM2ZOMEp4aFo3NTRBCi9SeHA1WmpJUVkycmtiVm1yZFVBbzl1Z1lOaFpWc3pENEsvWTZ0MUlXUC9jWkx5ME5UL0pJOHQyR3FRQWRMUlcKWXkwWjJoQWlvY09lRXhRcDFiSFhtREJ3dndZWDFxOVlQaGVpck5IOUF3U09EU3E1eTk4RVp0TWFDcGwwRUVaMQpwdTE2UldUSDgvSVljKzNRL0IvZjdqSUdPUDN5L3lLeTFZSDRMMmt0cDVURTdEWFVPZXl6bU1TcjNFTXFGSXR4CjdvSWtFc3pNSHc5YktPVmdFb1lVakNFaGEycnVSWHZndFZMVWNhL0k5eVVuTEdsZDYrM2JkZDE2cU14KzhvUHQKcFVoYjdoQmU3c2poNHJwU05vcUhWbWNIRnJXNkRIaWN3RDdqcVFJREFRQUJBb0lCQVFDVGRBZTlJRTE3Lys4TAprdGZKcXl2aXNEb21NTFFMS1ZrVkc2SnAxT282M2VLazVJMGdxMEhtOW8zdWlRcjlRNHZuY2g1dklxME03a0h2CmoyNGxKZWU0R3FNdWNUTUl0b2FUMjJVbUtjZ0lCNnRwYnE3WDdMYjBrczVlY3A4ZldhWGQwUlZ2TFNsL2VpWUwKcG1JMCsyWjBxSEp3S1BVMEM3TWQxbVBSRHN4WWpSWnYxUktEUndQbzZRZWQyOC83TlcvNVlnbGF4b244UXRCQQpISVhveStOR0VFMSs2bFNNeVJnYzRUTk5ERVkzSDdJaGprRjRaeHk3WHFyYTgvdFAvOHdLdTAyS3RZYzFHYm1SCmE1eThSWDlJRG9YdGNFOW9xMTQwQUVQc1ZESEtER2t4NlpYRGZxeU0xaWRFd3RNd0srZ0d5U1JTMXQrd2FidzgKZ09vTU01RFZBb0dCQVAzYTFHcW5sdkFabklXLzJlRGZBajZNLzVKdDVIK1NsQ1RKNm1CN1hJUFRpMEhZWjBwRApWNlRMU2V1SjZvOHN0YUZNYzJseWl0Y0JQdFV2YnNBR1ZSQ1NYZzVUTzJ0SUhGSFlvOUM5eGMrbGRVeDBYVWZqCjYwTTl4S3pJNkh0czJoM2FWcjhld3p3dWRqS3lKRWNINzJTdnlUMDVqd1MvR1dFNmtpbjZ1Q0ZmQW9HQkFPRVUKbEhoa0pVWkF1eXU1YVJYYkdFL2IxSWNiOXo1OHdvY1hTcUNMaDZ0TXF2K0NTbU9sbkxXT0RFU2JSS09DY2g4cgpHdFhvMGdQY2Qrbzg2QnNwWjJ5aERXTGVGQjdQenh6VVR2SjFLR1pnZWp5VllXc3dPL3ZiQVd1U2lGNTl6bjUwCmFrWHRZVHBoeFM1SWZjdG95OVpUdEVmeFhlMXpmZ1htUmpmWjhlLzNBb0dCQUxWbzFuZkpmL0hoTzV2Uk9IQ2MKcmN2cGt4SWZlalU0bUttWnFlWjlBZVlySE05WFNLa25hdENYZmlIV2swcngxbktJWWNtdlUwekcxUklnTFhNSQprMjJlUzV6TkdoOVdqdlptYk5yVll6RTZ1cEtDYmM3Y0w5b0RvRE1oK0JHTC9tdHJCcWJaNHdkMDVIN2lFMDYzCmV2cG5MTmFWOVlDYzJCUkZlUUtLNjE3ZEFvR0JBSVR6MngraVNFSlBTa0J4clJrejZoQ0NFZkFkSE5iVWF6UFIKRmt2dkg1eVlGUW9JdEZoWUkxRTdMeFAzZzN2eU9lY2ZWeUt6L0JvN3lMbWNjSjVhdnJUMERTd3hja0VoRDM1QQpDc0k5WWpmWEZWMWovNytKSm1XRzREZml2cHJTUlg5ODFLbXBwcDBOMDZPYlBuTkEyK2NtV24rRW02Ny9ZWm1xCmhCL0pwWmZSQW9HQkFLNWhUc0cwbjdEcnBMVW9mTk96L3JYcUI0SGJNQlZSWis0YUxNRHVVanplQS9MVjQ4dzIKaWhWdTNKdUtuVEVxWWs3cWFFdzY2YytjWEEzSGdpTFNKRXVpTFFGVmdiYmxKdG5zbXRoUXV1bFBCcVd2WElFUgo2cGpqdU5DSXRaT1R0TjBpYUNUcnJJdDZRaTlNcFJoczBDNlFyM3dsK1kzcFRSZ2tFTXMrWVZFUAotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRTUU2b3BYRmxEcjRBK04yazRtOUR0akFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TWpJd01UQXdNakV3V2hjTk1qWXhNakU1TVRBdwpNakV3V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRGZNYjBFT2xCczkzbG15bTc3eEN4VkRGZzdKTE9CMng1TER6WGQ4M1FuR0Zudm5nRDkKSEdubG1NaEJqYXVSdFdhdDFRQ2oyNkJnMkZsV3pNUGdyOWpxM1VoWS85eGt2TFExUDhrankzWWFwQUIwdEZaagpMUm5hRUNLaHc1NFRGQ25Wc2RlWU1IQy9CaGZXcjFnK0Y2S3MwZjBEQkk0Tktybkwzd1JtMHhvS21YUVFSbldtCjdYcEZaTWZ6OGhoejdkRDhIOS91TWdZNC9mTC9JckxWZ2ZndmFTMm5sTVRzTmRRNTdMT1l4S3ZjUXlvVWkzSHUKZ2lRU3pNd2ZEMXNvNVdBU2hoU01JU0ZyYXU1RmUrQzFVdFJ4cjhqM0pTY3NhVjNyN2R0MTNYcW96SDd5ZysybApTRnZ1RUY3dXlPSGl1bEkyaW9kV1p3Y1d0Ym9NZUp6QVB1T3BBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVzZnc2QWZDSCtSNlVNRmREQWRqL3ZBTWo4SVl3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFGcFR6NysweEpGeE41UjhGVjBWYnlEaUpveUYySkxma2VqRVRLMFBlQk1GTkNhSXY5dmppNDYvCjF2SDFmRm8xSFJjRWdZemFoaDZzSld2dWFLdFBXQzIwck9vb0tBZTU2RjBEWmsrbHQ1R2VxS3RIVzZ1RWt2MHMKRXZVSzFtcW5UNnNTOVBFREVWM1pSaTNKKzBIOU9kREZhaTkxLzM1Y0o0NzcwRmNsanB1ZGdzVVJoRG5pUGNrUQo3OWNwZzJhOWR1QkRrZjlQOHlscXBzZlRhOFF6SXBjcnBxSUJuWG92RCswS0ZUTk1DN3V1NFhNb2lSNnVzWjJzClNYRnRCcHBSSXdOZnF2SUYwM2xEdnJKUVJXRVJ3WXpiWjU3SGRwQXhGdlRNSHpsc25QM04rOEo2TVh5bVEzdUkKS0J3SDllQ29QeUpLRlkreFNuSXJHVksxajJhbnFVVT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lRQ2o5S2xEMm5qNGtIWlRWRmE0aHMvREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TWpJd01UQXdNakV3V2hjTk1qWXhNakU1TVRBdwpNakV3V2pBak1TRXdId1lEVlFRRERCZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDczc0RUhvNk1XdHV5WlpOMEY2aldhUEd1aGxRZUcKTlFLeG41cC81L2doZ3lwUXk4cXVsK3FLV3JYN2syNUMxVlJhcnZkQURrMFBFYVl5Yk9VRERoNGF3UEJ1b1FzSwprQjE1ckdXa1hiV3NVTG56T29hbE04cVR6eURvQVhnTjVBOW4xa2NlT0k5ME1oNEc2T2pKeHorR3VGSzZmSnZHCmsyK2pLN1RpcFZiVndyWEJvRHJ1a2EvTzh5b0RnckxTOExUQndxL2lyRndCdWZhTFZaUHlmdFZpaGdqcnZ2THIKcm1EbFloa1pxd3V5Vm8vUTdKK2VnNThYN2I1RkNYb1JKZ0Y0azkzSGc5VUdsaFprUUkxV1ZwR0VkNjkwUWMzRwpLN08vSHVZL0JrSVVlMENzUk9xZnJOZVFyVE8wWXBRbXB6bkQrYlk1ZVBISU01MXExU2I4cFNuekFnTUJBQUdqCmdZWXdnWU13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZMSDhPZ0h3aC9rZWxEQlhRd0hZLzd3RApJL0NHTUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bExYSmxiR0Y1TG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFUSnZMWG12a3FFVDBqQ2VJS0x3WjVsSUQvMm9ubVNJWXVtWmFRWDBPTERxODFTQ28KQkNWeXNjK1JaNDczUEZMRUwyWUNJb0YwOHpmR3pYcHEreVMrYXRJbFFPNjBMbnArd2RnYlYyeGpmMnNqdXJ5SApkSlI3S0pXcUE2a0hvQWhuMmltcldUaytweVllMytGdGpmQ0tURXdXVzZkOW52eTRiQ3V5allabVc1WXFhb1lsCkJjTDMwMmgyNVJ3L3JLcjd4UFpPWW0xVnV6NmpBRHl6TzJsYzJTSmZrWW1nN1laMmR2V3Npd21tVVprZEhXUUsKS25mM29GREJCaTJSU1VQeFF4ejJQTmRwbERvZEVSaUV1VDYrRW5NMFYxU2tDZ2tnRUlyL3YxRTFFWnVheWZycgprZmxnd3BSWlFLTEZVM2JqZExwZzRTZlErS1ZrdEdmU0d0ZHdOQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBck8rQkI2T2pGcmJzbVdUZEJlbzFtanhyb1pVSGhqVUNzWithZitmNElZTXFVTXZLCnJwZnFpbHExKzVOdVF0VlVXcTczUUE1TkR4R21NbXpsQXc0ZUdzRHdicUVMQ3BBZGVheGxwRjIxckZDNTh6cUcKcFRQS2s4OGc2QUY0RGVRUFo5WkhIamlQZERJZUJ1am95Y2MvaHJoU3VueWJ4cE52b3l1MDRxVlcxY0sxd2FBNgo3cEd2enZNcUE0S3kwdkMwd2NLdjRxeGNBYm4yaTFXVDhuN1ZZb1lJNjc3eTY2NWc1V0laR2FzTHNsYVAwT3lmCm5vT2ZGKzIrUlFsNkVTWUJlSlBkeDRQVkJwWVdaRUNOVmxhUmhIZXZkRUhOeGl1enZ4N21Qd1pDRkh0QXJFVHEKbjZ6WGtLMHp0R0tVSnFjNXcvbTJPWGp4eURPZGF0VW0vS1VwOHdJREFRQUJBb0lCQUdoV3RMM2NNQWtEWXVzRgozUWkxajVPNFFxUWgyNEZRdUloY3FJWGxlbU1WMVZFY00vUjFPaEF4dkx6RjdlK3E4Sk1xSDRscFYzcnhCaHBFCmMwUU5uNEk2eUpXbTJwZUw3Z3k4UkRNUVN3MWxRMXdLQXJUbjg2Q01odWtVQWRBM3VrZkhFKythNW9xUHRtZ3EKM0ZEcHcxMVFGckhuZnNFbnNXSjhlMDJIdmtXSGoyeDhzZHpzQndBS0c4Uk1hS2pVMjZxWTZDcFFRS0hWSDF3NAo0ajdVcmZ3NUk5cExsd1A3cUR2QVF3NXpPWUNyaC8wODBjV2NrUVFQV1JBQkExZHFURmRrOUJhcjFDMTVTN3FiCjQ5VCs1MHZBck0zQzNXUmQwR2l4d3I4a1pyVFpjKy80VUVvVURUamtEVUNoWnhBVHdNUzZyNG1ya1Y4aTVlMlgKeFQ4VUQ4RUNnWUVBMzZ5Q3RnQXkvNWpHUTlEWXFIUWhJT2NXby9qcFpIZG41TnpQZlRBVHlHclFaZGtnRnlCLwp3eGgwcHQ4T2RCcExNMW1DMWI3VVFaVjN0bVlCYlRDRk55Lyt2ZTBBQVppZGVPWDhBSUdkc0pjNkRoc09BbTEwCk9yV2VXcEZsWmhJVTNUU2xocXJoN3JZdTB3L25mQXc2MTgvbEpKRVdJSEdpK01GeWpUb2VMV0VDZ1lFQXhlM0cKMkh2KzZIeFplNEZpVGowaWUrOXBkMmt0NzRGU3FkaEV1Szd3QUY2SWpsYllBVkNoNEhoWnd5cDdmdkpzMzJyQQpNY1U2bDBOQnRHaXBWZXlUVTBGeUtQM0JTemNJb1p5TFJiNXp5OGl1TytteW5rVmlGQTNscHR1aU82SVB1MFRXCkxrTXJEcTdqTlF2eTRJU3Y1MjVKUVVwQmJmV3M3Q2tiQUtHQm85TUNnWUJrU3V3SlE2bWFaaHh3aUJLOTVlUjgKNW1HR2dMUFdNcHhKU0tGWTF0Zm9BODBSL2Z1Zm94am1sKzZtYkZvRXdVMTY1dVg5aGFXVENydzA4eVFzbTVjQQpHZXMxcWpGWWhlQUdOOGw1U0tVMmEzakNubXIzdDdCb0tzdW9mSTFrNlRLbHhWZDdQT0ExczBibnFMZjVMVnF0CkxqRG01bzl2V01Ua21Za052a09Od1FLQmdRQ3VQRzc3Uzh4T0pJa3hLK2k2THg4WU10MkkvTkl2TUl6d2J5MnYKMW0vNEl6L2E3YUFoS0RZWVFGbmtjSlZlWDFKd0txMGVJeDA4NHp3SDhNcUFsVTNyMElVS2lMZUwydHFDU2loZwpNUlFHcEphY3IxRkorcElvVFVPSTYzZVpQMFRSK2ZzQnBxZFV1YWZSbnI4ajNpcHJkSzZRQnlvcC9rZEhiYmdUCmlobHhlUUtCZ0c0RGhLRGkwTGI1Y2R1MnZNclhPUFpsclIzQ1E3QjJ6SEQxeVhzc202eU5pUkUyRFR6cWV1anQKaEdiTHp3NWZITDduN3VUeklhL2F1SXhNNGo0MHYrd3JidXlDajVFUWNjZVBXR0Zndm4vZ0JndFpsV09OUkJHeQoxamlXSlM0VGtiY28wMjh6Sk0wTnZjVUt4REliZ2ZnT1Q4Yk0xSEFWSkdkK3dnRHo4NUpWCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRTUU2b3BYRmxEcjRBK04yazRtOUR0akFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TWpJd01UQXdNakV3V2hjTk1qWXhNakU1TVRBdwpNakV3V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRGZNYjBFT2xCczkzbG15bTc3eEN4VkRGZzdKTE9CMng1TER6WGQ4M1FuR0Zudm5nRDkKSEdubG1NaEJqYXVSdFdhdDFRQ2oyNkJnMkZsV3pNUGdyOWpxM1VoWS85eGt2TFExUDhrankzWWFwQUIwdEZaagpMUm5hRUNLaHc1NFRGQ25Wc2RlWU1IQy9CaGZXcjFnK0Y2S3MwZjBEQkk0Tktybkwzd1JtMHhvS21YUVFSbldtCjdYcEZaTWZ6OGhoejdkRDhIOS91TWdZNC9mTC9JckxWZ2ZndmFTMm5sTVRzTmRRNTdMT1l4S3ZjUXlvVWkzSHUKZ2lRU3pNd2ZEMXNvNVdBU2hoU01JU0ZyYXU1RmUrQzFVdFJ4cjhqM0pTY3NhVjNyN2R0MTNYcW96SDd5ZysybApTRnZ1RUY3dXlPSGl1bEkyaW9kV1p3Y1d0Ym9NZUp6QVB1T3BBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVzZnc2QWZDSCtSNlVNRmREQWRqL3ZBTWo4SVl3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFGcFR6NysweEpGeE41UjhGVjBWYnlEaUpveUYySkxma2VqRVRLMFBlQk1GTkNhSXY5dmppNDYvCjF2SDFmRm8xSFJjRWdZemFoaDZzSld2dWFLdFBXQzIwck9vb0tBZTU2RjBEWmsrbHQ1R2VxS3RIVzZ1RWt2MHMKRXZVSzFtcW5UNnNTOVBFREVWM1pSaTNKKzBIOU9kREZhaTkxLzM1Y0o0NzcwRmNsanB1ZGdzVVJoRG5pUGNrUQo3OWNwZzJhOWR1QkRrZjlQOHlscXBzZlRhOFF6SXBjcnBxSUJuWG92RCswS0ZUTk1DN3V1NFhNb2lSNnVzWjJzClNYRnRCcHBSSXdOZnF2SUYwM2xEdnJKUVJXRVJ3WXpiWjU3SGRwQXhGdlRNSHpsc25QM04rOEo2TVh5bVEzdUkKS0J3SDllQ29QeUpLRlkreFNuSXJHVksxajJhbnFVVT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVakNDQWpxZ0F3SUJBZ0lRQkZQWDhRWUF6RytZNlJJUzNJRnBmVEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TWpJd01UQXdNakV3V2hjTk1qWXhNakU1TVRBdwpNakV3V2pBb01TWXdKQVlEVlFRRERCMHFMbTFsZEdGc0xtaDFZbUpzWlMxbmNuQmpMbU5wYkdsMWJTNXBiekNDCkFTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTVdaVG1aV1hHdzVuTlg0ODFBWkR2YnIKYVFqbzk5K1R6WnIvNW1tWGphMTZtSDFNNDVtRHhxQzRia3NkSEE4bkFaZzZYMklhZmZzRXBLZUNKTGptZG9wTwpnUWF1MktPd2N6UklUMGwxVVlXa1h2dUMxejNyd3dWY2YySHFTRUZmakZDNWF4NGYzdU9IMHgrbW44VnE2UUlzCko0Unh3UjVaeEZwQ2VyMjk5Z2dRL1B2REtsK0NnV2F1YjNQTm5sZWlHbUFzVUtrVWQ5VVdNa1pydDdHSHFHKzAKTFhNQ1l1RXpVd3RWWmd3UWhjd1QxVE1sekVIc085c0VKeGRXL2hHRlRRTWtvRVJkK3BLSXUwcEVJSVZDVU9lbgpEQnh4V1hoeE84enRqY09CZzFMVnBpWE1QOWJ5bS9aK3dlUjZmZ2puT3dobG53YVJLdVd2OGhYaDkrY2I3QThDCkF3RUFBYU9CaXpDQmlEQU9CZ05WSFE4QkFmOEVCQU1DQmFBd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUcKQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXdId1lEVlIwakJCZ3dGb0FVc2Z3NkFmQ0grUjZVTUZkRApBZGovdkFNajhJWXdLQVlEVlIwUkJDRXdINElkS2k1dFpYUmhiQzVvZFdKaWJHVXRaM0p3WXk1amFXeHBkVzB1CmFXOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBTlRhcFNqeW51VXU1Yi8wRWJFTFdxMzBxRW10TnJMRk5jMTcKeUtUKzZEbURXR3FTNVVDcVhhVThvSDEwV3lSRll1SFFVWkROa1JnQ2haRlRKVWN4SmZTMUhmR2FnaDZGUURzcQpZOFNIZ1VLa042cHE1M3NXVjk2VlVUT0VOM01qMmRHSVpmQWlEQlgwaHBpcnBaY2ZvSWdLTEg0cTFnNGRSVlgrCkVtMGMxdFN0K0hwUkc5SlYydFN1dWNQWHcvaUpmTmRVdndLSlRNdjdobmUzajQrSlNWQm9oZnhxcGZpUlE4akwKMHhvblZxUkN3ekNIZTNINk5xN1VRUk9wQjlqcGxidVpHQzdBQUxDWlUrU3JPSlMrbHVGK0tsTEpsVTY1VzJzUgpRcndnRVQ2OVhUdmJVb3ZXNDU2NGpyOWhhM0dEQ2xRVVVDdldvTGZnTzFxQjFrNnJXb2s9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBeFpsT1psWmNiRG1jMWZqelVCa085dXRwQ09qMzM1UE5tdi9tYVplTnJYcVlmVXpqCm1ZUEdvTGh1U3gwY0R5Y0JtRHBmWWhwOSt3U2twNElrdU9aMmlrNkJCcTdZbzdCek5FaFBTWFZSaGFSZSs0TFgKUGV2REJWeC9ZZXBJUVYrTVVMbHJIaC9lNDRmVEg2YWZ4V3JwQWl3bmhISEJIbG5FV2tKNnZiMzJDQkQ4KzhNcQpYNEtCWnE1dmM4MmVWNklhWUN4UXFSUjMxUll5Um11M3NZZW9iN1F0Y3dKaTRUTlRDMVZtREJDRnpCUFZNeVhNClFldzcyd1FuRjFiK0VZVk5BeVNnUkYzNmtvaTdTa1FnaFVKUTU2Y01ISEZaZUhFN3pPMk53NEdEVXRXbUpjdy8KMXZLYjluN0I1SHArQ09jN0NHV2ZCcEVxNWEveUZlSDM1eHZzRHdJREFRQUJBb0lCQURybkNFZlpWcE9zV09Rdgo0ZGZ1b0ZkYXRXVENqYUZJSGZJbWRqamp4SWdDRTVMR2FOSktSZHVESHQybFA4Z0VpS1VvUVdhdEh3REUwWkJkCmF6VHkva01jUTdvS1JPb0duMURtZlR3WWpNU1p5dmFPZWpzckhHZHN1MHdrMm9VaVJtR0o1RFNHcTVxSDBwZU0Kdy9QRmVzLzYrWXl4bkMrLzhwZzFXUUZXcnhDWCtaYnlTeUNXYTlwQjlwSUNvR2g3TVNyTmRIbHFoMHRua0pSVwp4Y0tIeVhRR3hGZjNMZFVrcVpTS3FMOTFMdDV1Nllkd0Y4MS9tUXAvVWx6MC9SeWprSW55RlRxbi9VQUtBeDNkCkRKUUg1WkN3NGQvbTVhb3VwMzU5dTJWUmRTNGM2QnlGa0JYbEFYN1JlcXRra1pZeDNmWWNxcWdRVDFuL1paR1IKTnpld1l3RUNnWUVBNjJpYkxCV1BQeXpmRnd0YmpwTTJEdWdoRlFtSjBPdktHTTY1NEpTN0JZTm5aVDNxOTk1QgpoV1U3eTR0Q1Rsak4vOGdjdXo3M2EzNEJ2d05iSXdkU2ZWRXJnYjRIa2dJTEdxaG83L2tiWHowblc4c09oaWJ6ClByZ0hNVXBLd0toMmJnOUZjNkRiQnI3aFhtbjVIcnF2WWd0RFlnVjdEV3lxS1RzRXpERFA3U2tDZ1lFQTF1SUwKUGYweFhhN1V5U2UvbXd4ay85dmNzbW1yeFFaMG5nZHRrU3dqRWhtVm9yR3cwUFRkUmVBZkZ4N3JZY0ZNQk8yOQpZenRDVGRIa2R6ai9mMlV2RXdleEFXeVYxVVppVkd2Q3UxUzkvSFM5Z1kxeDJTeStpdy9NcHhMd1lxVWFYaCtTCmxWYTdwekxBNkR5cUZqT0xxS2xXcE8rS1liQXVRV1l6cFo2Mi9uY0NnWUVBbGlxK2dacW5MRGVsZi8vQXdleHEKV1l2K1BuczlMTWFjdnNKd2xEQ01OUElqN05OWXBoRmpYb0s3YUJaSGo4N2FhY1h2ZmdxbXJpMU5VOW9DTXhBaQpzTW9zcExEaUIyUENUWmtNaDdneW04aFk2UmRaQm42bVFHWUlRSXNSc0dCR1crTGwvT0twbFY0Q1NjWDBJb1FZCkNNVUNrTzdLRmtBeE0rZndJWWtwdWpFQ2dZQnMxOXF4NzRvTjFmemFWMVBxaVlDdlNRS2xMSGxoTnovaXZBaDMKdkUrWFgzWTREcUZ0ZGxxT2hsTzVObVFzQStrcHBmS0VUUVBzdnlCbWMyeVhidjFGT21RaVFJbzBtWTQ5RE1oNgpjeFk0eGprbllpb0V3M0ZRcHhRV25MVStnanEwNm5FcFMrR0pjMS9iUXI4MHQ2OUtJMXhMOXptMCtiUzBVN3hkCmErTnRTUUtCZ0dxOFZHR0RrV3dyV2owQmp2cGNTTnExS3pNdWpkL3F2UHFoMzNnYnNoM1RDRFNzZHJXbEVENy8KWEd6SFg5WHRza1N1UUY3WmxwQUFxVU9ESC84bG55d3liYi9CRTJGcVZuMzlqTTdZb0FaSlZIZW5vazRVN2ZrMQo2SEZWenBzQlcreUxlM2lFSWhTSUVKem03Q0hDcWgyNVA1NE9yV3ovdjVCT0FxQTdvYkdFCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 50%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: fd497284b1c8d966be7dea373aed7f8d1e3192fa9b94bebce9a05e46176f6006
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: localhost
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        image: quay.io/cilium/operator-generic:v1.14.5@sha256:303f9076bdc73b3fc32aaedee64a14f6f44c8bb08ee9e3956d443021103ebe7a
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        readinessProbe:
          failureThreshold: 5
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 5
          timeoutSeconds: 3
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: 375a925bed4758ffc0fbd25a2ca46b1e775668d02925f0281af97cd647ada807
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.14.5@sha256:dbef89f924a927043d02b40c18e417c1ea0e8f58b44523b80fef7e3652db24d4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          tcpSocket:
            port: grpc
        securityContext:
          capabilities:
            drop:
            - ALL
          runAsGroup: 65532
          runAsNonRoot: true
          runAsUser: 65532
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      securityContext:
        fsGroup: 65532
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              - key: ca.crt
                path: hubble-server-ca.crt
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: 02d6b04b131029fae39270192dcff10fa3a64af9d1d4d0049f1efbc3f5526a34
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.12.1@sha256:9e5f81ee747866480ea1ac4630eb6975ff9227f9782b7c93919c081c33f38267
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.12.1@sha256:1f86f3400827a0451e6332262467f894eeb7caf0eb8779bd951e2caa9d027cbe
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: fd497284b1c8d966be7dea373aed7f8d1e3192fa9b94bebce9a05e46176f6006
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: KUBERNETES_SERVICE_HOST
          value: localhost
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        image: quay.io/cilium/cilium:v1.14.5@sha256:d3b287029755b6a47dee01420e2ea469469f1b174a2089c10af7e5e9289ef05b
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                set -o errexit
                set -o pipefail
                set -o nounset

                # When running in AWS ENI mode, it's likely that 'aws-node' has
                # had a chance to install SNAT iptables rules. These can result
                # in dropped traffic, so we should attempt to remove them.
                # We do it using a 'postStart' hook since this may need to run
                # for nodes which might have already been init'ed but may still
                # have dangling rules. This is safe because there are no
                # dependencies on anything that is part of the startup script
                # itself, and can be safely run multiple times per node (e.g. in
                # case of a restart).
                if [[ "$(iptables-save | grep -c 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN')" != "0" ]];
                then
                    echo 'Deleting iptables rules created by the AWS CNI VPC plugin'
                    iptables-save | grep -v 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN' | iptables-restore
                fi
                echo 'Done!'
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: localhost
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        image: quay.io/cilium/cilium:v1.14.5@sha256:d3b287029755b6a47dee01420e2ea469469f1b174a2089c10af7e5e9289ef05b
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.14.5@sha256:d3b287029755b6a47dee01420e2ea469469f1b174a2089c10af7e5e9289ef05b
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: localhost
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        image: quay.io/cilium/cilium:v1.14.5@sha256:d3b287029755b6a47dee01420e2ea469469f1b174a2089c10af7e5e9289ef05b
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.14.5@sha256:d3b287029755b6a47dee01420e2ea469469f1b174a2089c10af7e5e9289ef05b
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        projected:
          defaultMode: 256
          sources:
          - secret:
              name: cilium-clustermesh
              optional: true
          - secret:
              items:
              - key: tls.key
                path: common-etcd-client.key
              - key: tls.crt
                path: common-etcd-client.crt
              - key: ca.crt
                path: common-etcd-client-ca.crt
              name: clustermesh-apiserver-remote-cert
              optional: true
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              - key: ca.crt
                path: client-ca.crt
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
