apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
  - list
  - delete
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  - ciliumcidrgroups
  - ciliuml2announcementpolicies
  - ciliumpodippools
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  - ciliuml2announcementpolicies/status
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  - ciliumcidrgroups.cilium.io
  - ciliuml2announcementpolicies.cilium.io
  - ciliumpodippools.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumpodippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumpodippools
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-algorithm: maglev
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: dsr
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "1"
  cluster-name: metal
  cni-exclusive: "true"
  cni-log-file: /var/run/cilium/cilium-cni.log
  cnp-node-status-gc-interval: 0s
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  disable-cnp-status-updates: "true"
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ipv4: "true"
  enable-ipv4-big-tcp: "false"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-networkpolicy: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-announcements: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "false"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  external-envoy-proxy: "false"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA, drop tcp flow http icmp port-distribution
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipam-cilium-node-update-rate: 15s
  ipv4-native-routing-cidr: 10.244.0.0/16
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  l2-announcements-lease-duration: 120s
  l2-announcements-renew-deadline: 60s
  l2-announcements-retry-period: 1s
  mesh-auth-enabled: "true"
  mesh-auth-expired-gc-interval: 15m0s
  mesh-auth-queue-size: "1024"
  mesh-auth-rotated-identities-queue-size: "1024"
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  proxy-connect-timeout: "2"
  proxy-max-connection-duration-seconds: "0"
  proxy-max-requests-per-connection: "0"
  proxy-prometheus-port: "9964"
  remove-cilium-node-taints: "true"
  routing-mode: native
  set-cilium-is-up-condition: "true"
  set-cilium-node-taints: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-proxy-response-max-delay: 100ms
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
  write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: metal\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ngops: true\ngops-port: \"9893\"\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max:
    \nsort-buffer-drain-timeout: \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUw2UmpDZUQ3RHZqdW9UK2x1c3N4R0F3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURjeE5URTNNalF6TWxvWERUSTJNRGN4TkRFMwpNalF6TWxvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUE3TEowU2VqZUV0MUpMUmdjejRGVHRBN214czVuZFVhb3M4OUdpSWZzVW5yQTJFaTgKajlSUmVNOEhjMXRrZ205WDVoU2hiOUtEMzZSOE5HSUc5VHR3S3VwL0J4ODcvcW1XeUVKWVBGQmhiYXhuME9GYwppbnhwcXdLeEFiNTJ0OG5WR1VmTmhObkMzbUsyc3kwNDEzQ2pYemc4OU9Gald1WHcvcUJERHEyM0l5YWhWSmtsCjY1Z1VoWDBZUXRhRDYwSFpwcHEySmZhNG9rdmg4R0dNbEpqNXhiSWltTURPYTM2ejRUTjJOQXd3OHE4MmtXN3QKOWwwVEZsWWhHYWljanVlZmNKYzVNSk1RanVLakl2WGZUVjNpdUgxcTZzMVBpRlFkcXhDeXJQVFQxMVpmVS8yeApWZW40Um5KdnQvT3ArUVhzNThrTzZGTUh6R2oyYytaRzRyLzU0d0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGQ256Z2ZUY0d3NWRSaG5kbE5QNVlsUjZhZlZ0TUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQUdya0JPdlByWGI3REdLb2I2NTdLU21hT0dFWjVMVDVNUkxsTmM0Q1dxZjBZNFhrbmJzREppClQrbTlvZXNHU08ySkZibEc4elh0YW1WdkRDblovMFRtNDZZZVNuQUxYOUQzV1FYVnlmaEFiZzRJZENJZE9RRnMKd2RJckNBNld4U0JMekZZRmRqUzgwTEJUdm1vMWxLT002emJXSVRpZ3ROOHVmbER0Zis2RVprR1poS1JzYmowSwo3UkxoSnk4SUVBMjBBeExyRThpcWtYMnFPMFBQVGlkUjhmWmw2TWY1Vit4VFZ2MkRsbDIwb1VtV0txbTFEcDJDCmVXcENscnZSZm5Db0RFeWRxSzhlZ1NuUzNmcitoc25lOVpQdmVqbllqSE9YZ3Q2V012eHI2THZndlRJMW5qWHAKS2U3elFMNVp0SkthWko1bmt0WlRkaUN0a1M3eDNGZHkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBN0xKMFNlamVFdDFKTFJnY3o0RlR0QTdteHM1bmRVYW9zODlHaUlmc1VuckEyRWk4Cmo5UlJlTThIYzF0a2dtOVg1aFNoYjlLRDM2UjhOR0lHOVR0d0t1cC9CeDg3L3FtV3lFSllQRkJoYmF4bjBPRmMKaW54cHF3S3hBYjUydDhuVkdVZk5oTm5DM21LMnN5MDQxM0NqWHpnODlPRmpXdVh3L3FCRERxMjNJeWFoVkprbAo2NWdVaFgwWVF0YUQ2MEhacHBxMkpmYTRva3ZoOEdHTWxKajV4YklpbU1ET2EzNno0VE4yTkF3dzhxODJrVzd0CjlsMFRGbFloR2FpY2p1ZWZjSmM1TUpNUWp1S2pJdlhmVFYzaXVIMXE2czFQaUZRZHF4Q3lyUFRUMTFaZlUvMngKVmVuNFJuSnZ0L09wK1FYczU4a082Rk1IekdqMmMrWkc0ci81NHdJREFRQUJBb0lCQUZ5RUpBLy9oVTI2VUsvZgpqT05PbVhqM21oeDY4TlZXR1Bxdk9kS0R6a3N1ejlHNkhIbmJjenpWTHdSWDVLRlhBL1JhZS85Sk9XSmcyR3RoCkpYY1ZGSEt4MVpUakVJQXBxVlg5R0ovNml4cGpHUEQ4SlQrOEFWRm1hK2xTbVBTZFh6M1NZdkphYTJDaEZPaFQKOUxQQXd4cWswSzZtcWo4TlFYVkZEdkRkMVlkWEFhZGxzdFA2T0R5Sm9HNC9RdzZRYTVpekpscytncUVsT01oagpkU3lWbWNCRXd0cFlEa0JMQnovazMvaXZZYkt0UE1pYkRwWXdVSHlnQUsycXBYVW85TnpIaW5mSFF6S1ZPREpBCnpmSGlUNzNsRkdndWdTcGdsdGJmeUo1ZzVCTE03aTRJU0lVSVI0SzhCMlg5Q3I1T1J6N0lqTzQvM3BpV1VrYzAKSlNPVG5JRUNnWUVBK0cyNThEc3FKR256N0lENDFybkpBVDdqOEY4d2RnQkozMnBaUGlac0h1ZERhbGNhSTErVwpmQVg2ejJrNlZsb1ltYzV1eWFNTkhoVkR2V3AwcDdJWDBIaXBrT3JaUmpWY1U0cFpWNlQ1c05WNnE2TjFweGVzClRhbnRQK0hybmZMWFVtQWV1WFlUN3hhMFR2TTNobTNwS0tpLzhXT3RhVmNqT1k4WjZYdnJXQjBDZ1lFQTgra3kKYWx3SUhwSXB2YXJYNkRmVlUyL2hvcDFQeTZ1dTdDbFQ5cVVTdWxtNjlmeWdCcjduQmdTc2xKYUo5SHF5bWFwTQpMclRjd3lWZFArUGJWelA1SDFkRHhXR0g4NnBabDFFTDBZRTJtMnN5aU1lMmk1Rzh2MHpkYXRFRVk1WkxqWkFIClc0VFlUeHpXejYzVEtEb2MzdnFadFRJQ3Rsdk1sYjR5dk1qcitmOENnWUVBaVFkVkdYbzQrNDdwdWRsRjZJTGYKcVcwOEkxa09EUGlKeHM4TlhLZXEyYnpzUlpxMzB5MGxmMUY1RDdEV09jMUdab2drT2RwVElQWFB3SW9Zd0dzTwprYklNcmQrc2F2cUI2NTZUT3pISGZFKzBjem9kYWtZM2h6c2tueWtKWXIwUkllSGM4S1Y5eDFJNXNKYWRXT3dGClFLVWNBcFRka1E0OFlzSlpJNTF6cWMwQ2dZRUEwOCtleUY1RGJzamZGcVpWK0lNRDdnRXFvRnliL3ZLSVpPMCsKek9GczhnY2FKS1BORkE2VDhOWCtTTXF4NG16cXpDYm5JV2hPamVqVW9iYnRzenlmQ21odG9lcWdkU2xwdzgzTgp4WkhBS2hkZE93cXpxMkJUMkl5WGV6c241Sk9QNk04NmxHODRxUHNTVUNkVFI0dXZwck5ZNTlFV0tlWnVNMXVJCkZBa25ZMkVDZ1lBcUU4d2QzTXkyZXFMMndxODR6VFlybXBnc2RadUxDcVp6aXZzTWNCcmJzUVhvMEx1ZTNweUUKOFVvRm9RME81d1NPRDExb0ZvV1hzc2JtTnUrV0pWQUxSa1BjZkxrTGhja1V0cyttN1JGaTE1QW85NERtQk0wRAp0anFaTkJJYWowZDFHREVUWVg5a0VCWENIRk1KUG9pQTVrY0pWeU9YdlhTS1FhU21Xenh5Nmc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUw2UmpDZUQ3RHZqdW9UK2x1c3N4R0F3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURjeE5URTNNalF6TWxvWERUSTJNRGN4TkRFMwpNalF6TWxvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUE3TEowU2VqZUV0MUpMUmdjejRGVHRBN214czVuZFVhb3M4OUdpSWZzVW5yQTJFaTgKajlSUmVNOEhjMXRrZ205WDVoU2hiOUtEMzZSOE5HSUc5VHR3S3VwL0J4ODcvcW1XeUVKWVBGQmhiYXhuME9GYwppbnhwcXdLeEFiNTJ0OG5WR1VmTmhObkMzbUsyc3kwNDEzQ2pYemc4OU9Gald1WHcvcUJERHEyM0l5YWhWSmtsCjY1Z1VoWDBZUXRhRDYwSFpwcHEySmZhNG9rdmg4R0dNbEpqNXhiSWltTURPYTM2ejRUTjJOQXd3OHE4MmtXN3QKOWwwVEZsWWhHYWljanVlZmNKYzVNSk1RanVLakl2WGZUVjNpdUgxcTZzMVBpRlFkcXhDeXJQVFQxMVpmVS8yeApWZW40Um5KdnQvT3ArUVhzNThrTzZGTUh6R2oyYytaRzRyLzU0d0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGQ256Z2ZUY0d3NWRSaG5kbE5QNVlsUjZhZlZ0TUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQUdya0JPdlByWGI3REdLb2I2NTdLU21hT0dFWjVMVDVNUkxsTmM0Q1dxZjBZNFhrbmJzREppClQrbTlvZXNHU08ySkZibEc4elh0YW1WdkRDblovMFRtNDZZZVNuQUxYOUQzV1FYVnlmaEFiZzRJZENJZE9RRnMKd2RJckNBNld4U0JMekZZRmRqUzgwTEJUdm1vMWxLT002emJXSVRpZ3ROOHVmbER0Zis2RVprR1poS1JzYmowSwo3UkxoSnk4SUVBMjBBeExyRThpcWtYMnFPMFBQVGlkUjhmWmw2TWY1Vit4VFZ2MkRsbDIwb1VtV0txbTFEcDJDCmVXcENscnZSZm5Db0RFeWRxSzhlZ1NuUzNmcitoc25lOVpQdmVqbllqSE9YZ3Q2V012eHI2THZndlRJMW5qWHAKS2U3elFMNVp0SkthWko1bmt0WlRkaUN0a1M3eDNGZHkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lRVlR4ZTJaazlZdDJ5cHJ1NENSNkJnVEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TnpFMU1UY3lORE15V2hjTk1qWXdOekUwTVRjeQpORE15V2pBak1TRXdId1lEVlFRRERCZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDeE1CWUNRUi9aVDE3RlkwZGFkV3BHYjNWVldFNUcKdElyQ0JKUkFaOEs3aXlmUFVTRGUwYnpPRDNjd2FXTFl4Z0E1Ty81c2NSMjVEdmgrZzRvOHlEOUhVOEFKYUJSbQpiVGlwekZlb0d3aWNSQkR5eitZaUFBeWdVSXVGbEVma28weUJUUk4xdk5pcnFneTY4Z3JXdmxrek1hUUwyM2c0ClJpWE9yWUNoUCt2OXBDOEZOM2hKV1lFZGRZVDN5YTQrcDR1cmk3UEIvTHluVndtUlBzWjJ5Q3ROQ05lQ3VKOEsKNVJuQXhhT0JBRzhSSjdFdGJveHJuNlAyZTB6MXFnTGhDdzhrdElySVhlS0RtVWJmWnhUSlRzYjJvTUF1czhmcApmUkdOdldVaXlXVXYyZEFMbDVvVkFOcEVpbUFyekR5SzM4MitKTnFROEJJUUJMQTk5YURUU0RpRkFnTUJBQUdqCmdZWXdnWU13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZDbnpnZlRjR3c1ZFJobmRsTlA1WWxSNgphZlZ0TUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bExYSmxiR0Y1TG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFJRWxVYUV3YUR6dWZ1ekJUMXJ4NXduQWZncXYwOG1nUTZtSW9Jb21RMGY4S0JBRGwKTU5pOUUyOFhEVzlQV0RDZjJYaGVqQjcxWE44Y1JCaDlqbG5obmxraG8vRUlNZXduNHU1RWRmK0xORWtYaEJMSApVczY5VjlGQmQ3V1RTK0pycDRmMDJ2TnlKa3ZNalhaaTdzZFJCOTZ6N3NET0tSd1QxdFBGSm1iZm83SUtNYTdnClJncHF3OXJMMGMzQjMvYW1td0tJU0FwYXlRZFJCc1pGVENSVmF2ZXpOYWMwVkswazZydkQ0VTR5ekl4WFBLMzAKdUhHcGMwNmU3aWxnSWNrOHhsamt6ZEJLVDJGNVRKZkJIWE9NcEdMRW1YMitjNm53TkVNdWRGbGhmVndqRFpXVwpIc1dac0QxNjdZbGZMVTdSQ21zODQ3UzJxdGhDVmlGdXdGZjBUdz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBc1RBV0FrRWYyVTlleFdOSFduVnFSbTkxVlZoT1JyU0t3Z1NVUUdmQ3U0c256MUVnCjN0Rzh6ZzkzTUdsaTJNWUFPVHYrYkhFZHVRNzRmb09LUE1nL1IxUEFDV2dVWm0wNHFjeFhxQnNJbkVRUThzL20KSWdBTW9GQ0xoWlJINUtOTWdVMFRkYnpZcTZvTXV2SUsxcjVaTXpHa0M5dDRPRVlsenEyQW9UL3IvYVF2QlRkNApTVm1CSFhXRTk4bXVQcWVMcTR1endmeThwMWNKa1Q3R2RzZ3JUUWpYZ3JpZkN1VVp3TVdqZ1FCdkVTZXhMVzZNCmE1K2o5bnRNOWFvQzRRc1BKTFNLeUYzaWc1bEczMmNVeVU3RzlxREFMclBINlgwUmpiMWxJc2xsTDluUUM1ZWEKRlFEYVJJcGdLOHc4aXQvTnZpVGFrUEFTRUFTd1BmV2cwMGc0aFFJREFRQUJBb0lCQUF6bzZ3R1pDeUFETjIxOApVVXVXK0hwUFRxWThPOS9NOGJzM0tESVZIVXdhMUhpM2VZU2lsWFlTREdZYmw1Y2h2Z3h0Z1prWEdNcE4rKzhECjJJT2JOM2tUOGc3OVpWY2RLQjYvQTdmODJFRENlTldvTGlWV0NaVjRxT0cvcndsS21KMW5KejdSMXB1VFZVQWQKdUlweTdmN2I1QTcxRzZwRitpVTM0UUplck93YTlrTnpuTUVZekozbzVTU1ZiYTkwbUdDcnp4bncycmRpTTFFZQpndDhmWExUV1R0TmNHRUZST3hKNFY4RmRVVGxjK3JVMUpuQzRFTEVjT0Zoa2I1VDNiV1lXb3lwc1NpdGtmWjlOCm41a2tIUTlwenllVjVkZUQzM3NBV2NrUkdldWI4am8razUwZ0IvdzdVMU16OTdaWHI0b3RWSjZhVVppbE84NmMKaWxGYmVkVUNnWUVBME41YVBmdzE2WTlHQytMOVJIY2xjaURBTWpqdFJoY1ZhcFJWUVRUYjAyRXk5OGhkZy94eQpMVnlNdEc3WXJjOHlJSTFIbi93c2Q4UUw3dkNpM0l5R0p3SkluVHNLckNyN2NJUDY0Ullta0wxSENzRlRIOVNwCkxMamh6NXl4S1pQNnR1Z3FwWDlsODltR0VqcnpYUGhPZzNueGhEM0pIWDZtdDkvOTFnWXU1VHNDZ1lFQTJTdWsKY09UK1puWS9MYnJjRGJ1WFZ0eFVaQjJSMEV4VmE0NXRDRndna2oyemVRWXJGdWY3ajVxcnB4VytVakNHTlRURwpFSVlNRzNYaVpUbDVCakhVMHRLWExmMjU1dmFHRmc5VlVJNVhPQ0EyaitDV2tXR1FCVVlZdHIzQUplbExrSzhtCmhCOEllbTJnamlQc20zZkxKUFdjaVRUckFYMktIMmZDcW5wd2ZUOENnWUIvRHJRQXZ2c2cwRHBCSXQwRW1DSWMKVWhYNHR5NkhrNlZBaDJseFdERmRYZVIrWE5HZVo2UWhPZ3FSL0ZndEt6eUlGc2w2WmhHNjdYU0E3cnR6eEx3YQo0TVhCZDlnZk1hcHhJS2d0NHFhbEo2OGV1TW5UTkMrUmVBcE5uRGtkWE5xSUI2Vmh0YVVVZUwrWk9Xa3ZwaEZFCjQ1cHE0cGNFTFRaSDVxZG9XYXlQWHdLQmdDRmdLNjJPQStzTFVUcGQ5V1BHNk1OWXFUK1pxOGN2ZEJGTG1rWW0Kb25yWE1MWHcxTDU0ZUpqaFZIQWhUMWFpVG4zdTFtSER1Q2lnUFdNQktqQmhpQ3UrWWEyWHlQSk9BTjF6RGRHTApqcXY1aDJrbFF2NmsxOVYzcUdTdFZOSit3RFpFTk04cFZjdzYvT25iYTRtWko0ZE9sL2dlUWQvQXczR0FLTks2CmJuOVJBb0dCQUw5TWhFRTVMa0ZMd01ldTRaMkVsTUY2cCszUG5LaCtxTU84NWp4K00rdm10TmN1Q0FJZHp4aWoKSFhHaVRZcjdKUVhxSEtGQmNEZWw4YW9qV0JYTFZGR0plR2xkNFBkSG5ZTzRQKy9PRWREWHJ3SXlONHk5bVBVdgoxM1l3dmV5UDhHeWNxV2lSdUd1ekxsa3dIWmx4MW5pTzd6bC9CWWtUWmdpVmxMTGgyZWMyCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUw2UmpDZUQ3RHZqdW9UK2x1c3N4R0F3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURjeE5URTNNalF6TWxvWERUSTJNRGN4TkRFMwpNalF6TWxvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUE3TEowU2VqZUV0MUpMUmdjejRGVHRBN214czVuZFVhb3M4OUdpSWZzVW5yQTJFaTgKajlSUmVNOEhjMXRrZ205WDVoU2hiOUtEMzZSOE5HSUc5VHR3S3VwL0J4ODcvcW1XeUVKWVBGQmhiYXhuME9GYwppbnhwcXdLeEFiNTJ0OG5WR1VmTmhObkMzbUsyc3kwNDEzQ2pYemc4OU9Gald1WHcvcUJERHEyM0l5YWhWSmtsCjY1Z1VoWDBZUXRhRDYwSFpwcHEySmZhNG9rdmg4R0dNbEpqNXhiSWltTURPYTM2ejRUTjJOQXd3OHE4MmtXN3QKOWwwVEZsWWhHYWljanVlZmNKYzVNSk1RanVLakl2WGZUVjNpdUgxcTZzMVBpRlFkcXhDeXJQVFQxMVpmVS8yeApWZW40Um5KdnQvT3ArUVhzNThrTzZGTUh6R2oyYytaRzRyLzU0d0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGQ256Z2ZUY0d3NWRSaG5kbE5QNVlsUjZhZlZ0TUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQUdya0JPdlByWGI3REdLb2I2NTdLU21hT0dFWjVMVDVNUkxsTmM0Q1dxZjBZNFhrbmJzREppClQrbTlvZXNHU08ySkZibEc4elh0YW1WdkRDblovMFRtNDZZZVNuQUxYOUQzV1FYVnlmaEFiZzRJZENJZE9RRnMKd2RJckNBNld4U0JMekZZRmRqUzgwTEJUdm1vMWxLT002emJXSVRpZ3ROOHVmbER0Zis2RVprR1poS1JzYmowSwo3UkxoSnk4SUVBMjBBeExyRThpcWtYMnFPMFBQVGlkUjhmWmw2TWY1Vit4VFZ2MkRsbDIwb1VtV0txbTFEcDJDCmVXcENscnZSZm5Db0RFeWRxSzhlZ1NuUzNmcitoc25lOVpQdmVqbllqSE9YZ3Q2V012eHI2THZndlRJMW5qWHAKS2U3elFMNVp0SkthWko1bmt0WlRkaUN0a1M3eDNGZHkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVakNDQWpxZ0F3SUJBZ0lRTEROQjFrLzBnU0VGSlZtTk52WWpaVEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TnpFMU1UY3lORE15V2hjTk1qWXdOekUwTVRjeQpORE15V2pBb01TWXdKQVlEVlFRRERCMHFMbTFsZEdGc0xtaDFZbUpzWlMxbmNuQmpMbU5wYkdsMWJTNXBiekNDCkFTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTmNuZWowQTh6WWZ0aGNhZFFZY1FxcEQKRVpzRmNETWQ4Vll6dzNmem0vR3lRc2o5Q0dDc2hSUXZLSU9vNTEzT2FPdVAzWnVkMERUQ2tydElsTmROcVl6WgphYUhweDB4d2VWdzlCajRoQ1E4cjF6Z1NVb3R2REJ2QzNrcmFxVmxJWEpGdGo3ckRWK0d3Y3FVdDR2eXRFVDVOCmIrcTN6cXliRkRRcitHNy9vZVhDR08rblluVGpjcEpkdk1qSFUvd2VSVGJXOUQxMVRUL2RPTU05eVlQOCtWME4KN0hodDFyVUVISnV4V0t4V1hXRDJ3L2JhNFhuZFRsR3dJNGlrSXVtanhtdUhZcFJYV29ZNlo0ZURwZTVpNklDNwpPMDlodHVYVDYvTk01eHU2Z3hhZElRaTZJNlBvK0ZWMUY5TnpObWhKejVVWW9Rd1JULzBBT3lvYWtRei8ycWNDCkF3RUFBYU9CaXpDQmlEQU9CZ05WSFE4QkFmOEVCQU1DQmFBd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUcKQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXdId1lEVlIwakJCZ3dGb0FVS2ZPQjlOd2JEbDFHR2QyVQowL2xpVkhwcDlXMHdLQVlEVlIwUkJDRXdINElkS2k1dFpYUmhiQzVvZFdKaWJHVXRaM0p3WXk1amFXeHBkVzB1CmFXOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBTkJ1ZUlGbC83TTQ1VnpUbWVwRVlJU2I2NkVTcGQxL2R2b0sKb056Y2FCVlppUUtWa2hrdnFONk1rcGFLdUFQV1hUVGNBY0YxeVhUek1JVDNyOXFMS2R5UFdPMi9pZnZEN21VUwp6RytUMHM2NGJXRDNtZ2tVNEkvbzV6Mm5zNVBYeWR3a3RJYTJmNzVxanNLcWUyV091Z0l6Y21BWWxiVnBQWWxVCnVaZnlINVJLcVhrYWhONTE5SkFyMHhrdHk4T3VTU2xndEllYTFWakx6bk1ySEpLSzV0V3gzWkNiTm5xcjNySTUKTTEvWWUzRHpnTVgyRHJGYzZIR0V5NlQraUorWVUyZjFoRnZ2SHd3UEMxVWxZUHFOOFFnNTQyM0ZmRWNLcWRtQgo2YXc0Mkt3dFZUMkZlMENDZms5RGJBd0tya01XYWF0MDc2N2JGZjhsc0FpN2tjY1R4RTQ9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBMXlkNlBRRHpOaCsyRnhwMUJoeENxa01SbXdWd014M3hWalBEZC9PYjhiSkN5UDBJCllLeUZGQzhvZzZqblhjNW82NC9kbTUzUU5NS1N1MGlVMTAycGpObHBvZW5IVEhCNVhEMEdQaUVKRHl2WE9CSlMKaTI4TUc4TGVTdHFwV1VoY2tXMlB1c05YNGJCeXBTM2kvSzBSUGsxdjZyZk9ySnNVTkN2NGJ2K2g1Y0lZNzZkaQpkT055a2wyOHlNZFQvQjVGTnRiMFBYVk5QOTA0d3ozSmcvejVYUTNzZUczV3RRUWNtN0ZZckZaZFlQYkQ5dHJoCmVkMU9VYkFqaUtRaTZhUEdhNGRpbEZkYWhqcG5oNE9sN21Mb2dMczdUMkcyNWRQcjgwem5HN3FERnAwaENMb2oKbytqNFZYVVgwM00yYUVuUGxSaWhEQkZQL1FBN0tocVJEUC9hcHdJREFRQUJBb0lCQUV1VG5YZkNWcXlqZFFZbQprQWJtZEhCMGdNR3dwbG4rWWFFREs5MTk0RUNGZXJvNVQvRU5pTzJ2Snc4Z2pLMUI3VThaeVNGNXpRSkxldGw0CnhIZmcydmNVQSt3UlA2WFZPSHd6SDNkQmlYb2Z6MGp0L3JybDloM21WTWw4aDlKSi9lSkQxeUltcmo4a0NSR0cKemQ0dU9RbG1rREttQUY1WFYwQ0FWWk5BRHJHeTJNWnVHSk15YzAwRWdpYnlPaW9VOENJcWRwaWU2UUhzVzk3WApMLzlFSFFNMy9HcGZqNzlCSVg1RkFiOUMwMXBDclljekNOVVowSTNqa2o5U3BXNmpCbkljMHpXUG0xdkpQaExTClJoY2hibEhYSTdSWERoa0xBS3ZkcDVyeXlSazN4Q2p6K1JabXF0elkzMlBtSjhNL21vOS9POVcrSlExYXpNcDcKd3ppL1orRUNnWUVBN05OVDFqTy9oYkZZMFU1MXU1T0t4cUV4aitDYjZXQWtjblZ5Q24zL2FLcGQ3Z2Q0SHNyVgpUTHFvaCtmb0JEckpWcGtxa0RVUlo4aXN1NElaSE9BZDdnekpzMU5TcjBiY1g0dGc4VDZKb2I0b2tWbUdzbUN0Clc2K1kwNksyTXpRWDFUK0Z5Wm1YNktJNHY5WXlvbEZwRkw0UGRFWU1sQUVuaG1SL0p1aFhTemNDZ1lFQTZKTDQKVnRvQ3RCZjNkbUJOM21zWmJMdy93VnhVL3dhamdQcFRqMXRaT2dML2g3MUhVVlVNMU0wR0ExUUlNTVU3QWVhagp6b21HRklKKzFDNitldGRydnJiTXFQZDdXMG5RVGdVTTJDVWVEN3ZmbG9STVF3RC9BREVLT3hPU3d5aGJpUUdZCkRrTTE4bmhtdUhBaE8vSU45VWw4OGNmYWcweFRYSGxGZFVleEJCRUNnWUVBckJITHF5bkVNUjR2R3p5M25BZFMKWUltRUdqYW04WVRTVm50dzFhREFiMHJCbm8yOHdCcTlxZGRCVmlXd1ZVcGxPVTltTm9yb1Q1RGx1QU9KdllvMQpGTjRqdXZDQ2RpbTFPcEpwYUQ3NC94VE1JdmQ2UDZhd3JwcENIeHJzNlAwamgrUjBqNHJTYmN0WUVrSk9YZE5xCjF4QlU2RFZ4TkNRMmxKWDJNTTNGaHpjQ2dZQitnWE1UeXdJdGM5dm5SL3NUUUs1VHR4SDIyNEpnTmZ3NTYvQUgKeW1oK1phTVk4cHdZWVdyWlZhd3ZvMFhSUVhjWFVaMUlld1d6b2tmYW9wSjV2ek9jU1ZLSmxoUkRVNk02elFSdgpqY0VNVGVVUXVtWEJESW1vVVFSL25lWDJ3YjBJaVJWc3JLSnJnWkplUUovVE81YmNGVjBoSnRSMUZzOUJQYlhLClZYUzBBUUtCZ0drZXRtRlIrWTl1NXdyNVh4M2RVUXdDSUw3ZitJYXJ6aUZrQkN2OURXRlA4NlR1eG9XbVZpbEUKcnJ0dXpIblltL095TjBkRG9jT0ViR0haV3J1M2hBcS9QanhEL2MramxrS2V6VytHQzZHMkd2cHNyNG9uM1Bvawo0eGR4QXNGYld4RHZNSHpDUG13eG91U1NwSUdhNVNqMDhCTHkzTkJRVVIrdmtxTTJibFB0Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 50%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: cfd17b705ca0bb02a7757cdcca1ae02f0ba74522c924343a5ad92159083611d7
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.20.20
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/operator-generic:v1.14.0-rc.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        readinessProbe:
          failureThreshold: 5
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 5
          timeoutSeconds: 3
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: 27bb5ccbefe991afbb56a832364bc893e292d9ce2875b33e872fe0db3cb93f5f
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.14.0-rc.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          tcpSocket:
            port: grpc
        securityContext:
          capabilities:
            drop:
            - ALL
          runAsGroup: 65532
          runAsNonRoot: true
          runAsUser: 65532
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      securityContext:
        fsGroup: 65532
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              - key: ca.crt
                path: hubble-server-ca.crt
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: 02d6b04b131029fae39270192dcff10fa3a64af9d1d4d0049f1efbc3f5526a34
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.11.0@sha256:bcb369c47cada2d4257d63d3749f7f87c91dde32e010b223597306de95d1ecc8
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.11.0@sha256:14c04d11f78da5c363f88592abae8d2ecee3cbe009f443ef11df6ac5f692d839
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: cfd17b705ca0bb02a7757cdcca1ae02f0ba74522c924343a5ad92159083611d7
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.20.20
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.14.0-rc.0
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.20.20
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.14.0-rc.0
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.14.0-rc.0
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.20.20
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.14.0-rc.0
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.14.0-rc.0
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        projected:
          defaultMode: 256
          sources:
          - secret:
              name: cilium-clustermesh
              optional: true
          - secret:
              items:
              - key: tls.key
                path: common-etcd-client.key
              - key: tls.crt
                path: common-etcd-client.crt
              - key: ca.crt
                path: common-etcd-client-ca.crt
              name: clustermesh-apiserver-remote-cert
              optional: true
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              - key: ca.crt
                path: client-ca.crt
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
