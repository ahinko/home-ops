apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
  - list
  - delete
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  - ciliumcidrgroups
  - ciliuml2announcementpolicies
  - ciliumpodippools
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  - ciliuml2announcementpolicies/status
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  - ciliumcidrgroups.cilium.io
  - ciliuml2announcementpolicies.cilium.io
  - ciliumpodippools.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumpodippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumpodippools
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-algorithm: maglev
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: dsr
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "1"
  cluster-name: metal
  cni-exclusive: "false"
  cni-log-file: /var/run/cilium/cilium-cni.log
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  disable-cnp-status-updates: "false"
  egress-gateway-reconciliation-trigger-interval: 1s
  enable-auto-protect-node-port-range: "true"
  enable-bandwidth-manager: "true"
  enable-bbr: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "false"
  enable-bpf-masquerade: "true"
  enable-bpf-tproxy: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ipv4: "true"
  enable-ipv4-big-tcp: "false"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-networkpolicy: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-announcements: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "true"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  endpoint-status: policy
  external-envoy-proxy: "false"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA drop tcp flow port-distribution icmp http
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipam-cilium-node-update-rate: 15s
  ipv4-native-routing-cidr: 10.244.0.0/16
  k8s-client-burst: "10"
  k8s-client-qps: "5"
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  l2-announcements-lease-duration: 120s
  l2-announcements-renew-deadline: 60s
  l2-announcements-retry-period: 1s
  mesh-auth-enabled: "true"
  mesh-auth-gc-interval: 5m0s
  mesh-auth-queue-size: "1024"
  mesh-auth-rotated-identities-queue-size: "1024"
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  proxy-connect-timeout: "2"
  proxy-max-connection-duration-seconds: "0"
  proxy-max-requests-per-connection: "0"
  proxy-prometheus-port: "9964"
  remove-cilium-node-taints: "true"
  routing-mode: native
  set-cilium-is-up-condition: "true"
  set-cilium-node-taints: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-proxy-response-max-delay: 100ms
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
  write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: metal\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ngops: true\ngops-port: \"9893\"\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max:
    \nsort-buffer-drain-timeout: \ntls-hubble-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-hubble-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQVBHa1FlZmFvOVE0OUswYXFkRTdUOW93RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURneE5qRTJNVEV5TUZvWERUSTJNRGd4TlRFMgpNVEV5TUZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF0OVZEMEtCZ1dYaC8xVXRlcGU2TW82aGt6SGUwVzVwcFh0MzdRYU9GbmNFL0NHd2QKZ3l3aUVTUWszVUtUN3I5S1RsNmRTdytwRUZFTmxpMVA0MENTejc4R0NmcTdhRkxGalhEa1VlbFhOaEFNRnlUUQoyL0cyVWhkUHlxVkdJM2RJejdRU3JhS3RweXhOWTdWNXB4aUF4VmF2WHZ1STkrOU1MaFRHZGNyWFh2ZSszaVhhCit3Z0JBcFRsbmgvV3A3UWNhS0FlWklQRTN6TnhXalQwNFFjeHk4VG9YQmMveVp5a3hOeGR2RmRVc0lZR1ZwV3IKN3MwZ2tLdkhNM2RhYUJvM2g2V0habUJOd0xkNDAyYnpYWkJRcWNzQW9tUTlLRXcwdnJnQ29sNDJqSjVMVmtMUQp4Q1ZZV3ZRWXluQXRVUGpyWUR6cmhXU0NZalVOcDBENXUveTNCUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGREZmYlRsOW5OL3NzcVQvL25Fa0UzZkU2QzFQTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQUMxcXpwcEJsbTYwSlRaMEtqUWJIanBGSjFhZDZJVzMwL1JuTjBCaFJCeWFEeTc3NEVzeHJUCkx4Q3F4WDNya0kzdzNsb1Ara3hrK2FXQitIVUszMWRoRkVlUkJ6dXNsUzZhVGxIOU1EanJtUEQvSG9YbXZIaGsKTDg3dk5Wb3FhbWxJQVpHSWcxSDh1SWxqY0xvOWZscWM0aHBFZnV0NkY3RnVQVS9adEdkU1hsME1zSDNSam1RWApaS1JXYU90YlRLMS8yRXM5ZTErOTdZbW9KbUh3SElQM2dWWDJSay9kYXNpWmRsbEliOTdtQlR4ZE5QdnhrV1czCjlXQ016OEE1dTJ2NHpsOFVQVmVXMGJQUXEzZHJoNlJPcC92MW0xQ0tidDgzYlpUNG0vVGVndTFUV1Bvb3VwMGkKZWs1Vm5zQTNJWkVtYjBNRWR1aGtuR3RaK3pWU2tzL2cKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBdDlWRDBLQmdXWGgvMVV0ZXBlNk1vNmhrekhlMFc1cHBYdDM3UWFPRm5jRS9DR3dkCmd5d2lFU1FrM1VLVDdyOUtUbDZkU3crcEVGRU5saTFQNDBDU3o3OEdDZnE3YUZMRmpYRGtVZWxYTmhBTUZ5VFEKMi9HMlVoZFB5cVZHSTNkSXo3UVNyYUt0cHl4Tlk3VjVweGlBeFZhdlh2dUk5KzlNTGhUR2RjclhYdmUrM2lYYQord2dCQXBUbG5oL1dwN1FjYUtBZVpJUEUzek54V2pUMDRRY3h5OFRvWEJjL3laeWt4TnhkdkZkVXNJWUdWcFdyCjdzMGdrS3ZITTNkYWFCbzNoNldIWm1CTndMZDQwMmJ6WFpCUXFjc0FvbVE5S0V3MHZyZ0NvbDQyako1TFZrTFEKeENWWVd2UVl5bkF0VVBqcllEenJoV1NDWWpVTnAwRDV1L3kzQlFJREFRQUJBb0lCQUV6aXczUTBQMWZzVC9yVApoUWg5VnhEejB3UzVaQk9UNTFJb0lYZjRmbC9XZlJoMnIzazNNaUJkTDVYaXpLQmtIUjNkOElkK1MwVnB3UGI0CmlKc1JYTlhLblNuN1ZmcHg4L0lPTDFBYStjREF3VzNFbGg0SFlDdkJXRHYzRi9pcFlTaU50ZW90U2RmTGJhcXcKTWVzekVsaDJ3dTVFNGFwZ3lVblVvcFNOZTdwWnlZcFBPVW0zaUFBQXVCMVpBM0gzdnFyUklBVE9Sa2hhUjFNQQpvN3FxTjRrOHJ2aGdpdFJCUGdvMU5nUFlzTHVMbVloZSsrNjRvM0NBanRYaC81K1RPUURpWmd6a3E5bnBqY3VLCkNyWXU1MmRnUGxsOWJmTUY1cjdFT3Z3UUNQMEhneEdwSFJJT2R6U1NLMEJ6cWtHNEEyeEJRczA2YWJwRjRxcEMKa3Jza2FrRUNnWUVBeFFlR1FLTklOSHBVNFdydEZ6WHEvVTlFaGFvZ3AzbjVrSlViYlR5RTlGcktDVlFJd0RPOQpWVTYvb0x3R0hZREhsSXIyQmUrTjcyUHBLa3Z0cXBQNjMyWm1xdjJjQU01NGRCTk5BOE9iaDVBTlh3RlRBNGg3CmZzdEhtM29XaHd3LzNNNVpnTWptQzBCMjFNT0Z5Y1ZxK3d4TFNwNGs0WlNzUkZlcG5lZFhwVmtDZ1lFQTd0cWgKNHJLWkJmbTRYYnEweEdLazd3Z3N2YmE1S1FiYVd1SWdzaVVCRnQrbklVSW5ZdnJlNVk0SFhmZzl2dzdBem9VUgpLT2VKbHgycTF4K3VHUERyQktIZ2UvNUU4Q1JaZ2pEQi9jdXFXakxuc3lKWlVGV0hieGdVS3JWV01JYzRNYnpLCmNvYjVEaUEyQmtSMGttRkREN212QnVORzljNVhWVjMyZHVzV0xZMENnWUJyM0N1bGxQMkJKUHIwa0JtTTNFcHgKTTRTNmU2RDJyZkp1TVFKYnNZYkRValJLR1FQVlhEMm94cnhtM0tlb1hRaGxEQkdVdkVpQ0pick9HZFRZemJ2SApzb0kvMXlnZzFPYmgvSExydlppV0JNa2RHbGQ4bHFtc2h0SURqamxvNHM3UExQT1lhZUp0aEhQSkUrUll5Y2MvCitjSDU3a3NZWnRCTGRZWDRXRjRGdVFLQmdCazFvQ0p5SVM1OVJkVTJzSCtOdmNTd3d6QWV5Zm9uakFKTm5ZL1AKMGdhZEFtSERQcTcydFhIYkJMSUpVbE1JOXBhVmV0TXJaTjA3TjEzUExTdmF1YU5haG52dndVenJPVHRCZENnYQpSOWVQU2Q4aFAvWDNvUHk3dU4wdEdIUzB3TnlYQlhNREJlUlV4Lzd2V0xKZWE1cU1TWW5ia1JDK2YzODJGSjVHCmY2ZTlBb0dBUk9vT3dTamV0R3VyM3UxRDFKOTJhcHYwT3BXUldSMnhZTWdad0hvdzlBVzdQWUZzd0ZWTzVYUzQKWVc4amVlbnNIWndFeHlkSHlGZWpXTUt3NFhRYlFySjh0MkQzcUd0Q0ZOQ1luR25CT1pXQVg5c0d4ZEdJN1BSRgpKWVBuOVJDa0JTdEs1ZzlVcUI2TDFLbk9Cb3lYeWNJWmV2K29oQ2VkTGtMSkx2U3pWZVU9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQVBHa1FlZmFvOVE0OUswYXFkRTdUOW93RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURneE5qRTJNVEV5TUZvWERUSTJNRGd4TlRFMgpNVEV5TUZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF0OVZEMEtCZ1dYaC8xVXRlcGU2TW82aGt6SGUwVzVwcFh0MzdRYU9GbmNFL0NHd2QKZ3l3aUVTUWszVUtUN3I5S1RsNmRTdytwRUZFTmxpMVA0MENTejc4R0NmcTdhRkxGalhEa1VlbFhOaEFNRnlUUQoyL0cyVWhkUHlxVkdJM2RJejdRU3JhS3RweXhOWTdWNXB4aUF4VmF2WHZ1STkrOU1MaFRHZGNyWFh2ZSszaVhhCit3Z0JBcFRsbmgvV3A3UWNhS0FlWklQRTN6TnhXalQwNFFjeHk4VG9YQmMveVp5a3hOeGR2RmRVc0lZR1ZwV3IKN3MwZ2tLdkhNM2RhYUJvM2g2V0habUJOd0xkNDAyYnpYWkJRcWNzQW9tUTlLRXcwdnJnQ29sNDJqSjVMVmtMUQp4Q1ZZV3ZRWXluQXRVUGpyWUR6cmhXU0NZalVOcDBENXUveTNCUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGREZmYlRsOW5OL3NzcVQvL25Fa0UzZkU2QzFQTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQUMxcXpwcEJsbTYwSlRaMEtqUWJIanBGSjFhZDZJVzMwL1JuTjBCaFJCeWFEeTc3NEVzeHJUCkx4Q3F4WDNya0kzdzNsb1Ara3hrK2FXQitIVUszMWRoRkVlUkJ6dXNsUzZhVGxIOU1EanJtUEQvSG9YbXZIaGsKTDg3dk5Wb3FhbWxJQVpHSWcxSDh1SWxqY0xvOWZscWM0aHBFZnV0NkY3RnVQVS9adEdkU1hsME1zSDNSam1RWApaS1JXYU90YlRLMS8yRXM5ZTErOTdZbW9KbUh3SElQM2dWWDJSay9kYXNpWmRsbEliOTdtQlR4ZE5QdnhrV1czCjlXQ016OEE1dTJ2NHpsOFVQVmVXMGJQUXEzZHJoNlJPcC92MW0xQ0tidDgzYlpUNG0vVGVndTFUV1Bvb3VwMGkKZWs1Vm5zQTNJWkVtYjBNRWR1aGtuR3RaK3pWU2tzL2cKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQUoxTVA3clZsNkZsem9jekphWGNOblF3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURneE5qRTJNVEV5TUZvWERUSTJNRGd4TlRFMgpNVEV5TUZvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXNmN3E1aXpOUXBITkovMTVyU3RSY2hBRm16SGEKNEVjWnV0Zk94MlU2KzFMK2VXOUJ0aXNwR05yNkIxV1VCVTErTlgxcWlKWGJUYTNEM2ZPcS85WGxnR1BhRTA1SApwY3NlOFk3aU9ZM0RTeXlLSmFOem5nQ25nK3BCTjQ0cHFhM2FWRXEzSm1Ra3FuaXNQbklvRi9wbm4yK1BaL2hYCjUyeWFRT0JvYko5MmJVRVhUcGNiRzRaSWpNT0FCd3NPQXQ2eGRCaUFuSzBzWHhuVzhFYUtGTXIxVHZqRUMwNE0KRzdBQzRCMzBQa242TStGS09udzd3VVZPU0t4TkxiZzNCQnh6aHp0K203ZW9kRGI5RDNwSHk5ZXFYY0tKMDB6QQp4RDlzbWRQZnc1Qm54SGNoOENEVDViVkxZbVNQd3VYYjRmMW93aFdDa3NmMFA5djd2Z3BaRkVpc2FRSURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCUXhYMjA1Zlp6ZjdMS2svLzV4SkJOMwp4T2d0VHpBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBSit5S1pnQVRnZ0p6b2QwTXdjNEVGME9iT3Yyb0hoVmdyU2ZoYUtxazN4Z1h5WisKdUpldjA5TS9OVklaQUJSa2Q0VVAzM2NBUVYvdXhKcDltYkZaYmd4blE1Ly9uYUhHVlRsNjZyVXZXWi82Wi8xOQpEbG1GZHFDU0wzcDB4WFBIL29tWVBFRGRLbHJnc05EZ0RkVXpJdXdCMnNiYXh0Sncva3IySEc2Mi8zbEFPeUlxCm5obTdhdmdKdjZCa3lob0g4ZGUwNGduSmRVRUFvRDJKejBzdW44aGV0bnJrQmdZUzMrSERsU3JIQ1ZIVjZSYVQKVXllZ1NvSlFYdkxSeUlnYlB2RHZOVVdJMS9vMHF4Zktkd0N6anRCcWY1MWRrcjRDU2h3OGJxaUZINWJyS1VnQwo3R2piN3BSTjd6S1FVVU1lWFo1RUQzaFR4d0pOSy9xVnJmNnc2OEE9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBc2Y3cTVpek5RcEhOSi8xNXJTdFJjaEFGbXpIYTRFY1p1dGZPeDJVNisxTCtlVzlCCnRpc3BHTnI2QjFXVUJVMStOWDFxaUpYYlRhM0QzZk9xLzlYbGdHUGFFMDVIcGNzZThZN2lPWTNEU3l5S0phTnoKbmdDbmcrcEJONDRwcWEzYVZFcTNKbVFrcW5pc1BuSW9GL3BubjIrUFovaFg1MnlhUU9Cb2JKOTJiVUVYVHBjYgpHNFpJak1PQUJ3c09BdDZ4ZEJpQW5LMHNYeG5XOEVhS0ZNcjFUdmpFQzA0TUc3QUM0QjMwUGtuNk0rRktPbnc3CndVVk9TS3hOTGJnM0JCeHpoenQrbTdlb2REYjlEM3BIeTllcVhjS0owMHpBeEQ5c21kUGZ3NUJueEhjaDhDRFQKNWJWTFltU1B3dVhiNGYxb3doV0Nrc2YwUDl2N3ZncFpGRWlzYVFJREFRQUJBb0lCQUU2Q25VTzNvVFhxcjY0aQo3TWVJSXQySDJhRXhwVlJscUNDMHpkMC9kbnVpaU9JeFE2L0JhOWd0eGpqejgxMC9hQnJaM2VLdkR0TTlnUFptCll4ZURWajZDVEk5VmFON2xNQm5tSnp5eG5lR0xuTWVyUi9UNlh1a2RxM1NBdlRtOW1GNnpzZ002Q3I0eWllN2wKVlcvMklEeS83V1l6c1RvL3VlNUJ6VzJVREoxMWF3OWhDZ1ZPb0hsYlZqb1J2SjlJRS9yeXd5Q3c1Rm50cTFRaQp1VGlwS2ZKdHl3OXV5QmtJNmZ6SGNrd0kwTDlnY3d3VEV3LzVBV25nNEpqMGUvS2ExQkhhS0NRZUtmYStvajZKCjl2bzZENWFwZVArNERMa2krZ1BvZHRWMjdPdHI1Vlc3cWJxeU9oWTBRekUwTS8vWlc2ekp2SWZZR2xlT3h5TDAKZ29XMUE0RUNnWUVBM1NUdXBlRTAyamQwNmhMOC9mZVBVL1JhRXR5bGgrK3BWSmFac1FGR3RuOEluMnhsRDBLcQpnankrTkQxc3lyS2V6TEVVbzhHUTlIS0l0c0xZTUlJQmdBclQrVjFCNVNKKzQ2RUE2TEVHbmU3UGRjNUQxdnFUCnErdEt5eFg5a2lTS3NyUHRWZ3JFbzUraXRBSkkrM01aa3F0Uyt5Qk5OZmJ4UWthNEhWME0xcmtDZ1lFQXpnejIKdVQwY1lIQTJrQ3F5V2xHMWV6WHA3YnVhQ0FwSlJsN1VNMmRscHNJeUpITlNoUkF6K24vUU9xNWNVdlFuMGoxVwo2cTJNQWl3T3BkWlZPZlh4aldFWEs1RGFlUGNVNlFGbTVMSVRsZEdheTc2SUtUWnpuMEJmSWRzNmNzVm5XNVpHCmdGY3duOEJLemNxTitHTmRmSUFkckExOU1kdkVDMU1JVTJtV3F6RUNnWUVBdXZTWElQdUVnQnMwSnhPSWVIaUsKM2xJTXVEZDdaYkd5T01YZEJ1eHFTS3lhc0pTbDEwSG4vcFMxeEZwTm1BdHIvdWFSNldNaVZkWmlTQWZ2VndzQgprNnNUeTVRUXVsTHdiU1pYSzJGRms4MHA3SkZGZndCMlNYaHcwY0kwamhHQWhGVmloMFF4TzVjZ3FRZnBoVktvClF2dTkrbm96YkRUcGY3dGp1Y2RKckZrQ2dZQnRXK1lLdEl0K0I3QjkzWnRoWW1KK3JVT2w0RjdGQzZpT1I4QTYKTkJONGFUTXhzMTlGcmk3WU1jUHprUjBCRGdLZ2k5dTRuRGxsNGJvNGZFUXBpZ1lVOGtYWTRuMkJuQ21sN1ErTwpLNUZIZjhLM2hqMUFHbDFOVlYzb1d6RnZQcVEzc005a1NHSlBOMEM4YmxmaFQrT0xNM2dNRy9DcGFLbHBGVDJpCi83UnUwUUtCZ0ZacDMrd1kzVmkyNFZHT29wREo4dzFSeU9SN3pTQkRIUy9aSjJaOTVLTm8xRWdCTSt6VmlaTE8KS2hDYkYyaElRMkFLaDRrelNSZEF4aVBSVW1PeEErY3hSbVA1WG9oRWdZK2xMaFFLU29lcWtlQVhiRE1sNzJVbwptQU5lSXpaYnJ1WEsrYmswcHBVZXRMQTk0aVhyUkR1dEthUC9lWGF1WmtGVm15eHFLa1pBCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQVBHa1FlZmFvOVE0OUswYXFkRTdUOW93RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURneE5qRTJNVEV5TUZvWERUSTJNRGd4TlRFMgpNVEV5TUZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF0OVZEMEtCZ1dYaC8xVXRlcGU2TW82aGt6SGUwVzVwcFh0MzdRYU9GbmNFL0NHd2QKZ3l3aUVTUWszVUtUN3I5S1RsNmRTdytwRUZFTmxpMVA0MENTejc4R0NmcTdhRkxGalhEa1VlbFhOaEFNRnlUUQoyL0cyVWhkUHlxVkdJM2RJejdRU3JhS3RweXhOWTdWNXB4aUF4VmF2WHZ1STkrOU1MaFRHZGNyWFh2ZSszaVhhCit3Z0JBcFRsbmgvV3A3UWNhS0FlWklQRTN6TnhXalQwNFFjeHk4VG9YQmMveVp5a3hOeGR2RmRVc0lZR1ZwV3IKN3MwZ2tLdkhNM2RhYUJvM2g2V0habUJOd0xkNDAyYnpYWkJRcWNzQW9tUTlLRXcwdnJnQ29sNDJqSjVMVmtMUQp4Q1ZZV3ZRWXluQXRVUGpyWUR6cmhXU0NZalVOcDBENXUveTNCUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGREZmYlRsOW5OL3NzcVQvL25Fa0UzZkU2QzFQTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQUMxcXpwcEJsbTYwSlRaMEtqUWJIanBGSjFhZDZJVzMwL1JuTjBCaFJCeWFEeTc3NEVzeHJUCkx4Q3F4WDNya0kzdzNsb1Ara3hrK2FXQitIVUszMWRoRkVlUkJ6dXNsUzZhVGxIOU1EanJtUEQvSG9YbXZIaGsKTDg3dk5Wb3FhbWxJQVpHSWcxSDh1SWxqY0xvOWZscWM0aHBFZnV0NkY3RnVQVS9adEdkU1hsME1zSDNSam1RWApaS1JXYU90YlRLMS8yRXM5ZTErOTdZbW9KbUh3SElQM2dWWDJSay9kYXNpWmRsbEliOTdtQlR4ZE5QdnhrV1czCjlXQ016OEE1dTJ2NHpsOFVQVmVXMGJQUXEzZHJoNlJPcC92MW0xQ0tidDgzYlpUNG0vVGVndTFUV1Bvb3VwMGkKZWs1Vm5zQTNJWkVtYjBNRWR1aGtuR3RaK3pWU2tzL2cKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVakNDQWpxZ0F3SUJBZ0lRRTY5aXg1RHNQcVU5UWJ0TEdla0JOekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13T0RFMk1UWXhNVEl3V2hjTk1qWXdPREUxTVRZeApNVEl3V2pBb01TWXdKQVlEVlFRRERCMHFMbTFsZEdGc0xtaDFZbUpzWlMxbmNuQmpMbU5wYkdsMWJTNXBiekNDCkFTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTFJSVmoxRTVIZjhzaXJjRFRGakh4NmoKL2E5VlBHLzJ1eUlmTGhsY3c3ZllFWHBWenpiTXRuSWxGeUc5Qmtza1cybUZRb3JLUS82enl5RUdSeUhMc3JvcwpDT2ppUndONE1VZXM0Q1hkSnNsc2paMmc4UVgvOVVxWnZVMDJpdHFwMXZjMU83eUhCeGFCQXN1dk1ZR29KbHErCnZGQS8ycEJHNzBJTWwyS3NJY3JET1drd1VCNFUvSmE3WnhDRlY2WjNFUDZ3VFFhS1ZaZ0Q3VXVNUk9JYWVGVUwKbDQ5WnpVUGxWNVIzc3oraXR1YnRKTHhBMmhpN1Y4bXdBZjZsd2tDNC9VUkh1bmhYSnpNVitYbk1XNFJzK1dsRApQTmI4SVhZcWRHSTJpa3VlSTFDaVc4RUx3VFg3THlXOEZyVjQ0QUJRVjZHYVliOFRxQng5TG4xYlNvV1U0VDhDCkF3RUFBYU9CaXpDQmlEQU9CZ05WSFE4QkFmOEVCQU1DQmFBd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUcKQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXdId1lEVlIwakJCZ3dGb0FVTVY5dE9YMmMzK3l5cFAvKwpjU1FUZDhUb0xVOHdLQVlEVlIwUkJDRXdINElkS2k1dFpYUmhiQzVvZFdKaWJHVXRaM0p3WXk1amFXeHBkVzB1CmFXOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBS250TzJxbXJqNm1vQytBeUxaUDg3ZFowMzhKK2dMeFZyVFgKZk9EMFZuZFVwamVMVXJINlovbklZbVBVSXl0Z1YzUUJFL0hjbFFPY0NtdDBJS0ZrQ3E0SnY4YjM4MTBQSnQvRAo3WDBXaU1hQTBHbzVQVFo1SG5mT050bUhVczZuYkJ2aVZ0bmUzNG5OdVVKMTNFRHpzdEdYd0lKbDVKTVV1Z0w5ClpLT3BmS2ltdjRNeVJYdnRFeXRSZklaQWJyL1l0M1hLTDdSUWtIbmNyTVFSV1lZa0ZQQXRMY3FGVEpNVUJTaTIKL2RFTnl4dVNKNjBmR0dDY0VQZk9BcWFRWDlyYnRjNjVkRUEvUnBDQ0ZnM3hqR0RRWUN0cGNobTFsSEw2TWVucApOY3JhQStlRmlCUGFZMjlIMWlJRTVtcjB5TS8wNlJwbUdPNU1RN2trd2xYdW5UN1lGcmc9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBdEZGV1BVVGtkL3l5S3R3Tk1XTWZIcVA5cjFVOGIvYTdJaDh1R1Z6RHQ5Z1JlbFhQCk5zeTJjaVVYSWIwR1N5UmJhWVZDaXNwRC9yUExJUVpISWN1eXVpd0k2T0pIQTNneFI2emdKZDBteVd5Tm5hRHgKQmYvMVNwbTlUVGFLMnFuVzl6VTd2SWNIRm9FQ3k2OHhnYWdtV3I2OFVEL2FrRWJ2UWd5WFlxd2h5c001YVRCUQpIaFQ4bHJ0bkVJVlhwbmNRL3JCTkJvcFZtQVB0UzR4RTRocDRWUXVYajFuTlErVlhsSGV6UDZLMjV1MGt2RURhCkdMdFh5YkFCL3FYQ1FMajlSRWU2ZUZjbk14WDVlY3hiaEd6NWFVTTgxdndoZGlwMFlqYUtTNTRqVUtKYndRdkIKTmZzdkpid1d0WGpnQUZCWG9acGh2eE9vSEgwdWZWdEtoWlRoUHdJREFRQUJBb0lCQUNMRGg2ZmFUMTNlcHc3aQpTOXpZcWxoQzc1Yk5EUkRjOWFrWGI5RE45S0hPRTFpTmtKeVZEUnVta1BZZE5raG9Zd05PQU0wM1A3S3NRUjVGCjBwTHViYSs4NjU3U2VUUnZDTGt6MkNjVW92UzBhLzBXMlVENTN2V1ovRWdWbXVHYld1bGdKdnNxNFMveWdYSjUKZlVicy96QUJrOWE0Nk05bURaeWpSdEJzTlR1YzRuZ0FhZjNlcUhBSUtONmEwd2x4VEJDZ1ZOMmtJbVA0aDE2UQplMVFiOXk1Qy94bmpkYVhPQ3F6K1ErL2FDcDZGWGVjZHZoZ1Z6SkNyRnNvdUwrTklyQmx6MkRZU3dXWWxiS2tXClc0V2pnTTRsdDlMam9VZTlZaFJ5UmJoV2J4WTJuZjNaVlhkV1BmdjFoYU5HMnNwV3AzVHE4Mkcvb3hpTXFNZ1kKaUtFTzFia0NnWUVBN3E1K2ZGVzFaSkU4NlpzaW16TStRYmdTbGt0akx6bTVzaG9DYmJoalovcFppeGpWQm5QdwpIbW5nSEpIcFhJMjFXT3ppM2x3bG96dXo0bmVPVDBMMVFrcjNCelpsbjFndVZ0aHNvZ25WVXFsai81WXExalhiCit1WWJnT2IvdXo3a21HMC9Nb0EwUSsyb1pGWTI2TndWZGdZcldUWGZmeVRaeXZBZXowUjRVc01DZ1lFQXdXYTgKRkY2ZC9mWTBmNHphdGJmTW1zMEtmSEN4Ym9sWXV6alY0Z0xPdzNxUUVEYXZRT0Z0Nk05UkZNTDFTOVNCN0ZiMgpUWGxIZ1JUdWF0VkNlNGd0ZHpmTlJkUWc2WG0zTEtqUE5aNkQwN0lsQlBTUXgyZDZiTGxFV0lxR09mRVdFOHVZCnlLUzVHQjBlaTI4bkdRT3BTZUUrMkovVnlWOE9adGJISjVCTmw5VUNnWUJTdEdvbHdUa3ltTlVIaVhjTFdrMUgKVG5ZNlYvTU5hUzQ4VmFEanpoRzc5TmJVU1ExL3grcTdUeXFXRzhWR0NlQjk2TStRQjFRUFpOK25LSkJLVE1SWgpiVXA5MkU2TVVXejFNTmNycXNhZGR3NnNnS2RsUkpKdU5RL3dzWnFKa25oNWpObHFNVnhxOFUzNVBwcVdRN1M0CkNkazVkMTV6V3h5UW9uVzZrbG96S3dLQmdBS1NBZmZuVmdRMURIZVJnS3FmbWJtSTloVzNUYlJoWU91RUV0dWgKRyt4ZkthRDlpUkM4cmtCRTJSZ0VpMHdKcy94WEg0amlEc0E1YmYyL2ZkVzBkcDQ2QUtGbjgxUUhDUmN2MnlrawpSUzVBRk52ZkFEbVdOM3RRYndjYU9EUjI3c3N1am9aRUlpMmUzWFFPOHg4Uy9HSDkrMTdYcVBpM0tiTFdNZWxsCnNwSk5Bb0dBQUx4M2tzbko4WGdGTG9icU5MZ3JuZjZsOWdVUWxnWERWTXFPUDZmV1dQZ3V4VWNiVllWV2V1VjcKL1lLVFdDMEtvYk1ZdGFzZnkvc2NuVmhZUXhpY2RISWNmandQTlRTMEI1YkcwVkliNXlENkI5VEFSeWgweWk5Swp1WnJKZ3VqYklHSnQ2TTZTSFBQWlpvOUt0cExEUkZDOWV0L09QYTd0RWhORHNKZVI5bkE9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 50%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: f049617d1c36e5fd8f1f831f24d496a04fdf0698b734de92a256b33055409dfa
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.20.20
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/operator-generic:v1.14.1@sha256:e061de0a930534c7e3f8feda8330976367971238ccafff42659f104effd4b5f7
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        readinessProbe:
          failureThreshold: 5
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 5
          timeoutSeconds: 3
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: 375a925bed4758ffc0fbd25a2ca46b1e775668d02925f0281af97cd647ada807
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.14.1@sha256:db30e85a7abc10589ce2a97d61ee18696a03dc5ea04d44b4d836d88bd75b59d8
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          tcpSocket:
            port: grpc
        securityContext:
          capabilities:
            drop:
            - ALL
          runAsGroup: 65532
          runAsNonRoot: true
          runAsUser: 65532
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      securityContext:
        fsGroup: 65532
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              - key: ca.crt
                path: hubble-server-ca.crt
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: 02d6b04b131029fae39270192dcff10fa3a64af9d1d4d0049f1efbc3f5526a34
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.12.0@sha256:1c876cfa1d5e35bc91e1025c9314f922041592a88b03313c22c1f97a5d2ba88f
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.12.0@sha256:8a79a1aad4fc9c2aa2b3e4379af0af872a89fcec9d99e117188190671c66fc2e
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: f049617d1c36e5fd8f1f831f24d496a04fdf0698b734de92a256b33055409dfa
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.20.20
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.14.1@sha256:edc1d05ea1365c4a8f6ac6982247d5c145181704894bb698619c3827b6963a72
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.20.20
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.14.1@sha256:edc1d05ea1365c4a8f6ac6982247d5c145181704894bb698619c3827b6963a72
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.14.1@sha256:edc1d05ea1365c4a8f6ac6982247d5c145181704894bb698619c3827b6963a72
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.20.20
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.14.1@sha256:edc1d05ea1365c4a8f6ac6982247d5c145181704894bb698619c3827b6963a72
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.14.1@sha256:edc1d05ea1365c4a8f6ac6982247d5c145181704894bb698619c3827b6963a72
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        projected:
          defaultMode: 256
          sources:
          - secret:
              name: cilium-clustermesh
              optional: true
          - secret:
              items:
              - key: tls.key
                path: common-etcd-client.key
              - key: tls.crt
                path: common-etcd-client.crt
              - key: ca.crt
                path: common-etcd-client-ca.crt
              name: clustermesh-apiserver-remote-cert
              optional: true
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              - key: ca.crt
                path: client-ca.crt
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
