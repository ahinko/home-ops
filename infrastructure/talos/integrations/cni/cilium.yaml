apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-algorithm: maglev
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: dsr
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "1"
  cluster-name: metal
  cni-uninstall: "true"
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  disable-cnp-status-updates: "true"
  disable-endpoint-crd: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ipv4: "true"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "false"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA, drop tcp flow http icmp port-distribution
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipv4-native-routing-cidr: 10.244.0.0/16
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel: disabled
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: metal\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max: \nsort-buffer-drain-timeout:
    \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRT0xUQWE1eklVM0RUYmJoNXh4OUR5ekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJNU1URXlNekl3V2hjTk1qWXdOVEk0TVRFeQpNekl3V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ3VhcVBEblFIRFhwdVBOQnp3U1ZrckYwam5GeFp6WGdQdm9HenBPNFE5amR6dG5QWGQKOHNoaWRRaTMrdFNRWFZGTzh3SDVRNkhUVjlqOHFLelVwb1lrenM2V0hCZTdVSVk5S2VOTFU3d0llWkZ4SU81agpqVXFyZmtIRW9wWGk0cVdEbk1lZHVjb3RDVzdZMVk3dXAyMDBVUTlSL3FUbG5qd1U3UkhXNXhQSDZnUk9sS21qCkk3VnowT1QreXM2NWJGcmY2WDlKUzdUdS8xaG10Z014SDFqTitVQnpzRi81MXBKU2hBTGVtNEFqQXJCZDd1WWoKSzN6TEcxZXVqOUxMOGwwMHJ5cGMwY0wwSVJ5bHNVMjBTV3lxVFhibHp3RytjM3p4VExVRUNNdjlBYUZpSFpWWgpRYUNxSWtqdVBubHRkY2NRRkpwM1pac0FNN2JYSGhZYjlLOWZBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVU1bStlNFJ6QzhERHI0ZkVoU3pTM2ZCTmJSa1V3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFDaFlrTGg1R1VWN3Z5RFg5bVB4MTBGUTIrTDBobDZiRG1LNVJObllOTklqekxvVGVZbmlxaDRGCkkyUWxoSEVhUE8zM0U1OENzaXl6aXR1dGtCV1FQTVJSMWk3NlR6Vnk5ZnNjb1c4OVF6T3FicEVseFFNK3NQajYKMVF1TmhDV1BCdHFpUFhUS3l3Rm40RXZBZFpwUGRaWDdiRGVGVTJobGRJWlZCRWZxdTl0OGNZL3Z4Y1FZV1NIVgprdkovMEJNMmNMUHNybFQ5a21rOWNSdUVoSUF6ZXQzSU5yY2JvaUhjOXh5Yjg5WDJ3TkxRc0txd3E4VGRabkpJCk9uWWtvbEpOdlU3NFRneXBhNktIUy9TVGZSZFdPTnl6NUtHRm84UGt5K1NVVzkyUHp4SXY4ZGM5Wk8rNmhoNmoKaTcxODJxZ2JDMW5WLzdJNTZpZ2VUQnpINVdNL2w4dz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBcm1xanc1MEJ3MTZianpRYzhFbFpLeGRJNXhjV2MxNEQ3NkJzNlR1RVBZM2M3WnoxCjNmTElZblVJdC9yVWtGMVJUdk1CK1VPaDAxZlkvS2lzMUthR0pNN09saHdYdTFDR1BTbmpTMU84Q0htUmNTRHUKWTQxS3EzNUJ4S0tWNHVLbGc1ekhuYm5LTFFsdTJOV083cWR0TkZFUFVmNms1WjQ4Rk8wUjF1Y1R4K29FVHBTcApveU8xYzlEay9zck91V3hhMytsL1NVdTA3djlZWnJZRE1SOVl6ZmxBYzdCZitkYVNVb1FDM3B1QUl3S3dYZTdtCkl5dDh5eHRYcm8vU3kvSmROSzhxWE5IQzlDRWNwYkZOdEVsc3FrMTI1YzhCdm5OODhVeTFCQWpML1FHaFloMlYKV1VHZ3FpSkk3ajU1YlhYSEVCU2FkMldiQURPMjF4NFdHL1N2WHdJREFRQUJBb0lCQVFDWVdVTzBrUWRDUFBoSwpMTzMrSVVPRzlTN1QxQUhqUWNMVVk5L2VGZ09idExlK3diU3RhdTBIdTB5alQ3Q3ViU1NoZm5oQjM0YVIwWkVTCm1NOW1iQktPUWlxSFNnQ2N1R2laTW1aOG5LYUpESTh6THQyc0RYV2t1SU1BSERncVYyalZ2bk5LWFVldzhTVm0KdDV2QzhISGVHZFAwL2lYUS85ZGhPL2F5TFdQRTRUMURJeHJXMlhFaXFOL01ESHF6L0dHWHRITjRZU2VqNFlxSgpwSXVuanVlTWlaNC9kMWRuUGs3dnBhcTNuOEVrT2p6UHhha3paOURjcSt6STBRZnkrNytrcENuOXV1SE9NWTFwClltOGNXSktOK2FjQW1NTS9oakdDZDdySnRWQ3VsMXNRMEwxdU16dDErdnBiYjVMekVUSjlTUnp5dUJaNWhBYVUKT3VJeVFUNlJBb0dCQU9ORVR0QStkeGV3eFRFU1BJb0wwZG5RVjVQd2crYno0dVJmVjExdlR0WjJIa3AwSU05cApHcnhwb0VpL0FLQTRKd2ErK1RkbTZEbnhoRlhTK0R0TkRhbnFyRWM4cVFoMHNhbzF4VWRHakNDdUlSOFdhU242Cm9jQVgva3Z1bkFYNFZnQVVSOWNXZitxRXVCSU5RVkZUS1BZWVN5Uk9EZitHVisxeWd4TE5BV3ZYQW9HQkFNUjMKeVVKYkhjandURU5kTHBZYU00d0tDYlhONGJPd2wrSWFGL2gzWkxGdFRXUS9EQmZBWWw0cHV4L0RETnUwY2duQQpTcnMyUmJ6SUVLWDBhYUVxQWRDVlhyTDdBSE9EWjZaTW9TeklGWmFNZ0hkTkIrd2xwSGVvMUNQbE0rb29MWkRXClhKZEt2c1U3MXcxejYrTjFnOUhJdlI5TVNVdkpZS1VsYjdWbGdDZTVBb0dCQUpqTEN1WE1xVXEvS01RbUM1ZVAKL01VZzRsQnZDbThTbHYrTTdmSythOVdaMGlHaVU1QytqQ0FTTDVYWS9EVzdxdGxKT2NvNm9IU2NZS2xHem1jbwpGY0NnS3JVMkhqcTJJZUJhaUVpME1HK2tRbFpoUGREZ1ZURU5zSVVpWmJsSnpaLytBcEtqNk5vbDRvOFlaRXFsCnkwc3c2QXYvZ2ovQjlZbUpUSUF1WGY4L0FvR0FlWmp4OWFIVFUzUjJueExqTEgvVys0dVM2dlVjQmt6OEZESzIKTjFBZUFEcDROZDFYckxPanJrZ0J5dXk3M3BkV0pYYmdTZktUUXY1SVg0NWdlaUUzc2xOZ28wSDZ5NE8rK1F4ZwpqUWpoWTZaZU5IaDJ1TStyZFd3R3NKakJndUdQSWgrcWV2RUdGYWl0dDJQUjBad0FGQzA3OEUwVTZGVWcvZFduCnlBdWtQL0VDZ1lFQXJiV21Ja1hFT0FJQVZseldaZWZTSWxTVnpSU3dZUVhpS0xpYkk0MXFkbkc4QlQ1d25qQVkKaGkyUlhKTEZNQWhDU0QraXRWUjdSY1BtUWpJSmRzN0tRcDhsbXN4QTMwbEY0VnpiQTROMUdFc1VORElJWHpMRApiVW12bkVzSEM3TFdndVFTcUN5NWhleDlXSDNNV2Jhc0EwOWhBcXNjaGdkdGRXV0pzRDA5TkhzPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRT0xUQWE1eklVM0RUYmJoNXh4OUR5ekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJNU1URXlNekl3V2hjTk1qWXdOVEk0TVRFeQpNekl3V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ3VhcVBEblFIRFhwdVBOQnp3U1ZrckYwam5GeFp6WGdQdm9HenBPNFE5amR6dG5QWGQKOHNoaWRRaTMrdFNRWFZGTzh3SDVRNkhUVjlqOHFLelVwb1lrenM2V0hCZTdVSVk5S2VOTFU3d0llWkZ4SU81agpqVXFyZmtIRW9wWGk0cVdEbk1lZHVjb3RDVzdZMVk3dXAyMDBVUTlSL3FUbG5qd1U3UkhXNXhQSDZnUk9sS21qCkk3VnowT1QreXM2NWJGcmY2WDlKUzdUdS8xaG10Z014SDFqTitVQnpzRi81MXBKU2hBTGVtNEFqQXJCZDd1WWoKSzN6TEcxZXVqOUxMOGwwMHJ5cGMwY0wwSVJ5bHNVMjBTV3lxVFhibHp3RytjM3p4VExVRUNNdjlBYUZpSFpWWgpRYUNxSWtqdVBubHRkY2NRRkpwM1pac0FNN2JYSGhZYjlLOWZBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVU1bStlNFJ6QzhERHI0ZkVoU3pTM2ZCTmJSa1V3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFDaFlrTGg1R1VWN3Z5RFg5bVB4MTBGUTIrTDBobDZiRG1LNVJObllOTklqekxvVGVZbmlxaDRGCkkyUWxoSEVhUE8zM0U1OENzaXl6aXR1dGtCV1FQTVJSMWk3NlR6Vnk5ZnNjb1c4OVF6T3FicEVseFFNK3NQajYKMVF1TmhDV1BCdHFpUFhUS3l3Rm40RXZBZFpwUGRaWDdiRGVGVTJobGRJWlZCRWZxdTl0OGNZL3Z4Y1FZV1NIVgprdkovMEJNMmNMUHNybFQ5a21rOWNSdUVoSUF6ZXQzSU5yY2JvaUhjOXh5Yjg5WDJ3TkxRc0txd3E4VGRabkpJCk9uWWtvbEpOdlU3NFRneXBhNktIUy9TVGZSZFdPTnl6NUtHRm84UGt5K1NVVzkyUHp4SXY4ZGM5Wk8rNmhoNmoKaTcxODJxZ2JDMW5WLzdJNTZpZ2VUQnpINVdNL2w4dz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBcm1xanc1MEJ3MTZianpRYzhFbFpLeGRJNXhjV2MxNEQ3NkJzNlR1RVBZM2M3WnoxCjNmTElZblVJdC9yVWtGMVJUdk1CK1VPaDAxZlkvS2lzMUthR0pNN09saHdYdTFDR1BTbmpTMU84Q0htUmNTRHUKWTQxS3EzNUJ4S0tWNHVLbGc1ekhuYm5LTFFsdTJOV083cWR0TkZFUFVmNms1WjQ4Rk8wUjF1Y1R4K29FVHBTcApveU8xYzlEay9zck91V3hhMytsL1NVdTA3djlZWnJZRE1SOVl6ZmxBYzdCZitkYVNVb1FDM3B1QUl3S3dYZTdtCkl5dDh5eHRYcm8vU3kvSmROSzhxWE5IQzlDRWNwYkZOdEVsc3FrMTI1YzhCdm5OODhVeTFCQWpML1FHaFloMlYKV1VHZ3FpSkk3ajU1YlhYSEVCU2FkMldiQURPMjF4NFdHL1N2WHdJREFRQUJBb0lCQVFDWVdVTzBrUWRDUFBoSwpMTzMrSVVPRzlTN1QxQUhqUWNMVVk5L2VGZ09idExlK3diU3RhdTBIdTB5alQ3Q3ViU1NoZm5oQjM0YVIwWkVTCm1NOW1iQktPUWlxSFNnQ2N1R2laTW1aOG5LYUpESTh6THQyc0RYV2t1SU1BSERncVYyalZ2bk5LWFVldzhTVm0KdDV2QzhISGVHZFAwL2lYUS85ZGhPL2F5TFdQRTRUMURJeHJXMlhFaXFOL01ESHF6L0dHWHRITjRZU2VqNFlxSgpwSXVuanVlTWlaNC9kMWRuUGs3dnBhcTNuOEVrT2p6UHhha3paOURjcSt6STBRZnkrNytrcENuOXV1SE9NWTFwClltOGNXSktOK2FjQW1NTS9oakdDZDdySnRWQ3VsMXNRMEwxdU16dDErdnBiYjVMekVUSjlTUnp5dUJaNWhBYVUKT3VJeVFUNlJBb0dCQU9ORVR0QStkeGV3eFRFU1BJb0wwZG5RVjVQd2crYno0dVJmVjExdlR0WjJIa3AwSU05cApHcnhwb0VpL0FLQTRKd2ErK1RkbTZEbnhoRlhTK0R0TkRhbnFyRWM4cVFoMHNhbzF4VWRHakNDdUlSOFdhU242Cm9jQVgva3Z1bkFYNFZnQVVSOWNXZitxRXVCSU5RVkZUS1BZWVN5Uk9EZitHVisxeWd4TE5BV3ZYQW9HQkFNUjMKeVVKYkhjandURU5kTHBZYU00d0tDYlhONGJPd2wrSWFGL2gzWkxGdFRXUS9EQmZBWWw0cHV4L0RETnUwY2duQQpTcnMyUmJ6SUVLWDBhYUVxQWRDVlhyTDdBSE9EWjZaTW9TeklGWmFNZ0hkTkIrd2xwSGVvMUNQbE0rb29MWkRXClhKZEt2c1U3MXcxejYrTjFnOUhJdlI5TVNVdkpZS1VsYjdWbGdDZTVBb0dCQUpqTEN1WE1xVXEvS01RbUM1ZVAKL01VZzRsQnZDbThTbHYrTTdmSythOVdaMGlHaVU1QytqQ0FTTDVYWS9EVzdxdGxKT2NvNm9IU2NZS2xHem1jbwpGY0NnS3JVMkhqcTJJZUJhaUVpME1HK2tRbFpoUGREZ1ZURU5zSVVpWmJsSnpaLytBcEtqNk5vbDRvOFlaRXFsCnkwc3c2QXYvZ2ovQjlZbUpUSUF1WGY4L0FvR0FlWmp4OWFIVFUzUjJueExqTEgvVys0dVM2dlVjQmt6OEZESzIKTjFBZUFEcDROZDFYckxPanJrZ0J5dXk3M3BkV0pYYmdTZktUUXY1SVg0NWdlaUUzc2xOZ28wSDZ5NE8rK1F4ZwpqUWpoWTZaZU5IaDJ1TStyZFd3R3NKakJndUdQSWgrcWV2RUdGYWl0dDJQUjBad0FGQzA3OEUwVTZGVWcvZFduCnlBdWtQL0VDZ1lFQXJiV21Ja1hFT0FJQVZseldaZWZTSWxTVnpSU3dZUVhpS0xpYkk0MXFkbkc4QlQ1d25qQVkKaGkyUlhKTEZNQWhDU0QraXRWUjdSY1BtUWpJSmRzN0tRcDhsbXN4QTMwbEY0VnpiQTROMUdFc1VORElJWHpMRApiVW12bkVzSEM3TFdndVFTcUN5NWhleDlXSDNNV2Jhc0EwOWhBcXNjaGdkdGRXV0pzRDA5TkhzPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ca-secret
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRT0xUQWE1eklVM0RUYmJoNXh4OUR5ekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJNU1URXlNekl3V2hjTk1qWXdOVEk0TVRFeQpNekl3V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ3VhcVBEblFIRFhwdVBOQnp3U1ZrckYwam5GeFp6WGdQdm9HenBPNFE5amR6dG5QWGQKOHNoaWRRaTMrdFNRWFZGTzh3SDVRNkhUVjlqOHFLelVwb1lrenM2V0hCZTdVSVk5S2VOTFU3d0llWkZ4SU81agpqVXFyZmtIRW9wWGk0cVdEbk1lZHVjb3RDVzdZMVk3dXAyMDBVUTlSL3FUbG5qd1U3UkhXNXhQSDZnUk9sS21qCkk3VnowT1QreXM2NWJGcmY2WDlKUzdUdS8xaG10Z014SDFqTitVQnpzRi81MXBKU2hBTGVtNEFqQXJCZDd1WWoKSzN6TEcxZXVqOUxMOGwwMHJ5cGMwY0wwSVJ5bHNVMjBTV3lxVFhibHp3RytjM3p4VExVRUNNdjlBYUZpSFpWWgpRYUNxSWtqdVBubHRkY2NRRkpwM1pac0FNN2JYSGhZYjlLOWZBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVU1bStlNFJ6QzhERHI0ZkVoU3pTM2ZCTmJSa1V3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFDaFlrTGg1R1VWN3Z5RFg5bVB4MTBGUTIrTDBobDZiRG1LNVJObllOTklqekxvVGVZbmlxaDRGCkkyUWxoSEVhUE8zM0U1OENzaXl6aXR1dGtCV1FQTVJSMWk3NlR6Vnk5ZnNjb1c4OVF6T3FicEVseFFNK3NQajYKMVF1TmhDV1BCdHFpUFhUS3l3Rm40RXZBZFpwUGRaWDdiRGVGVTJobGRJWlZCRWZxdTl0OGNZL3Z4Y1FZV1NIVgprdkovMEJNMmNMUHNybFQ5a21rOWNSdUVoSUF6ZXQzSU5yY2JvaUhjOXh5Yjg5WDJ3TkxRc0txd3E4VGRabkpJCk9uWWtvbEpOdlU3NFRneXBhNktIUy9TVGZSZFdPTnl6NUtHRm84UGt5K1NVVzkyUHp4SXY4ZGM5Wk8rNmhoNmoKaTcxODJxZ2JDMW5WLzdJNTZpZ2VUQnpINVdNL2w4dz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lRRzYzMFZ1UmNUTjBkaXlVUjYvZ0hOakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJNU1URXlNekl3V2hjTk1qWXdOVEk0TVRFeQpNekl3V2pBak1TRXdId1lEVlFRRERCZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDMms4RFNmWVBwZ2huNVBhYVNtWk5VdUpXZXJ3ZzkKc3drRVV5SCsvd1VzMzZBUHVVK2VoVXVJTE44cDAzcmIvcmlZaTdMSEtsTDBvVEV4WVZrOFFCTE9lSnQ2QnRPawpYYzZzd0U2dlp0ekZYdVhDK2h0Sldxd1ZOR1N6ZjdJNTIvVnhna3l4RFdYek9XQ2V6NFpHTSt2ZEI0NE8xMG45CmNIa1hOSC9Fd2VWSXBGTzFVUmtHMFkrOXJ0YUJERll4VWxuSEtJNENDdGdzdmQzZlV0bUV4Y0FmcU5ZNkNOZUwKRzJOZGorbHluQ08vRTdMRjIzZXF1L0hNbUd6dnBnZEFPejkzdjEvenUxbnA2NDg0aDVOc1p0b0RYajhzeXJnUgpHV2FHaGFwaXZSdGw0T1FpelRyK2dudXFtMVZQdEQvNExaaVlZOFVjZVRmZFVYVFR3cFUxSDFvVkFnTUJBQUdqCmdZWXdnWU13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZPWnZudUVjd3ZBdzYrSHhJVXMwdDN3VApXMFpGTUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bExYSmxiR0Y1TG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFvQXBXbDhISW54bGZIV1NvbVdrTHROYkUyOWRDbXJkMDYveTZJWTlxdXZSZ1pwVUkKeHI0bXFpRmZ4T3I2SVVLdnNvMUlKMS9SNkg1L00xbk5IaEcyTkJTTXM1dHBHL1pxMHRCYlJWTFN4UjY5RWhzWQpNQWZCK1p1aTdIZWFidGhpVDhWd1FRYTZXWEVFNHNVZ3RmbmpBS2dRcTdMYVpiTkxXK1lPcDJBMXg5OTBGK1I5Clg4M0hzQUlRRGpzVDRObGJNMERnRDJqM2t5NWE5SUMycjdQS0syZEpncXZLVGZ5WHU5VFl2RVBuNmFDNFB2SWIKTlduRG1qUE8yRlZJQ3VhZUJXcFFNUWRNMlJQQVFqWElOcTRsRGE2VXNsZ1ZpWG5wM2NRVDFUUXFFZXVNQ1Y2KwpiWTk5bEJlTVV2eEU2R20xSEpqZmE5bHdlUkh6SXg1QkNpRDcwZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBdHBQQTBuMkQ2WUlaK1QybWtwbVRWTGlWbnE4SVBiTUpCRk1oL3Y4RkxOK2dEN2xQCm5vVkxpQ3pmS2RONjIvNjRtSXV5eHlwUzlLRXhNV0ZaUEVBU3puaWJlZ2JUcEYzT3JNQk9yMmJjeFY3bHd2b2IKU1Zxc0ZUUmtzMyt5T2R2MWNZSk1zUTFsOHpsZ25zK0dSalByM1FlT0R0ZEovWEI1RnpSL3hNSGxTS1JUdFZFWgpCdEdQdmE3V2dReFdNVkpaeHlpT0FncllMTDNkMzFMWmhNWEFINmpXT2dqWGl4dGpYWS9wY3B3anZ4T3l4ZHQzCnFydnh6SmhzNzZZSFFEcy9kNzlmODd0WjZldVBPSWVUYkdiYUExNC9MTXE0RVJsbWhvV3FZcjBiWmVEa0lzMDYKL29KN3FwdFZUN1EvK0MyWW1HUEZISGszM1ZGMDA4S1ZOUjlhRlFJREFRQUJBb0lCQUVtYTlaQ21nMmkvUjZOZwp4R2V6dkY3YWI0OWl0eXJRbytEM2R1d3JlYldtamd2b3hIMSs5WDEzd1p4R0l2RFFGekdBbUZtTTZaYXY2WG9qCjZlck5WZ2VoUGVVTEhZWFZQNzRMWlcxM1JhZllZejZnd0NGcGlaaWUzNzR4eS9OaGh1ajFBK0FaSzdITHZ2VW4KYXRXZ2x3VXJ4NHlhSkwways5eHNFTnFNNU5mTW9ZcEdvWVZSWWJHblVSbzBWRk5zV2g1blpvTmlGOVZlSFZVagptWmJ6RTN1UExTamVwTGxWSWVCaU9Fc3oxVnc2clM2eUh1blN5Tnlieit2WTFQU0dxZnE1MTZ0MzlPc2ZPSWo1CkZIcGE5UW1SVElnSllaM1h6T0ZaZytVNnMzTDZ3UFBDdm94bUo5eUo4eFhWWVZ2TmhYYS8wSW1aenVGbUc2RW4KV3J4ZndrRUNnWUVBMDNXK3NQQU9PeFF5YWJWYllDWm5MMDhWMVFjb3ZWMU8rNUk2V28zOCtZd0pGSmNZSWpCVgp2azl5SEFhQjVNZzVGcUNJVG9iSGwveW1XRS9yWDhtbkpMT3BOWU4vdGwzeGhCYWVWN0w4TjVvZUtJRFZtclh2CjVhNkU1QkJreHlFL1NkVkJuSzJEK2psSXVPTk91dldOYjJTZXh4TzFqS0kzUERibUpWWWh1b1VDZ1lFQTNRaWEKWWdFcXBhN3VhVzJ1alpOT3k1cVV6VDRMRnBUUVNJb3Y2R2dyMkI0bEliNXJ3WnlhTDdhU3IrZVp3c2s4amdGcwpWbEp2MHZ0K0NXMHNSYmxoUjR2RHZyMC9NT21RWUM3VW9TcXBFWGJoUDhVeTZBMmszQ2RuRjBjbDdjSkFKaGczCjk5Q1EzQUxiZE1SeXRHMS8xY0Z6OEZsV1BrMWJhMytLb2JJazNsRUNnWUF6K2hRMlQ3dGZ3RFlvRDZEM1FGbEsKb3FqZUpSVlpmbzhFZlV3RXFEUVBidUZvZ3o4MllDVWpVMG5jSTZsWC8vTXdZYU0va2hlTGYxbXdDV3owclk5OQpFUUE5bkNZUFFJWTJEbzA3UjA2QnFFdFRiMStSMkxpdi96YkJERnFKSzkzdm14QzJuMXY2Ykl3NGpmN3pLNXBwClVCVkxIOGdYV21RelU5YzhSRENrTlFLQmdIeitjWGQ4bTJab2YxQkZnMUZ5ZlR1c1pmdU8yMnhncVV4c1FOMVgKazN1NnlGckZ1V0FhdENMSlJ6aU1heXA0N0hLTm9YdExVUXRweHdPRHBtYWpoN3lTOEJYOEpURCswL05nYUVQZgp3UTRzUVFMei9HNjMwSVBqRUd4Y2dybHFnU1pKeWRTdE1FNEttNW56d2I0QXNpcnFKQ3RHQ2Z4ZmVKUlk0c2UvCjJ4T1JBb0dBZHNHZEhUU1BxZnNTbGNSdFhxL2lNQkFxY0xBSmFoSkVsVlpmR3FmamNxc1lyMFo3M1hCT2EzS2gKL1B1azA3OS92R1B6WVQvTVl1K0ZuRVhXN21leUp2MVlBT2VIdS9RSnBabVFzSDhPaDJrSklrVlp3Y2RtQUhobQpGUG03Z2FjbFl3WkRPUnk1bGg0NHFwT1JsL1luazluam51Smg5U09CWkhVNnpFMzB0V289Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRT0xUQWE1eklVM0RUYmJoNXh4OUR5ekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJNU1URXlNekl3V2hjTk1qWXdOVEk0TVRFeQpNekl3V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ3VhcVBEblFIRFhwdVBOQnp3U1ZrckYwam5GeFp6WGdQdm9HenBPNFE5amR6dG5QWGQKOHNoaWRRaTMrdFNRWFZGTzh3SDVRNkhUVjlqOHFLelVwb1lrenM2V0hCZTdVSVk5S2VOTFU3d0llWkZ4SU81agpqVXFyZmtIRW9wWGk0cVdEbk1lZHVjb3RDVzdZMVk3dXAyMDBVUTlSL3FUbG5qd1U3UkhXNXhQSDZnUk9sS21qCkk3VnowT1QreXM2NWJGcmY2WDlKUzdUdS8xaG10Z014SDFqTitVQnpzRi81MXBKU2hBTGVtNEFqQXJCZDd1WWoKSzN6TEcxZXVqOUxMOGwwMHJ5cGMwY0wwSVJ5bHNVMjBTV3lxVFhibHp3RytjM3p4VExVRUNNdjlBYUZpSFpWWgpRYUNxSWtqdVBubHRkY2NRRkpwM1pac0FNN2JYSGhZYjlLOWZBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVU1bStlNFJ6QzhERHI0ZkVoU3pTM2ZCTmJSa1V3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFDaFlrTGg1R1VWN3Z5RFg5bVB4MTBGUTIrTDBobDZiRG1LNVJObllOTklqekxvVGVZbmlxaDRGCkkyUWxoSEVhUE8zM0U1OENzaXl6aXR1dGtCV1FQTVJSMWk3NlR6Vnk5ZnNjb1c4OVF6T3FicEVseFFNK3NQajYKMVF1TmhDV1BCdHFpUFhUS3l3Rm40RXZBZFpwUGRaWDdiRGVGVTJobGRJWlZCRWZxdTl0OGNZL3Z4Y1FZV1NIVgprdkovMEJNMmNMUHNybFQ5a21rOWNSdUVoSUF6ZXQzSU5yY2JvaUhjOXh5Yjg5WDJ3TkxRc0txd3E4VGRabkpJCk9uWWtvbEpOdlU3NFRneXBhNktIUy9TVGZSZFdPTnl6NUtHRm84UGt5K1NVVzkyUHp4SXY4ZGM5Wk8rNmhoNmoKaTcxODJxZ2JDMW5WLzdJNTZpZ2VUQnpINVdNL2w4dz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVakNDQWpxZ0F3SUJBZ0lRYkxER0ptYURNanZpemVkRURoYkdGekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRJNU1URXlNekl3V2hjTk1qWXdOVEk0TVRFeQpNekl3V2pBb01TWXdKQVlEVlFRRERCMHFMbTFsZEdGc0xtaDFZbUpzWlMxbmNuQmpMbU5wYkdsMWJTNXBiekNDCkFTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTXhWQlJJakdOby94U3VaY01yV1VyRHAKSVpIYk5PZ0hNcytHOGlNd3A4NGN4aDVoU1lIWTBMbFlMeXltMnNvQTBaSjZpNm92MW41dUF5VWl5RnowazBuNApQME8vZ1Y2Y2o4enlibDRoRXVUL2ZMci92K1VyY1g1elVPRjk1SS85WmF5M21sRjJvc1VLdWRmV2JLOWQ0ZjZ4CkE3TkpReHJ2VlFyYXM2ZTdJdE5sZkV4VjRZWnI0MHc4Tm5uSG1Jck8xNkZoRTNpRnM0ejRWZENZb2p1NitldTkKcjJlMkFMRGp1b05CZW90WDd4bitpWmxQam5TLzJKL2JpUko0Zjk4TktzZ2ZNalpucmZNUGRlU1NuN3ZnOUl3VAo4ZVFWdnhhcm15QTRGM3VKT1NUNGdQU0JzcGlqazIrTWc1MnIzYXpYMUhaVEkrVEMwMzlRNUpUdXhiQVdqclVDCkF3RUFBYU9CaXpDQmlEQU9CZ05WSFE4QkFmOEVCQU1DQmFBd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUcKQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXdId1lEVlIwakJCZ3dGb0FVNW0rZTRSekM4RERyNGZFaApTelMzZkJOYlJrVXdLQVlEVlIwUkJDRXdINElkS2k1dFpYUmhiQzVvZFdKaWJHVXRaM0p3WXk1amFXeHBkVzB1CmFXOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBRTJEZytpWWhpZVhqcjFxQkJNd21XREpiZzl2UnpJeHplR2YKUlFPaWplVkFmRUpRdWFUMzdTR1JsSzh1T1lPSko3SGVpakhwYVl3K2tDTk02MllXaGh0VU5ibnJMeERCYUtoVQpzbUhUNUlnZjg5WktXYk94UzB0aWFNN0RJSUt2bU53bkl0bmZGR2NWUHVmTFNtTzZET25xc0srd1YvdkVIV05CCm8vdnlUS3FSSVJkU2k4d1luTnIydm5XS09tbzVSQm96S0twZEhVUnNxaEd2eFg4OGprMmx5VFJjSnNXdHA1RDIKRndiN25XSHZwM0R4cTh2YkRaMXZwVnlpR3pBbUJkcy9RaXcwQWxOdllZY1NtdG1XOUNxZlE3b2xBNmgwVUtJMQpPVjZWUEc0eDdBeGh0b3AwQnlUNWEyOUJSb2o2K2hwNTVJZFUzdUJacjl3bm9BWk5zS3M9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBekZVRkVpTVkyai9GSzVsd3l0WlNzT2toa2RzMDZBY3l6NGJ5SXpDbnpoekdIbUZKCmdkalF1Vmd2TEtiYXlnRFJrbnFMcWkvV2ZtNERKU0xJWFBTVFNmZy9RNytCWHB5UHpQSnVYaUVTNVA5OHV2Ky8KNVN0eGZuTlE0WDNrai8xbHJMZWFVWGFpeFFxNTE5WnNyMTNoL3JFRHMwbERHdTlWQ3RxenA3c2kwMlY4VEZYaApobXZqVER3MmVjZVlpczdYb1dFVGVJV3pqUGhWMEppaU83cjU2NzJ2WjdZQXNPTzZnMEY2aTFmdkdmNkptVStPCmRML1luOXVKRW5oLzN3MHF5Qjh5Tm1ldDh3OTE1SktmdStEMGpCUHg1QlcvRnF1YklEZ1hlNGs1SlBpQTlJR3kKbUtPVGI0eURuYXZkck5mVWRsTWo1TUxUZjFEa2xPN0ZzQmFPdFFJREFRQUJBb0lCQUhBY1Bkb0RzOEVidUIwQgo1V2NGVFAyUURFRXcyc2hzR3E3T3hkQVZCQjBNb0k5T3BidytyOWJoMFpCWVJEY05WKzljbVlEWkdvRG43NFhTCm5jaVMwTFdISlg4UWRmVHBSZVVYSndNeWRtRjY1SDdkai9ZM2JlQUplVmtmYithcEM3NUdScjlucmtzYVpYbE4KUnZpNU5DUkFEMTJ4VnNaU2hvQ2NHbkp2Tk41ekYwV2VIM3JEWDNiZ1p6Y1ZXWHdXaHVvdmZtQmN6QXEvSW5lTgp1RUpKa0U0ckZVV1ZLSlo1K3luMVdXZHQ4a2tSbXd3T0h5ZkpFT2NmQ3A0Q0twU1ZwRkZzM2pPdEhGTmo1MW9tClNFNTFRQVRsZi9Pb2VuYUdVNXROR1A3bGtxZ2ZHbFkxTTVJYUxuKzllK0M2VTRDVzJ6OTdQNFNtakFZd2lQR1YKc2xhM2Nra0NnWUVBMy9NRXhRcXEvODRQM0RXU3RNcU5JSVlDRFNjYktsUGcvUmMxMkRPZ3VkbTJwV2JycElEUQpVZGpoR2JaNVJ0Tm1SYlA2bFdlN2kyamJkTWNFcWJRK1ZGaDl4dWZpS0dGRE0wd2F3QllMM3oyNVpDcCtMbmNkCnlJTnh0YkNqakFmcURteXRHdWJpUXpIMW1NQWpIVjFNUGVtNWxKTU1ZOU9hYTBvOG85clB0QnNDZ1lFQTZaTkYKOExGVUFLNUNQSzZKeHd5dEt5bWZFU1A4WlZEZ085QitnM2JFblJ2ZThrNFB3a3dORXp1akxWcERodnBuVDdBZwptQU9MNFArVlNqV3dvZGt3ZXl2NU1LT0w2andKSjROUDIvZ0pTeXVvT0cwVmIzUXc3WGd3dXRCVkZZUEtsUE5rCjFXSEhBVE9OSDdSRXdsY2h5M0d2VnBCYzhMbnU4NEM2UnY1WDFXOENnWUVBa25aUUgwRzcxZktCSXVhU25OUi8KZWM3S2xxbUZ0YWdIMDk0VEkrT1g4UlEyeEhQTUZ0ajc1UnR2RkM3bm4rOXZ5cFJMaE56RHBnZ2N4b0hHUmVxUQpmUDhtdXlnNkcyaUkxNHFsVUF6YkZOUThaQXI2WFE4Z0Zsd0l5T2ZOL2kzSzRFWW83QmdsMEFaamRkUHE0ekI2ClJWK1BOR0Q3VUdvNmFvS3hxQVBacFJNQ2dZRUF3a0RoSWRQWWNOaDc3Y3VhZWhob3pFVEpMWkFvRUhxNmdnUmIKc3luTFNuNHJaSWpYUWxmTlovbHBOQWFsc2xQK0o1L3ErNEczaTJBRDRMdldNa1JXdFpsVW5NYm5UZDZ3SGxSdQp6aG55WUxubUpVZFRWR1hsYXhsU0xZdWx0MGJyN0FTZ0QzWko4dzNVaUZGNy9jUkpMdEZWYVVDV2l2MlhaSnZpClQ3aW5nN0VDZ1lFQXJVbDc3dXNqbUZyOXByc2tZZUl5d0Rpa2Z5bllCQStCRk03NEI1elZwZ0c0eDRsV1lvMTcKQzZjNTFNNkRqM05tV3I4ZWNxUlE4TWZHYVRuN2NjU1FMN284ZTNhQjFiQzRqb1lTWDVmNFU4Vm8yVFM3eXlUeAoyd0RDTk81WE96Z1RHU1loY1hsSzdQazFydi9Hay9zd2N1K0tSRGxnaEIxbHNzZUhsOU14OGZVPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: c1128dd59c7b64a1ecb30b38abf52f1a2b35f905d04052f3c9f3a2bb477ac5c8
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.20.20
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/operator-generic:v1.13.2@sha256:a1982c0a22297aaac3563e428c330e17668305a41865a842dec53d241c5490ab
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: c168c3ad813c1adbd265ee9b6d1ed2fd2be0fae5752035a4996cd1f6e1d6e64b
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.13.2@sha256:51b772cab0724511583c3da3286439791dc67d7c35077fa30eaba3b5d555f8f4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          tcpSocket:
            port: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: hubble-server-ca.crt
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: 02d6b04b131029fae39270192dcff10fa3a64af9d1d4d0049f1efbc3f5526a34
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.11.0@sha256:bcb369c47cada2d4257d63d3749f7f87c91dde32e010b223597306de95d1ecc8
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.11.0@sha256:14c04d11f78da5c363f88592abae8d2ecee3cbe009f443ef11df6ac5f692d839
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: c1128dd59c7b64a1ecb30b38abf52f1a2b35f905d04052f3c9f3a2bb477ac5c8
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              key: cni-chaining-mode
              name: cilium-config
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              key: custom-cni-conf
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.20.20
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                /cni-install.sh --enable-debug=false --cni-exclusive=true --log-file=/var/run/cilium/cilium-cni.log
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.20.20
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.20.20
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        secret:
          defaultMode: 256
          optional: true
          secretName: cilium-clustermesh
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
