apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
  - list
  - delete
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  - ciliumcidrgroups
  - ciliuml2announcementpolicies
  - ciliumpodippools
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  - ciliuml2announcementpolicies/status
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  - ciliumcidrgroups.cilium.io
  - ciliuml2announcementpolicies.cilium.io
  - ciliumpodippools.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumpodippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumpodippools
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-algorithm: maglev
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: dsr
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "1"
  cluster-name: metal
  cni-exclusive: "false"
  cni-log-file: /var/run/cilium/cilium-cni.log
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  disable-cnp-status-updates: "false"
  egress-gateway-reconciliation-trigger-interval: 1s
  enable-auto-protect-node-port-range: "true"
  enable-bandwidth-manager: "true"
  enable-bbr: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "false"
  enable-bpf-masquerade: "true"
  enable-bpf-tproxy: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ipv4: "true"
  enable-ipv4-big-tcp: "false"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-networkpolicy: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-announcements: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "true"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  endpoint-status: policy
  external-envoy-proxy: "false"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA drop tcp flow port-distribution icmp http
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipam-cilium-node-update-rate: 15s
  ipv4-native-routing-cidr: 10.244.0.0/16
  k8s-client-burst: "10"
  k8s-client-qps: "5"
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  l2-announcements-lease-duration: 120s
  l2-announcements-renew-deadline: 60s
  l2-announcements-retry-period: 1s
  mesh-auth-enabled: "true"
  mesh-auth-gc-interval: 5m0s
  mesh-auth-queue-size: "1024"
  mesh-auth-rotated-identities-queue-size: "1024"
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  proxy-connect-timeout: "2"
  proxy-max-connection-duration-seconds: "0"
  proxy-max-requests-per-connection: "0"
  proxy-prometheus-port: "9964"
  remove-cilium-node-taints: "true"
  routing-mode: native
  set-cilium-is-up-condition: "true"
  set-cilium-node-taints: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-proxy-response-max-delay: 100ms
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
  write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: metal\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ngops: true\ngops-port: \"9893\"\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max:
    \nsort-buffer-drain-timeout: \ntls-hubble-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-hubble-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUk2cmEyL05Mb2lwUTJrbHk5Qkg4T1l3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURjeU9URTVNek14TlZvWERUSTJNRGN5T0RFNQpNek14TlZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUEvV2FQRWtjNEtPZnRaTjVYbENGRFNDdjMyMlpjR0RCRG5mYnordms1UEVZVFBQRlcKT01OOVBXR29MRi9OYlptdFNUQnl6VDJjVFV2aFdNVlRxVVFrZ094MHJtUFBuR1MyMVo3UnpJMUpIbm9BYUZaUgpCaFVxNkxUNXJNeUFyYUZQWDh5eXBCZm5ZZlk2SXNUOWI5aTdGZmdxWHB3MFEvL1cyLzdZeWtpeWJMNkRlTllhCjFaNDhnQVpMa0s2T0dmUnFJRG9JN2d4ejhObW9FclgxMkJXc3laN2VhUFpZQ1pwRE9zUFZrbi92ckRCazVtVEcKMjllNStUcWdYM2h5SU8zcU1Rbjkwa08yRXU2MWdWdEwyZ0M2c3lGU21zR1BPQzIyYm9CakZzVUVhdDF3NW9XeQpMV1l3dGlmamR2bncvR01aN0lrWHMrVzlnS2dvQWxDNFZ0aGdLUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGSUtkbDhSaHN6eWNLZXluMEluRVNVYUdSUE5STUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRRDZqVG1DbkgyeHJaM3NoZlN0Q0JnVUlOcVRueEwrV1lIWGdmLzg2WXdZTGRoTjBZRk1Zc3JJCmxrSTZRcFNNZ09IUG9qc1JNQ1ZWK3FwcEVpMm14bFk3REY0ZVZ3UXRwWXdMaFIzOWp2bmxCTXVvWFM0T2p3V2UKTzhKQUpTYi9EVkdtZGdiZXRrVEQrY3l5UmlZRGgwMDJ6eGI4NXNYMWh4Mkk0SUFyZEg5OHlkbVFlNHQraUpCbQpBcmhZQzU4M0F4cnBFWUMvUExHWnZMSE9iMnJtNXFYOEM0d2N0NWQ1cEw2QjdaQldQcW8waDBPSVM1TmNFWmRSCmtZcXIzVXNTZmJNYzJ1WXBZT3FSNEpDbHI4VWVoK1BtZXdqVnlJM0tlZHU2VjY0d1g4UTQrdHAxMlN6T1hkTXoKZjY3WTJaemRoaVM1VUF0MEM3c1hqT1JjaGJYZXVhQnYKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBL1dhUEVrYzRLT2Z0Wk41WGxDRkRTQ3YzMjJaY0dEQkRuZmJ6K3ZrNVBFWVRQUEZXCk9NTjlQV0dvTEYvTmJabXRTVEJ5elQyY1RVdmhXTVZUcVVRa2dPeDBybVBQbkdTMjFaN1J6STFKSG5vQWFGWlIKQmhVcTZMVDVyTXlBcmFGUFg4eXlwQmZuWWZZNklzVDliOWk3RmZncVhwdzBRLy9XMi83WXlraXliTDZEZU5ZYQoxWjQ4Z0FaTGtLNk9HZlJxSURvSTdneHo4Tm1vRXJYMTJCV3N5WjdlYVBaWUNacERPc1BWa24vdnJEQms1bVRHCjI5ZTUrVHFnWDNoeUlPM3FNUW45MGtPMkV1NjFnVnRMMmdDNnN5RlNtc0dQT0MyMmJvQmpGc1VFYXQxdzVvV3kKTFdZd3RpZmpkdm53L0dNWjdJa1hzK1c5Z0tnb0FsQzRWdGhnS1FJREFRQUJBb0lCQVFEYVBnWmkrNnZHcjFtcQpVa1NqYzdKNjZrTmlWdHBpaXM3eHNjdVlFQ1hYWDVNYUhkRGd1cDJXekJFSGhzdHE1YngxR0tFSFcxVE96ZGViCm1QZmhCS3RiemtzQUZ6NnJ0Nkl3Z2NTM284ZWgwL21kNHhtTlg1WEJMbjBLOG1heEpBazB2UnZ1Y0JmOEt4RU8KK1JJOXppL3pUL1ZOM3NLMC9oZVRDZjYwMmIreUh2eHFtbTRiODdhTHR5M1ZCa3ovdGxsSDZScEhPMzVacnd4NQozT1NKQW1EblZGNFR6TnN6NFRLc2pNdThCVEpJMEdSRGtkUW9acDBwVGtsYXo5ZTZuTnVEQ0V6ai9rWmlOZit3CmNCcCt6Vm9wOENVYzlJUkdKTXE5ZUJRWUxvN3VWaDg1TUQ1ekNzQnNQTlFsR053UFBBdDExOUFNNjdTQTF0azMKeWRFYnlDckJBb0dCQVAzc0hpUmhFT0VJNzF6bjQ0ZWtJMUtLQlBCVWZjUGZidEZxN3BHYjI4bnE2ZE9kTG9CUwp2cldwbXNiMFg3eitBMnNmQzlUMkRXRkVzN3ZQMVAycklrYjlQY3gwVnczaGlucGx1L1ZhMmxxTjdweHp3M3owCkNqblI1NzJHMEJyTzJpWStocTZuSFN4dUpqSTk0RU9QYmx3eitmVjRURTBqOW9EaHM3L1ByOWpGQW9HQkFQOTUKV1NzT1VIK0VCRlJ2TVNlaDhOWCtYZ09rK28xYmQxUVZqSlUxcm94RlltcnQxbmd4cUgxOFEycDhBOHVrdjNkcApUd0VnYmpjSXd4eWRUK0hGbmZiN1pUaEx0cnFEbHpOdzQrSDU4L1IxVnFNQjlSOHdjeWx3YUhSdTFmTEkvL3VVCk5LM1gvYVBBd05WVnRKcVRaZThtSTZ1NkRLSWtFM3VPaWdiUkJyZ1ZBb0dBR3o3U25TU3RJdmhLZHJXSy9Hcm8KUDFyLzNLbTBOT2dzZzl2dGJVSkQrdzV4dUhzTkdrZkduc2RzREJ6OGlOTFltdzNodnlBSG40QTNxTmRNQzB2cAppYVJ5bFJXR29iNnBsU2lGV25ZOUo2cERDQmFEeTB5RUxHQVJkWXlabDhiS01ZQlVBemw3TCtGQngvSkx0ZlFWCjYxN0lXMFpsS1lIS1dWbmVaNTVwUitFQ2dZRUFwNFlNV2JaK1JNL3VBdXdUQUprcGt6bkVyb0VkcDFvbUtxWWkKMUtrcDkyTjhRUUFMRmpBQis1OWptYzBPdEJncFVZVmx3Q2hpL1lXcVkvWW9MclZtZTFHb3N6eTY2eDFsSmQ5TwpINTNIUWpNN2g1SytDU0M5TTV3NWNyaEhaWGcybStNNGxCTEJpUUxac0VzT0xocWZ5aTFwVUsra255SW5BR3VjCnlSR0NaVzBDZ1lCdVpXVHRVMCtwWmJINVk1MVEyR2FrTWtqVnVDQk5aTzFMbWZBeGRZLy94dDA3TC8yaEg5bCsKVUxOeDVPbVg1SUJBU241bU9lSkRubUk4Ymo2dkY3UjNjRldJaVRjSnd6RGNtQ0w3bVl5OXRXK3haaUNQUDNSSwowVmRLb2Z1RjZVU1NsWnVyaXlIS1FJZmJWUGtnaDMwaEJCeDZ6ZVdwaE44TkNYQzg2eGxuQ1E9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUk2cmEyL05Mb2lwUTJrbHk5Qkg4T1l3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURjeU9URTVNek14TlZvWERUSTJNRGN5T0RFNQpNek14TlZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUEvV2FQRWtjNEtPZnRaTjVYbENGRFNDdjMyMlpjR0RCRG5mYnordms1UEVZVFBQRlcKT01OOVBXR29MRi9OYlptdFNUQnl6VDJjVFV2aFdNVlRxVVFrZ094MHJtUFBuR1MyMVo3UnpJMUpIbm9BYUZaUgpCaFVxNkxUNXJNeUFyYUZQWDh5eXBCZm5ZZlk2SXNUOWI5aTdGZmdxWHB3MFEvL1cyLzdZeWtpeWJMNkRlTllhCjFaNDhnQVpMa0s2T0dmUnFJRG9JN2d4ejhObW9FclgxMkJXc3laN2VhUFpZQ1pwRE9zUFZrbi92ckRCazVtVEcKMjllNStUcWdYM2h5SU8zcU1Rbjkwa08yRXU2MWdWdEwyZ0M2c3lGU21zR1BPQzIyYm9CakZzVUVhdDF3NW9XeQpMV1l3dGlmamR2bncvR01aN0lrWHMrVzlnS2dvQWxDNFZ0aGdLUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGSUtkbDhSaHN6eWNLZXluMEluRVNVYUdSUE5STUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRRDZqVG1DbkgyeHJaM3NoZlN0Q0JnVUlOcVRueEwrV1lIWGdmLzg2WXdZTGRoTjBZRk1Zc3JJCmxrSTZRcFNNZ09IUG9qc1JNQ1ZWK3FwcEVpMm14bFk3REY0ZVZ3UXRwWXdMaFIzOWp2bmxCTXVvWFM0T2p3V2UKTzhKQUpTYi9EVkdtZGdiZXRrVEQrY3l5UmlZRGgwMDJ6eGI4NXNYMWh4Mkk0SUFyZEg5OHlkbVFlNHQraUpCbQpBcmhZQzU4M0F4cnBFWUMvUExHWnZMSE9iMnJtNXFYOEM0d2N0NWQ1cEw2QjdaQldQcW8waDBPSVM1TmNFWmRSCmtZcXIzVXNTZmJNYzJ1WXBZT3FSNEpDbHI4VWVoK1BtZXdqVnlJM0tlZHU2VjY0d1g4UTQrdHAxMlN6T1hkTXoKZjY3WTJaemRoaVM1VUF0MEM3c1hqT1JjaGJYZXVhQnYKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQUluTGxlZTVRK2hrYm9qblIvWDNCWWd3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURjeU9URTVNek14TlZvWERUSTJNRGN5T0RFNQpNek14TlZvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTJDRVc2RHZ4ZzB6aUFJRFMxR0FLa0xITUZuNlEKSXFJS3VLV045SytCeUx6VERKNDBaMzRTVzk3TVQwMTB5VWdHazE4ZlZKVzZ2NzlVdldPUUNzSk5NZVJ1T2lOTAp5Sm1ZbE5JdWVrQkN3aGpYSjRONTJvNy9KWHNKTERNRGVkTXZjTFE0OTBqUi82YmM5WTdreGdGTVpBVVhKSGlYCm9PRzFnWFl1aTFKaUszZkd5Qk9kUXd1Vk44T2VLWWRVeGRHSGxkU3gweU41QjdFK2VGb2ZiQUZOZnAraFZSaloKQUJGOTNyeTRjMDJEcG4rMC9VbW93V0Z3d0k5dDh5QXN3VWFFdWgwYTZLYkpiU1YyUitPWTFDVVFlaEhOZGpOWApXUGFXZkFTZjdMSXkxMXR0MUlHK3V5U2h4TFFPbjVHOUVGOWhmb0F1R2ZaMEhPQmQxTFNzZE1BblF3SURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCU0NuWmZFWWJNOG5DbnNwOUNKeEVsRwpoa1R6VVRBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBRGxzWmk0b2dHdG5ZQm5xdFZ1QXBnRkJuVVJKdVhyUGV3eEwrTzhSbTEyVHpHNjMKQUpCU3VHVXJuU0NjcjgxY2ZWa2kvSEIwck11MkxUKzVoa1c4cEx2UmgyVmEzU1daK2tLRDA0WHF0RjB6ZS8zRwpBcm1La3dLTVVRaWhlSWZBZ094bnNoRitmMldwVjFTdExkblhuNHp6V2Urck1lRitWL1FpZm9RaGQ0YVlsWjB4CnJiV1BjL0MxNEtoLy93a21Tc3RiM2UxeDdpR2dqcDlEWVBFRVp0aWxwQjU5TEk1VVRJbEtRS1NyU0tTaTNPaWkKNWdlSmJMZGJNaGhxNFRXbzRHanJ0bTVDQXM4NlIwWXB6VkY5M0JrdFJpOGFBT0VlSGdsSHNZQmFPSms4Vm5NLwpibEdmTTZUMWxEcENRdjczek9PeWVob2NwM282amVvbGVBb0dJWUU9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBMkNFVzZEdnhnMHppQUlEUzFHQUtrTEhNRm42UUlxSUt1S1dOOUsrQnlMelRESjQwClozNFNXOTdNVDAxMHlVZ0drMThmVkpXNnY3OVV2V09RQ3NKTk1lUnVPaU5MeUptWWxOSXVla0JDd2hqWEo0TjUKMm83L0pYc0pMRE1EZWRNdmNMUTQ5MGpSLzZiYzlZN2t4Z0ZNWkFVWEpIaVhvT0cxZ1hZdWkxSmlLM2ZHeUJPZApRd3VWTjhPZUtZZFV4ZEdIbGRTeDB5TjVCN0UrZUZvZmJBRk5mcCtoVlJqWkFCRjkzcnk0YzAyRHBuKzAvVW1vCndXRnd3STl0OHlBc3dVYUV1aDBhNktiSmJTVjJSK09ZMUNVUWVoSE5kak5YV1BhV2ZBU2Y3TEl5MTF0dDFJRysKdXlTaHhMUU9uNUc5RUY5aGZvQXVHZlowSE9CZDFMU3NkTUFuUXdJREFRQUJBb0lCQVFDc1VpMnVlbVRFbUY4MQpvWUQzblordTRHUGxwNEdLYTRKNjJGMEhzNHVhSHB0eld3eFRXOXlOYldXZThSWGxpa3piNGFMY1VRbDE2cnBJCnlvSkZZY2drdUluK1JyZ2N1QUpFM2hQNm14UGZKK2tiOHlNTDFLbXdHNW9qcUlUajlETEYvSnZTNWpleFN6eXYKZVFBRXMzSlI2UkVibmg3ZlFqYnlndVQzWm5jcFNiNWVOVlQxQ0p4OS80bFdOSGdnMVRiTWVLOGdVTVVpTmcrdQpjd2o3d2M1R2VmUWd4bk9vWVArOG1nY2krVk9qb2FMT3N4S2ZYRCt4QTFkMG85MFdWMTlyY3I3cngrOXlzOStGCkR5QVpRbVU5U1JZQ1hqRzF1SStoYnhGeU9Md2RyZHFsUE83UFBDS0ZkcFc2Q295eG5keVBhMlVYWXpaVXFvRGEKckxleUtkNnhBb0dCQVBOKzh1eVlZdWlhczRnNDlxVUNGZ0dESk9yNmk1U0dyWEJUMDR1YzBWQk9lTzg4anN3aAp6b2RWTGVweWprYmtxelRpZWt4bEswWFRUNXVxUVlOUXA4V1cyVll0VHQ1TmRNWUhOdm9ieHZoSTB3OTNaUnlKCmE5bUVWenhyUllzN1NwTlBBUFBSZHZXZEloYXM2OGNiOE1DZUF3M2x0VG0rM2F2a056d1U3THlaQW9HQkFPTTYKWDJaS0cxVmhLMk0wOXVTVThXNk81UXNTcU4zRFFHdE96RGZNTnZOZm42anRBYlVLVlBqYUN6QVpzNVE3dU1uRQpuNGNsNWpUNVM5OEsyQVVVUnVlSWFlTTkzK1ZQWnY0MjduTklHVnNRUzgxV2FHeFNwakVZSGR4em9kYlhWNFlIClhBbk50RHFXVmlyZ2xWdkk0bzJxWlgvSTBxRUlDaHJtWFlpRjlEQTdBb0dCQUxIWk81M01BQkpkVEZ4bkh0K1AKRW51d1NqckhIVVF5eW1PTkZxcVdzOXV3Tld5b0VyVE96SWJVbEdEMW95M3N2NUExQzViWkhpNDJGYU5oUzlDYQpETENwYWIwa0FzTWtWL0o4T28rYjBreHZCSm43WHdMazdMMUhpR0E5Q2VLVVAvZ3djRVdsN1BtZzk5RVFKSGFkCjFjOGFtcWgvNjBwdU9vTGVnZW1FYnhXaEFvR0FRdEcvakF6dXpNU3VSWllscEVKSVhRS1lTQkZNcHlucm42S2sKV3lRcVpKY1NGRkxkMWFjY0piRzQ2SVFtVXNqZEpqZ3owVUpMMS9nWFg1ZUl2cldmeENaUlBRbk05Vm5NSjZWdgpxV2JpVGUwVTNXVXpmK2N1Qi9IWGxpUkt5eXE0Q2luUDN2SW10YlBQMHZ3SDc5MjdBWDNDS3ptYTlzK3VhUXFsCkpxaDlqbEVDZ1lFQWo1TzVROTJxUSs2Njl1WTQ4NW9xVzBGTUs4ZkJCV1lNaUZLN1BSd0VLRGF5b0w1YSs5SFoKWFNjaytIemo0L2xGZFJEV2pJd2hSUXFCd21GSTd3Y1JiVnZST0hsMW1CNFBTQ3Uyc3ZFd2tSZG1OeEpxMy9YbApueGt3MGFWWTJlMjBwdldtcUp0ZmRKQjRuTW5jTWtib2xoVmoybWErc3JCK3VHekM5ZVo3L3FVPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUk2cmEyL05Mb2lwUTJrbHk5Qkg4T1l3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURjeU9URTVNek14TlZvWERUSTJNRGN5T0RFNQpNek14TlZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUEvV2FQRWtjNEtPZnRaTjVYbENGRFNDdjMyMlpjR0RCRG5mYnordms1UEVZVFBQRlcKT01OOVBXR29MRi9OYlptdFNUQnl6VDJjVFV2aFdNVlRxVVFrZ094MHJtUFBuR1MyMVo3UnpJMUpIbm9BYUZaUgpCaFVxNkxUNXJNeUFyYUZQWDh5eXBCZm5ZZlk2SXNUOWI5aTdGZmdxWHB3MFEvL1cyLzdZeWtpeWJMNkRlTllhCjFaNDhnQVpMa0s2T0dmUnFJRG9JN2d4ejhObW9FclgxMkJXc3laN2VhUFpZQ1pwRE9zUFZrbi92ckRCazVtVEcKMjllNStUcWdYM2h5SU8zcU1Rbjkwa08yRXU2MWdWdEwyZ0M2c3lGU21zR1BPQzIyYm9CakZzVUVhdDF3NW9XeQpMV1l3dGlmamR2bncvR01aN0lrWHMrVzlnS2dvQWxDNFZ0aGdLUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGSUtkbDhSaHN6eWNLZXluMEluRVNVYUdSUE5STUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRRDZqVG1DbkgyeHJaM3NoZlN0Q0JnVUlOcVRueEwrV1lIWGdmLzg2WXdZTGRoTjBZRk1Zc3JJCmxrSTZRcFNNZ09IUG9qc1JNQ1ZWK3FwcEVpMm14bFk3REY0ZVZ3UXRwWXdMaFIzOWp2bmxCTXVvWFM0T2p3V2UKTzhKQUpTYi9EVkdtZGdiZXRrVEQrY3l5UmlZRGgwMDJ6eGI4NXNYMWh4Mkk0SUFyZEg5OHlkbVFlNHQraUpCbQpBcmhZQzU4M0F4cnBFWUMvUExHWnZMSE9iMnJtNXFYOEM0d2N0NWQ1cEw2QjdaQldQcW8waDBPSVM1TmNFWmRSCmtZcXIzVXNTZmJNYzJ1WXBZT3FSNEpDbHI4VWVoK1BtZXdqVnlJM0tlZHU2VjY0d1g4UTQrdHAxMlN6T1hkTXoKZjY3WTJaemRoaVM1VUF0MEM3c1hqT1JjaGJYZXVhQnYKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVakNDQWpxZ0F3SUJBZ0lRSjZmK0xXbFl0V2dmaEJocHNSendJREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TnpJNU1Ua3pNekUxV2hjTk1qWXdOekk0TVRregpNekUxV2pBb01TWXdKQVlEVlFRRERCMHFMbTFsZEdGc0xtaDFZbUpzWlMxbmNuQmpMbU5wYkdsMWJTNXBiekNDCkFTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTDlTTkIyamhDSkZ6V3g2NGtpZ2Ywc0QKVWg0ekVGZ1ZLbHdvVldneUZTRkVWT3Z2Skp4NVpTblNIVlBRTUVQcStNcTlZdjQ1UzJ4Uk9jMDVSMGR6SVc0bwp6a3BxR25lekYvNCt6ZTdxbUI3Kzd5OXZCZmJTTGVmZGdmaWNsbk56Vmp0OUxPNTg0cy8rdVBGSkEyQ3VmU3E1CklQOURuS1M3Z2NPbXk3RHNGdzFiRVN1cTFHV3RaejVaZCtQUTIzSjk4SzAvUGR5R3dFWjZadzV0em1zZWI0YWwKMCt1NUJqMHZuK0IyYjRsemJ0WkFrVDROQTR6TmZJdi92K2h0cGx6WmcxMXhUckxmMGZNcTEvK1lNMmVwQmJFeQpKYUwvYlY2NGtDWXRLK1VnamdDRTlEcGhqdW5DN09ORHl1enFVZ0dXdUlKUGFqazdiR3hmbXludVhMOW5WQzhDCkF3RUFBYU9CaXpDQmlEQU9CZ05WSFE4QkFmOEVCQU1DQmFBd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUcKQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXdId1lEVlIwakJCZ3dGb0FVZ3AyWHhHR3pQSndwN0tmUQppY1JKUm9aRTgxRXdLQVlEVlIwUkJDRXdINElkS2k1dFpYUmhiQzVvZFdKaWJHVXRaM0p3WXk1amFXeHBkVzB1CmFXOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBQnZOcGQ0emllejZLYi9yUHdkLzNkYVQ4K3JzNnIxQ0YvQm0KbkpYVllFQms1R1dJWk1BUjhZSSt0aVVZUDBqNE5UMFpzVGhOSlVpT0lYOVowTGFyNlFXOTdBVzRuekNTZHRqdQpYUVBqdmEzbFVma3VFQytRdWFVYnRVTkJwV3JxUG1nVkJISVpHUDJHQU1UamVNUzJ2RFNpTkY5ajY1QlV0NFNFClNSN2x1WGlWMUs5cEJDL2huUmZ5ZEZZVUFMSlcydmQrYm90WDJBM2x4WEdBZVZleDgxTWFvQis2YUZCNllVY2IKY09KeHZXamxJTDJ2ZnJXL200dkJpcFdOMEo2S2sxNWcwbGtiTkZ4Y25zaUtHS0xXTWVkcU5WVVVENDJxUkgvSApYUXVJYlBTS1hXbWdpS3hKczd3ZUZWTE1YcHdGdHBDSE5uWlRtaGR6NG5hb2h6WUNBQmc9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBdjFJMEhhT0VJa1hOYkhyaVNLQi9Td05TSGpNUVdCVXFYQ2hWYURJVklVUlU2KzhrCm5IbGxLZElkVTlBd1ErcjR5cjFpL2psTGJGRTV6VGxIUjNNaGJpak9TbW9hZDdNWC9qN043dXFZSHY3dkwyOEYKOXRJdDU5MkIrSnlXYzNOV08zMHM3bnppei82NDhVa0RZSzU5S3JrZy8wT2NwTHVCdzZiTHNPd1hEVnNSSzZyVQpaYTFuUGxsMzQ5RGJjbjN3clQ4OTNJYkFSbnBuRG0zT2F4NXZocVhUNjdrR1BTK2Y0SFp2aVhOdTFrQ1JQZzBECmpNMThpLysvNkcybVhObURYWEZPc3QvUjh5clgvNWd6WjZrRnNUSWxvdjl0WHJpUUppMHI1U0NPQUlUME9tR08KNmNMczQwUEs3T3BTQVphNGdrOXFPVHRzYkYrYktlNWN2MmRVTHdJREFRQUJBb0lCQUdiN3k3dk1nZHFrOGkrYgpjZVNnS0FUcjA2OFgwNHRtVVRmc0toVDlLR3lReUpsN1Q1eStwNXE4VkRjQ1VJaXVtWjhnRklJOXV3Q2lORmZvCnBocXF1V3Ivb2hOaVM3NzA4MHhTNkN6YnNHaTIxMjhUOXdUbUcvbThQVExpcndXVUp1Mjhzb3ZwUTNtc1prYlQKQTNOdVdVZS9BU2tHYnZJcFVHOU5nRVZLd0JuYVpmWVAvTWdMQU9EVzJWOWtWUXJROWFsSmErNU9vSmxxbkVNZwpNTFBJUkNQWUtTRk9pWWpTTHJpTlExM1hOQlVnSDEwS2dqMGhmT1BxVXIzZ01MOHM2WlhlYTlVWnVFV3VrL3RPCkNlWlZ5d2xVcG9kcEZYU1p2ZUNENzZTVDJVOGJtMWFjZG5wYzFzYkVSd2oxRkxEMCt1bm9uc0FrNXNnYU15MlYKbmV2L1lpRUNnWUVBNFppcnJ1YjdJaHhveVVHRDhsVVUyeEV0TVJWWDlNSnB2YnJGYy9PcmxPY0JMekVnNmtldwphTHJSbUNqSFpFWEFGTW0wSXVYVHd4WG41Q0dMdXJwWGlObTVoaFprV2FTQzQrRjlhbTd2aS9wR2NCdlhQTWVaCkJTalR6S0d0Y0RHZ1AvV1d3dHI5eHdZbzdudko4RTdPYm1uZVhxL2VmMEduZmttOWdiZFpUN0VDZ1lFQTJSci8KYW9XWlpPV2ZpTlRQYmVEQUhNVTNYUEpNaU1SYitiTEc5TytvblFNYWQwYWNQVkR0bHBWM0FmUHNpSkh2OE11UAptMUROWmtJd3pZUUdqa2V0R2J3dTlUVkZkalVFeVNMWDNHR0Y0R1FPbUFPT2lMKzFtTDhzZXVhdWgzUXBXNmRaClZBdU5rdXdyZFg2V1RRQmxsU2xDVS9KNVNXaWdwandxYWtORXVkOENnWUVBb2RUb1M4YU1ucktzaExzSDBUNHgKZ05qNGh6NWRZMHBYbW5BeUZ2VFV3RE5haVNVQURMQXluMTVzM205YVlkY2JiSTRwTitPUW5tREhnY0tDdndmUApwVzh5aERycDc5aHd3TkpRS3BxOElyajk4SXc0UWZTWkU3ZHZBRnQyMUlYMUJBekVBcklmM0xiUmhBcXZHVUVmCkd0dTlWa1ZwSWZiU0ZXa0dsZGdXTEhFQ2dZRUF2L2pOYlFXaGM4UlBZeEM2TW5DUHIyRDc2V1lmSXJodWs4YnYKZ2xvQWdJWGoreUFtdTFrNkhQTWcva3NRRmxybERja1J2TWFnT1JIQ1VaZXlyRkRZMFc3REh2UHg3ZXBIeHdyVwpVUHF6QkkyMUVkbmpTU3dyaVZ0U0c0S3JSUDhFS3hVNU9jWFZjOXI5T3JHcWVZQW1VdFRlMzVnQ2cxVE82TzgrCm1pUE5PNFVDZ1lFQWxROFB3YmUzR05IUTl0bHlCMmxzQnhaS3lSbWswV1EyeFp0NXNETDB0WFJlLzhwZkZlZDUKZEs3THBnamZNYTVoT3lyOEtFV2lxZXFoMFJTSzlVSCtBamRDczBhbVJRMlBTRG1Zbzl3OFBCMlFPTmZiU2M1Nwp6RUhrTGdiNlNpa05zUTBPU1hBZXY5WVNvSzAvMFBlYWdmWDR2bk5EdHpBeUFWRE95V0x4d01NPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 50%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: f049617d1c36e5fd8f1f831f24d496a04fdf0698b734de92a256b33055409dfa
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.20.20
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/operator-generic:v1.14.0@sha256:3014d4bcb8352f0ddef90fa3b5eb1bbf179b91024813a90a0066eb4517ba93c9
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        readinessProbe:
          failureThreshold: 5
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 5
          timeoutSeconds: 3
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: 375a925bed4758ffc0fbd25a2ca46b1e775668d02925f0281af97cd647ada807
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.14.0@sha256:bfe6ef86a1c0f1c3e8b105735aa31db64bcea97dd4732db6d0448c55a3c8e70c
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          tcpSocket:
            port: grpc
        securityContext:
          capabilities:
            drop:
            - ALL
          runAsGroup: 65532
          runAsNonRoot: true
          runAsUser: 65532
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      securityContext:
        fsGroup: 65532
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              - key: ca.crt
                path: hubble-server-ca.crt
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: 02d6b04b131029fae39270192dcff10fa3a64af9d1d4d0049f1efbc3f5526a34
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.12.0@sha256:1c876cfa1d5e35bc91e1025c9314f922041592a88b03313c22c1f97a5d2ba88f
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.12.0@sha256:8a79a1aad4fc9c2aa2b3e4379af0af872a89fcec9d99e117188190671c66fc2e
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: f049617d1c36e5fd8f1f831f24d496a04fdf0698b734de92a256b33055409dfa
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.20.20
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.14.0@sha256:5a94b561f4651fcfd85970a50bc78b201cfbd6e2ab1a03848eab25a82832653a
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.20.20
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.14.0@sha256:5a94b561f4651fcfd85970a50bc78b201cfbd6e2ab1a03848eab25a82832653a
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.14.0@sha256:5a94b561f4651fcfd85970a50bc78b201cfbd6e2ab1a03848eab25a82832653a
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.20.20
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.14.0@sha256:5a94b561f4651fcfd85970a50bc78b201cfbd6e2ab1a03848eab25a82832653a
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.14.0@sha256:5a94b561f4651fcfd85970a50bc78b201cfbd6e2ab1a03848eab25a82832653a
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        projected:
          defaultMode: 256
          sources:
          - secret:
              name: cilium-clustermesh
              optional: true
          - secret:
              items:
              - key: tls.key
                path: common-etcd-client.key
              - key: tls.crt
                path: common-etcd-client.crt
              - key: ca.crt
                path: common-etcd-client-ca.crt
              name: clustermesh-apiserver-remote-cert
              optional: true
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              - key: ca.crt
                path: client-ca.crt
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
