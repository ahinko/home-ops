apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  - ciliumcidrgroups
  - ciliuml2announcementpolicies
  - ciliumpodippools
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  - ciliuml2announcementpolicies/status
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  - ciliumcidrgroups.cilium.io
  - ciliuml2announcementpolicies.cilium.io
  - ciliumpodippools.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumpodippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumpodippools
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-algorithm: maglev
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: dsr
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "1"
  cluster-name: metal
  cni-exclusive: "false"
  cni-log-file: /var/run/cilium/cilium-cni.log
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  disable-cnp-status-updates: "false"
  dnsproxy-enable-transparent-mode: "true"
  egress-gateway-reconciliation-trigger-interval: 1s
  enable-auto-protect-node-port-range: "true"
  enable-bandwidth-manager: "true"
  enable-bbr: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "false"
  enable-bpf-masquerade: "true"
  enable-bpf-tproxy: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ipv4: "true"
  enable-ipv4-big-tcp: "false"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-networkpolicy: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "true"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  endpoint-status: policy
  external-envoy-proxy: "false"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA drop tcp flow port-distribution icmp http
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipam-cilium-node-update-rate: 15s
  ipv4-native-routing-cidr: 10.244.0.0/16
  k8s-client-burst: "10"
  k8s-client-qps: "5"
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  mesh-auth-enabled: "true"
  mesh-auth-gc-interval: 5m0s
  mesh-auth-queue-size: "1024"
  mesh-auth-rotated-identities-queue-size: "1024"
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  proxy-connect-timeout: "2"
  proxy-max-connection-duration-seconds: "0"
  proxy-max-requests-per-connection: "0"
  proxy-prometheus-port: "9964"
  remove-cilium-node-taints: "true"
  routing-mode: native
  set-cilium-is-up-condition: "true"
  set-cilium-node-taints: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-proxy-response-max-delay: 100ms
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
  write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: metal\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ngops: true\ngops-port: \"9893\"\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max:
    \nsort-buffer-drain-timeout: \ntls-hubble-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-hubble-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRTlVZYzFTbGpQMWtQRjJqbE5VaG9vREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TVRFNU1URXdNakEyV2hjTk1qY3dNVEU0TVRFdwpNakEyV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ3d6ZDV5d2dFWmtQU2p1S3J6VnA5UUZ6elhIalpVRGdKSTNCdnQzbllBYUdySys5USsKVVZoNGRqdVY1Rnk4R0luN29mY1luS1E1WFVuYVErTlRWb3BlWU1JNjhldkhobjNPVmNGRUNYb3BRanZEejBxNAo4NGpRWHVQSkVzbzZEZ2tzUVBUSkVPL2xZMTBzNnVPZXlQS0dVL0syRC9GMllPQVNFa3pKZ0VPc0ozbENuN3RGClhVS0ZoNWIyNFBFYkEyUnJBRzZ3OWZCV3FJMUd6ckk0TmNwV2M3akZRRUNjaHpMSzhKblVXL0xEUzN0SFZoQVkKYjVlcnBTLytmSlhzSUFYTUJWdGxnMHRoYjIzYWxIaFBEclMvYXN6aEl2dnFOejYxclhoZ0d5dlhUblBKcVBHOQpxa1lucVZKVk5MRnQzd3FCM1k4MlVEM3AyaGc0RnAwcEdWZjNBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVUzVXBYdndsM0VNY2tHaTRnK29RRXdFQXEzVWt3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFIUE5PdnY2TzVEWGYvdUplOTdiOURaR2ZQYmhlNUZjOFd0S3hVRDkrUlB2eDFxTWgxVXNBS3NaCnlHT21IQkZMNkIzYzJJWnEzMkVoWk83QTB1eW1sOHI1YzllNGROeXZrM1NKVitLMDZoK2xvTUZydjA2dUVJQkEKNkNCT2ZVLy8zTyttdzRNYnljcHR2cEh6WVFtTWNrSERadEF1OFllejBSZ01DTWlDaDh4U2JMeHM0TUdhVDVIbwpPdXUxbWpKRkhMRDdFeXRTN3FOcEwvemZma3YrWXVYcEtCalhtWVdxeVZiQlZoRDBnMGVzcUF0SXp0QWoyNUFOCkZjUGRYblJ4V2k5Ri8yNzNGMWRsVCtWcm1IOWk0S2ZLa01WQy8xV2VKWnQ1Y3IxczAzUURNb3NCT2xIcVhsK1gKYVBLMTNxMjRDVWVTTjkwRlIyekpJZy93NnRhWDhJVT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBc00zZWNzSUJHWkQwbzdpcTgxYWZVQmM4MXg0MlZBNENTTndiN2Q1MkFHaHF5dnZVClBsRlllSFk3bGVSY3ZCaUorNkgzR0p5a09WMUoya1BqVTFhS1htRENPdkhyeDRaOXpsWEJSQWw2S1VJN3c4OUsKdVBPSTBGN2p5UkxLT2c0SkxFRDB5UkR2NVdOZExPcmpuc2p5aGxQeXRnL3hkbURnRWhKTXlZQkRyQ2Q1UXArNwpSVjFDaFllVzl1RHhHd05rYXdCdXNQWHdWcWlOUnM2eU9EWEtWbk80eFVCQW5JY3l5dkNaMUZ2eXcwdDdSMVlRCkdHK1hxNlV2L255VjdDQUZ6QVZiWllOTFlXOXQycFI0VHc2MHYyck00U0w3NmpjK3RhMTRZQnNyMTA1enlhangKdmFwR0o2bFNWVFN4YmQ4S2dkMlBObEE5NmRvWU9CYWRLUmxYOXdJREFRQUJBb0lCQUhiUzFSYVJGZ1lscXBUQgp6bnBlRkJIU25Ed0MvUVkrcUFCcGxZZW5BKzFBUDgyTnM5WHgrNkJ4N1pmT2N4aWk4VkVoU0J6TllYMkFHZHRMCjF1S3lmYW55STNkVUVWNzJIMlRsczA3VGc3dG8zUnU3Ry8vekJGYnQvdTZxNXloZk9JRDZZc2tpemVkL2dTWm4KOG5STG50cnlYbU5Ia2NNNlZqMHUrVlpQRXF3R2VXUkViVVVWdHc5ZXk2N1ZXa3I0Yk9yZ3hRWGEwY2hGTUZBUAp6YUFkNE15czhDNjFLenV1cEhDTDNhOGQwY2szVExHbmdJbk9ZYzdyV3o2RXE3N3BXalFoU0JsRk5ONGRZT0RNCk1NOHc4bUZFVUxoc244eVpyUFlMSzRIbytYc1B6bjNiMVI4ZXdHejFTWG00SytGOVF0M0dGSTJSbWdiYlVBTlkKSUhGWThla0NnWUVBMmtnYXRpeXFFSnBuNU1ySVhOV2IzOFNOLyt6ZGpKZUhDQmEyZW1Ma1dWeUlGRldMQmlKdApzQUFKSzJOenlPNHpvUEEvWXRXamdQbUxqeldpRVMyd0d0bU5DTmd0VXo4bGhnRHNKYjhoRFV3YmhlaEswY2hQCjJhd1NSU1lDMS9QRmlpVlYzR3pPT0ZCZFV2c2J5Z2tWbGJwTG9vbURTcmpXTEZjOCt6YW1ZdFVDZ1lFQXoxcjQKQy9tbXJpNy8vV3R0Q3JqK2RQR1ozb21hRVk0anh5QlJ5OExRbWhnNG9GRktXblR0YjUzdTF6Wm8yOGtVS3gvdgpaQWxjZEl0TmJueDRPMmhTanpvc09qSVRlM2NqM3RRZnRVbGkrZ01UdjVWVFJEZHBod1I2cGZ1NG1vckt1aXRqCkx1dEdKejMrdGFvVFluUE9FQzVnanl6eXFZQlNRbTRyQmNsei9ac0NnWUE4WWEvSjd5Y0lPcjQ4b3YrejluOE0KOG1GWmgxdHQ5Y2lycXlURlRDL2dyR0VVUnVtVFE5alYwOXkxZk9oZGo4OEdXUThmdHZ0b3hSOGUrWFlnakdQbgp1WUJ6RHVIUzRtZnQzcmwwWTUrdi92cXFHeXovUlFzWnFxalBLZ21sVlZDeXUwczZFM3NrUnM3YUVvNklYK1R4CnF6d2E5VEUxYlZZSnBBUkJkY2VuRlFLQmdIZmsrNlBBK0hXaXkzVzJsZGdyVzBZM0pHY2VYUzFsYUo2TXUzNzcKNkM0UmJ6eVRoRkNGWjN5d2J4ZVZhRkFkRmtKUk50UTY3WENkMDJuZElwQUhKQ1dZMTFYVytwamJMS3g5THRCZAozSkwvRUg0b1Uzc1FKejVnZ3FKU3lFempqNURSNFltUmxJREFRZlM4b0hTK3pSbGlGNGJ4MEdYZHdyS1NqT0hOCnQvbWRBb0dBQzVrSUF2MEJ3R0FFZ3J1RDZKTGdkQWtDbnlYdFZ4bnpNbnhVTXNSejRhVmlDdVBSY0NWZWJhbnkKSDhtVUhGbzczTkQzMWZzc1ZUSFlMaERrVHNla3VTM3huTEpmcWJmOWpFNEl2NUkzU0ZneklwM0ZEdHpidThBKwppc0tDWlVWcnpQN3JRT0paamR3V1ZCUjJseHRhZnRGK0RxYUwwS0Nvc2IzbG00Nk1YQkE9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRTlVZYzFTbGpQMWtQRjJqbE5VaG9vREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TVRFNU1URXdNakEyV2hjTk1qY3dNVEU0TVRFdwpNakEyV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ3d6ZDV5d2dFWmtQU2p1S3J6VnA5UUZ6elhIalpVRGdKSTNCdnQzbllBYUdySys5USsKVVZoNGRqdVY1Rnk4R0luN29mY1luS1E1WFVuYVErTlRWb3BlWU1JNjhldkhobjNPVmNGRUNYb3BRanZEejBxNAo4NGpRWHVQSkVzbzZEZ2tzUVBUSkVPL2xZMTBzNnVPZXlQS0dVL0syRC9GMllPQVNFa3pKZ0VPc0ozbENuN3RGClhVS0ZoNWIyNFBFYkEyUnJBRzZ3OWZCV3FJMUd6ckk0TmNwV2M3akZRRUNjaHpMSzhKblVXL0xEUzN0SFZoQVkKYjVlcnBTLytmSlhzSUFYTUJWdGxnMHRoYjIzYWxIaFBEclMvYXN6aEl2dnFOejYxclhoZ0d5dlhUblBKcVBHOQpxa1lucVZKVk5MRnQzd3FCM1k4MlVEM3AyaGc0RnAwcEdWZjNBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVUzVXBYdndsM0VNY2tHaTRnK29RRXdFQXEzVWt3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFIUE5PdnY2TzVEWGYvdUplOTdiOURaR2ZQYmhlNUZjOFd0S3hVRDkrUlB2eDFxTWgxVXNBS3NaCnlHT21IQkZMNkIzYzJJWnEzMkVoWk83QTB1eW1sOHI1YzllNGROeXZrM1NKVitLMDZoK2xvTUZydjA2dUVJQkEKNkNCT2ZVLy8zTyttdzRNYnljcHR2cEh6WVFtTWNrSERadEF1OFllejBSZ01DTWlDaDh4U2JMeHM0TUdhVDVIbwpPdXUxbWpKRkhMRDdFeXRTN3FOcEwvemZma3YrWXVYcEtCalhtWVdxeVZiQlZoRDBnMGVzcUF0SXp0QWoyNUFOCkZjUGRYblJ4V2k5Ri8yNzNGMWRsVCtWcm1IOWk0S2ZLa01WQy8xV2VKWnQ1Y3IxczAzUURNb3NCT2xIcVhsK1gKYVBLMTNxMjRDVWVTTjkwRlIyekpJZy93NnRhWDhJVT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQUpmMEJXbllxdmM0Qm9IYjJsL2VrSmd3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURFeE9URXhNREl3TmxvWERUSTNNREV4T0RFeApNREl3Tmxvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTR3UzdwMmNrRWMvMHZyYzBGcEk0d2pkN0xoNm0KK3lBaWNsd0I4bG01cWNmSFYwTWtZREZJRExsSFFjOC9XeVU1c0J5TWVENXA3VG91emtMRi9YSzhEbVhIU1FpcwpNaXdjQnpKN2xJR09IY3hqcXRKV0dNVzNsOWJzMGtaQWNsbmgwOWEzc3NJNCsreDZZNHp0OTB1SExUM2ZCN3kzCmNhSlpiT3d3aFJ3RnZsa21pNlluc0JHSkhrbVZuQWtIdFJNbmVWZ2R2cHZZb3ZWRmlZNGRlb05WNkg5R2lpR3AKbkZtV3pYdGk2cTRRSlRRNGhGTEhTaW5GSXpOVWxqcGVjbFBoUHZiYkxSZGpNM0U3SlhMcURRRVUxdFBoWGtJUgpNUDJXdk5hWXk3SkY1UFBKSDlvT3k3OVpuU1ZSNUVVeTBVTVZiMG4rMnUvYU5HcnY1ejBsNzlvbkN3SURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCVGRTbGUvQ1hjUXh5UWFMaUQ2aEFUQQpRQ3JkU1RBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBQ1U1cmMvMEJERDhrYU9xL3Q0TXlIdDQ1dG5vTUR3OWh6bDJ3cGVENEJBajFvV2MKZlozRGgxZVZYUUJEYWJEUUtTWXZBeHIxTXk5NnR1c3lKNDU0WnlGOE1TYng3SFpYWnlMa1hRVkg5WXlUanBRagoySmlNZkhIOUN5L21GVWJtSjNDK3Npa0JpZEllZXEyYzJaMHFqRUFkc0lwcWF3bWhVVlJCZzZGL0Y3bXArR1Q1CkcrU2U2clJuZkR1NWQxaW1SS0E5REtMdjJDRklMNUhGbysvdzJSNzBBeXFpN2ZpUnlCL00wRG1WbHB6SDgxZHcKckEyN0lLN1I2K1I1QjJ2R3lzOUV6ek52VGx5UlhtM05JWjdFR0taaG1JeFpwTHIxTXJGcnA3RnhXQ0x0cGhmZQpsVUpPQUhsZTVlemNDM1prRXA1aklReVo4aGRsTDNmWjVlR3BLcnM9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBNHdTN3AyY2tFYy8wdnJjMEZwSTR3amQ3TGg2bSt5QWljbHdCOGxtNXFjZkhWME1rCllERklETGxIUWM4L1d5VTVzQnlNZUQ1cDdUb3V6a0xGL1hLOERtWEhTUWlzTWl3Y0J6SjdsSUdPSGN4anF0SlcKR01XM2w5YnMwa1pBY2xuaDA5YTNzc0k0Kyt4Nlk0enQ5MHVITFQzZkI3eTNjYUpaYk93d2hSd0Z2bGttaTZZbgpzQkdKSGttVm5Ba0h0Uk1uZVZnZHZwdllvdlZGaVk0ZGVvTlY2SDlHaWlHcG5GbVd6WHRpNnE0UUpUUTRoRkxIClNpbkZJek5VbGpwZWNsUGhQdmJiTFJkak0zRTdKWExxRFFFVTF0UGhYa0lSTVAyV3ZOYVl5N0pGNVBQSkg5b08KeTc5Wm5TVlI1RVV5MFVNVmIwbisydS9hTkdydjV6MGw3OW9uQ3dJREFRQUJBb0lCQUJRZ0xVcXYrQ0NrSVB4dgpYV3pLMWNGU0RkZU8zQnJUUkhxQzhhRThseHNZSFBIOWY5SVBUR1hrWHc3VWdyZGYyM2RqY0lpUWIrK2FBdUJDClJ5OHE1c1VYL016YXVmbFFzOE5ubEZFY0V5OU5HV0RoZU1TRmNydEJVSWxydFBidVJQajB4aUJRMjZCcDNJZksKektYcHlqZ1dqaGt2Zjh2UktzQmZTQVhrOEJWcHd5T0dMVVJzL1dtbXRTdG1veGo3TXFWclRwQkVoRDJBZm9VQQpLU3VxcktXdFVHTVBCZXVFM3dSMDF1RDFxblBXQnh2UFdoTkNrMjJpeEJMTW8vUjJiODlHYzlMZHkvWmdJRmFrCi9pc2lraUF0bVI5akpkdkFEVllRRUFHYk4wUUIxb2pzVzlSNEtzK20yYnBGNlhSQlZQVGlUWE1wOWNHekh3eGcKV3U4L2JaRUNnWUVBN2RIWHZGUnRDZ0I4UlI1cVFoSWFGQlpjcHlmSDdRMXlXTUlUNDErRUUreW5qTEZkdFVwdwpuZGVJaEZ2R2JiTzNTZ0tETXljWXZuaThCWnFkRTM1NHZCT1U0WHVJbm4wRlJma2ducnlQSmdZcHBqbGNPMmhvCjZZOEVxY2FQK21KK3lta3BVNTlMNGxyV0V1SVNqY3U0YUZOTmcyam5NSjJ4QTlvV0ZmVndDMDBDZ1lFQTlGK0MKYS9MRGhmWTZvOW5rL0Iwd0ZOdUpzaTRBT1dXS0ptODhSTEFjRDNrb0Y1Z2J4Vk4ySDVheGJDNm1SY0pHeUM0cApOS3Y3ZmxRdkpka2dZMUIwLzJDQ2lHVnZjcWxnSGgzbUNzMUl1VFBubUptbWEwcE5tY2xpb1U4eFBOTy9LK005CjMxc29KczlTbjBkTmlOQ0xhbnBtVGVpc3RXbVJjTE0wVDdXUzM3Y0NnWUJKdGlYUStMWUhTSms3N3k1dUppQXgKSTdFNkdpbHNmeU4zQVVpYXkrc3JKY25VNE5DenRVdnNrSForMTlkTC8wMExRbllaNzc5S29pOWM2VXhRVTMzbQpoWWM2MEVoTEgyTDRDanlqRnJ5anczczdTMEljSThPSXlNeGdOdXcvWmpINFdObjNVa041K0Qrc0FLaFJqTmd1CmRjdHJ0S01idlhTMVJlNWNoZ05oYlFLQmdES2NXVUdNSEt4dzY0SWx6WVBkYzZqT012MWhBNURmazdZVUVaSlUKT3V1RmR5VXp6b1NXblg4N1VYR0xVOHBjeXhZSVlXWlVQQmpVekpMMUhmMFRtN2VNUUZ5SlRZU2N5WmhUTHVLTAowNFR2MkFaRnhDNnlTOUlPNEV0eVFFdE51MmtXZmlqMUV5SytpMmtMZG1aZ2NvOVIzRUJFY1FoOVhhN09ub1huCm9BeVBBb0dBVzcvZ2NIUloycDRscE1QSnFtOHkwYXBWdFplMnVGYmF2ay9ZQXYrVDZWM2k2WjNMalhBY3psN1YKaXJZbUMxUWtRL3dyR3I3MUcxanBTcXpmVjVrRUg5NkVTejBYY2d4Uk1lWk1JVHZPMWtjTWF2Y3FDU0I0TVF5SwpVeWJMNlJTQ1JuaVAyL0pZdUtxTFFNZnc2Wi9ZZFltU3BNMVZLMHE2TXRCZ3VrN3JjTjQ9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRTlVZYzFTbGpQMWtQRjJqbE5VaG9vREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TVRFNU1URXdNakEyV2hjTk1qY3dNVEU0TVRFdwpNakEyV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ3d6ZDV5d2dFWmtQU2p1S3J6VnA5UUZ6elhIalpVRGdKSTNCdnQzbllBYUdySys5USsKVVZoNGRqdVY1Rnk4R0luN29mY1luS1E1WFVuYVErTlRWb3BlWU1JNjhldkhobjNPVmNGRUNYb3BRanZEejBxNAo4NGpRWHVQSkVzbzZEZ2tzUVBUSkVPL2xZMTBzNnVPZXlQS0dVL0syRC9GMllPQVNFa3pKZ0VPc0ozbENuN3RGClhVS0ZoNWIyNFBFYkEyUnJBRzZ3OWZCV3FJMUd6ckk0TmNwV2M3akZRRUNjaHpMSzhKblVXL0xEUzN0SFZoQVkKYjVlcnBTLytmSlhzSUFYTUJWdGxnMHRoYjIzYWxIaFBEclMvYXN6aEl2dnFOejYxclhoZ0d5dlhUblBKcVBHOQpxa1lucVZKVk5MRnQzd3FCM1k4MlVEM3AyaGc0RnAwcEdWZjNBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVUzVXBYdndsM0VNY2tHaTRnK29RRXdFQXEzVWt3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFIUE5PdnY2TzVEWGYvdUplOTdiOURaR2ZQYmhlNUZjOFd0S3hVRDkrUlB2eDFxTWgxVXNBS3NaCnlHT21IQkZMNkIzYzJJWnEzMkVoWk83QTB1eW1sOHI1YzllNGROeXZrM1NKVitLMDZoK2xvTUZydjA2dUVJQkEKNkNCT2ZVLy8zTyttdzRNYnljcHR2cEh6WVFtTWNrSERadEF1OFllejBSZ01DTWlDaDh4U2JMeHM0TUdhVDVIbwpPdXUxbWpKRkhMRDdFeXRTN3FOcEwvemZma3YrWXVYcEtCalhtWVdxeVZiQlZoRDBnMGVzcUF0SXp0QWoyNUFOCkZjUGRYblJ4V2k5Ri8yNzNGMWRsVCtWcm1IOWk0S2ZLa01WQy8xV2VKWnQ1Y3IxczAzUURNb3NCT2xIcVhsK1gKYVBLMTNxMjRDVWVTTjkwRlIyekpJZy93NnRhWDhJVT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVakNDQWpxZ0F3SUJBZ0lRS0hzelMwQkp6L3h4QTJjdURMOFFpREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TVRFNU1URXdNakEyV2hjTk1qY3dNVEU0TVRFdwpNakEyV2pBb01TWXdKQVlEVlFRRERCMHFMbTFsZEdGc0xtaDFZbUpzWlMxbmNuQmpMbU5wYkdsMWJTNXBiekNDCkFTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBSitndnBWOWRGVGxpcXJsUWVkNnpQbjgKeU96N296ZUxRUmdDQnRjSEVGcVgweHJtTlhYRUw4L0RzTjJ1R2dNUUZWTnhDVXJvMU5wTXp5aFlrN1UxMlFkeQpTTmltM0xFd3hUNmpiK0Npc3ZIL2owYnlrRWt4ejF4c1o2Z1BQYm1idFJEWmdGaEk0VkN4SFNpaTNubGFJUS93CkZjNHhKN2NYVTUzalE1eWRXT0EwM203NFVHQWdibGVjMDFkaDdXL25qZXhxMXpoaExRaHNwWnhhUVBENGJwc0UKQkRwazVHUlVTRm1rS2lCTS9WOVlFNDQzNjJKU1k5L3M4Z3RQTmIwa0txa3hKNXlGM1JXZkhoQlovcHI2SkREUwpVYVk4TWlUS2xJRjNqM2txdytlc1BPZ0I2V0hWQkRyNGhDNk5jLy9QZWFrd0pjWXhNTU9IWHdJS3lMSkJZRU1DCkF3RUFBYU9CaXpDQmlEQU9CZ05WSFE4QkFmOEVCQU1DQmFBd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUcKQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXdId1lEVlIwakJCZ3dGb0FVM1VwWHZ3bDNFTWNrR2k0Zworb1FFd0VBcTNVa3dLQVlEVlIwUkJDRXdINElkS2k1dFpYUmhiQzVvZFdKaWJHVXRaM0p3WXk1amFXeHBkVzB1CmFXOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBRnNTRDQ5T2IvaXhTc0N0aDZCU2E5VWsyNnlsSUo3MkVTZWgKdnlycHVKYkZ2dy95VWlXRWxCZTNoZEJpbE1kcUVmQWxLdVJtRVBHQkVYUmVzZmQ2SlIxOFNIWVJyRUp6NnkyMQpEUmZzVGVYY3ZTZTBwTDV1ZGUzNkpQQmRHMTg4TlAyYmJ5M2JpMlVzd2JXK01QR0FIUW1maEo3S2g1MmJRS3ltCmdDR2oyRkdjaGZPTEdNeHBMd2xFZU9va0pEMmZxOUxjWTBhdTRtRWhwVkhRWDZYNitGTmU3Zm45bHRpMmxodk8KVitkbmc3MU9MNFpHZUVhTk54NGF0OWhGcjNPM0FhUXNPaUxxS284b3NqK3RBTkh1emdsazJQb0UweUxsMlJ4bgpRYkp5OG1iOUYyN0hCV0t6aEovS0dQWGVkTm5iMmxyV3ZSOXF5bHkvTjVBNnVQeGJYQ1U9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBbjZDK2xYMTBWT1dLcXVWQjUzck0rZnpJN1B1ak40dEJHQUlHMXdjUVdwZlRHdVkxCmRjUXZ6OE93M2E0YUF4QVZVM0VKU3VqVTJrelBLRmlUdFRYWkIzSkkyS2Jjc1RERlBxTnY0S0t5OGYrUFJ2S1EKU1RIUFhHeG5xQTg5dVp1MUVObUFXRWpoVUxFZEtLTGVlVm9oRC9BVnpqRW50eGRUbmVORG5KMVk0RFRlYnZoUQpZQ0J1VjV6VFYySHRiK2VON0dyWE9HRXRDR3lsbkZwQThQaHVtd1FFT21Ua1pGUklXYVFxSUV6OVgxZ1RqamZyCllsSmozK3p5QzA4MXZTUXFxVEVubklYZEZaOGVFRm4rbXZva01OSlJwand5Sk1xVWdYZVBlU3JENTZ3ODZBSHAKWWRVRU92aUVMbzF6Lzg5NXFUQWx4akV3dzRkZkFncklza0ZnUXdJREFRQUJBb0lCQUFWcGY4eTF1akgrcmxybwo5dmtRTXM3dkFTajN4eXJrNzhvT2w0akcxb2tieUs2S3k1azRrNTVwdGg5dC9iZkkzZEE4YnVJNVRxNHdHSDMzCnN0cGIvd1cvbkRTc1E2TkdVZ216cE9GcTRzSk50ZC9qN1h4dDBlZ0NUT2xueXVIMkk0ZDB1R05GNVUzRkU0WUQKTDZQUnFIbFAzSTFuSVQrVjdPSFhpTDFRb0dqSmxHT2QwM295SGZtS3d4dFNZRDlYRXZjV0YwZW9VUnNLbnloZwpEV2p5aG5XSnRnUGFYc3djaGJUV3RwTGFNdFlrTUxXRS9XbVZmR3ZrRXVHWkUyVHdqVUtuZ2xPcFBlTXFKVklkCkxDUmYwNkI2V0V6L0N3VXBUMDlLcGx0ZE4xdUVSdm9mZSt6S0FmRXpERlZNRkxRektMc3hDdFJzRFpYbmx5TU4KdHpTaVNjRUNnWUVBeDd1S3F1UW5EOFdjL1BLT1kzcDRKTnc1VTdzSzdJWll5dDRhNytvSXBRL29MZ3lpUWJ0WgpBa0pJbmQ4T0RMQTdQYy9ZS21WUE9UYzBkQ3VrdUNXV0pTVTE3R0d4OVNhelhKU0xxeE1wSnJML0hFampaTDhKCmI3SEVhaGlvQ2FvZHlsWURpQ2pRZ2Z1QThZLytHMEJheVBIdThCR0JPOTBlTUlRRTA3RTNDcEVDZ1lFQXpKam4KcFFWYVc1MDBoNVJhWXRITVBGZTd1YXNCMUVpQTBsVkQ4eUUyWFhlN3pUNFRjRjlURmdHbVJjdWtJYm1ZQTJhZQpGMVN6TlkrTUtWaWtuWjU1UXF0TGlUVlk2WC9hYXd1SWVvWTAvbURMZzhqTXRBY0RPSTcwb0d2WnZvaTNaK3k2CkswV3kydEpjNWNNbVJnMGZ5WStsNXZaOGtraXFnSExkWDJ0UzM1TUNnWUFEeW8rTFJ1Rm03ejFYbjlNTUdGc0gKZUJhdWZESnM0dS8waWRyQkN4UTI3ZUplWFdjSEVHTlVJNlgxT1RLdkV2bE01eEVYWE96d0RSZzF6RTVJSUk2RgpEZnZFRE9hdjNKZ3kvYTdaQkhnWGYvWlB0eUo1MnhaMnhFMFNKbjJxRVV5WGRxS0NoeVBPRTlRU3djVDFCM2V4CnNNWDBVS0MvWGljZ2pLRDYwN1pUd1FLQmdEd3dmM1U4cmVobHh4NWJ0bnQ3M09tanBjWnBXSkJyQS9yY3VyQzgKQkpKYXR4VWFQZjNCRFdCYis5NXNta3lSblBiaktYOFRtK1VWNWRZRURlbVF4WHVuaVFGRWdIT3crVUNray9IMwpxWDlzV25MYWo5NG1jZndoa2pYZmhKOVkrUnZKdUxzaU5ndko5eXBnenRHczZyMFJWVzBzOWxqU3A5WkI5SDR0CnhLT2hBb0dCQUlQWmZzc014aGprSHAwTGZBNHZWdjY5YlJYQWRkQWt3TytyMXRpWTZodU1YZmdXWk5TcHoxaVMKYmhLT2tLQ0FGYXZsRjA2dk9XVFBibGI1TE9wakdITW42UjF5MlZkekY0NmpkMXROQ3VPbm03R25ZWHV5RXRKUgo1UWxqazZ1bm9jckZLc0JyTkUrRkFYQ2dlVURnUW1KZE5jOUc3SHVZbXQ1bmhxZTJUVUthCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 50%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: 05569fab2fc7c23f785ed5062ff4eca4904bf16753b4bcdb8a51623f21726e8f
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: localhost
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        image: quay.io/cilium/operator-generic:v1.14.6@sha256:2f0bf8fb8362c7379f3bf95036b90ad5b67378ed05cd8eb0410c1afc13423848
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        readinessProbe:
          failureThreshold: 5
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 5
          timeoutSeconds: 3
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: 375a925bed4758ffc0fbd25a2ca46b1e775668d02925f0281af97cd647ada807
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.14.6@sha256:adeb90adae481bb952211483f511afee40825707953ed7ac118902d3bc8dd37f
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          tcpSocket:
            port: grpc
        securityContext:
          capabilities:
            drop:
            - ALL
          runAsGroup: 65532
          runAsNonRoot: true
          runAsUser: 65532
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      securityContext:
        fsGroup: 65532
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              - key: ca.crt
                path: hubble-server-ca.crt
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: 02d6b04b131029fae39270192dcff10fa3a64af9d1d4d0049f1efbc3f5526a34
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.12.1@sha256:9e5f81ee747866480ea1ac4630eb6975ff9227f9782b7c93919c081c33f38267
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.12.1@sha256:1f86f3400827a0451e6332262467f894eeb7caf0eb8779bd951e2caa9d027cbe
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: 05569fab2fc7c23f785ed5062ff4eca4904bf16753b4bcdb8a51623f21726e8f
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: KUBERNETES_SERVICE_HOST
          value: localhost
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        image: quay.io/cilium/cilium:v1.14.6@sha256:37a49f1abb333279a9b802ee8a21c61cde9dd9138b5ac55f77bdfca733ba852a
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                set -o errexit
                set -o pipefail
                set -o nounset

                # When running in AWS ENI mode, it's likely that 'aws-node' has
                # had a chance to install SNAT iptables rules. These can result
                # in dropped traffic, so we should attempt to remove them.
                # We do it using a 'postStart' hook since this may need to run
                # for nodes which might have already been init'ed but may still
                # have dangling rules. This is safe because there are no
                # dependencies on anything that is part of the startup script
                # itself, and can be safely run multiple times per node (e.g. in
                # case of a restart).
                if [[ "$(iptables-save | grep -E -c 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN')" != "0" ]];
                then
                    echo 'Deleting iptables rules created by the AWS CNI VPC plugin'
                    iptables-save | grep -E -v 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN' | iptables-restore
                fi
                echo 'Done!'
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: localhost
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        image: quay.io/cilium/cilium:v1.14.6@sha256:37a49f1abb333279a9b802ee8a21c61cde9dd9138b5ac55f77bdfca733ba852a
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.14.6@sha256:37a49f1abb333279a9b802ee8a21c61cde9dd9138b5ac55f77bdfca733ba852a
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: localhost
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        image: quay.io/cilium/cilium:v1.14.6@sha256:37a49f1abb333279a9b802ee8a21c61cde9dd9138b5ac55f77bdfca733ba852a
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.14.6@sha256:37a49f1abb333279a9b802ee8a21c61cde9dd9138b5ac55f77bdfca733ba852a
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        projected:
          defaultMode: 256
          sources:
          - secret:
              name: cilium-clustermesh
              optional: true
          - secret:
              items:
              - key: tls.key
                path: common-etcd-client.key
              - key: tls.crt
                path: common-etcd-client.crt
              - key: ca.crt
                path: common-etcd-client-ca.crt
              name: clustermesh-apiserver-remote-cert
              optional: true
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              - key: ca.crt
                path: client-ca.crt
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
