apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
  - list
  - delete
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  - ciliumcidrgroups
  - ciliuml2announcementpolicies
  - ciliumpodippools
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  - ciliuml2announcementpolicies/status
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  - ciliumcidrgroups.cilium.io
  - ciliuml2announcementpolicies.cilium.io
  - ciliumpodippools.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumpodippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumpodippools
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-algorithm: maglev
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: dsr
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "1"
  cluster-name: metal
  cni-exclusive: "false"
  cni-log-file: /var/run/cilium/cilium-cni.log
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  disable-cnp-status-updates: "false"
  egress-gateway-reconciliation-trigger-interval: 1s
  enable-auto-protect-node-port-range: "true"
  enable-bandwidth-manager: "true"
  enable-bbr: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "false"
  enable-bpf-masquerade: "true"
  enable-bpf-tproxy: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ipv4: "true"
  enable-ipv4-big-tcp: "false"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-networkpolicy: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-announcements: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "true"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  endpoint-status: policy
  external-envoy-proxy: "false"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA drop tcp flow port-distribution icmp http
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipam-cilium-node-update-rate: 15s
  ipv4-native-routing-cidr: 10.244.0.0/16
  k8s-client-burst: "10"
  k8s-client-qps: "5"
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  l2-announcements-lease-duration: 120s
  l2-announcements-renew-deadline: 60s
  l2-announcements-retry-period: 1s
  mesh-auth-enabled: "true"
  mesh-auth-gc-interval: 5m0s
  mesh-auth-queue-size: "1024"
  mesh-auth-rotated-identities-queue-size: "1024"
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  proxy-connect-timeout: "2"
  proxy-max-connection-duration-seconds: "0"
  proxy-max-requests-per-connection: "0"
  proxy-prometheus-port: "9964"
  remove-cilium-node-taints: "true"
  routing-mode: native
  set-cilium-is-up-condition: "true"
  set-cilium-node-taints: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-proxy-response-max-delay: 100ms
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
  write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: metal\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ngops: true\ngops-port: \"9893\"\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max:
    \nsort-buffer-drain-timeout: \ntls-hubble-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-hubble-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRTzducDQ4SkJadWpmeWNSS3ZpNzNKVEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13T1RFNU1UUXlOVEl5V2hjTk1qWXdPVEU0TVRReQpOVEl5V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ2p4WGpoYllxNUptUTNHanV0bkszOXo0Q1ZxTHZFUmFwbHI3SDZwenRSNU43MXM2OVUKZnEwU3NOUjhWOUJUenV2UXlPWDhNQnpwbklxUFMrVmRKb2NaSGV2NUVQeHpRWHMyRVNCVFVMNUp2STdtK3RlYQprbzBNbjhBeloyM1lUTEtvTEJHV0F5bHJMY3VCMk1mVFZkcThmaW1zNmx0c0Q5WHFWR0VDMFlsUGpOaUVhWUJtCjNpWWdzMnZrWXZ1ZE4rMXdaWmlNM1pXUUV2MEI0T1pBQVFIQzhsRnpuaWJ3VkwyWWg1RFBxYVdlMUN6N2t3VXAKTW1pZTNpOG9Cck9oVEIzK1doS294d3Rvci95ZmdsMUNmSzVwdTdYTjVDR25xVGozc2xXSEQ5VFhwa243SWZlUwphMDNnbEY4anFmQ0JtUmIvSTJqVzB0c0cvbkZjcm9ZM1hNK3RBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVU3WVdydVllSDBRdVFBMWJkc3NINjR6V3RZZG93RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFGQUFrTnhxMmhUSVU0WC90dDZERmFGTXdoMmJubnVyL2RhR0Q2RERId2V2eDFSNENQVHZ4N2x4ClhMVFVxTEYxVkV5S1ZCdXU1Tmc1T1lCYUFnOUtGUURHMGp3bmxNbmxkUXo2NGxUdWlpSkM0WlR1WGZuQ2xxTXoKYjFNN1YyVkdRZi9reE9yZ0xST1hDR1NlYkR2bjJJbmIyQmgzak92Y0grZzJsMitRTnJQVVpjdzd0bDFxWW5CRQpvMG5IYWpmMUVUT204QllHYlJoWHVSNTl5U1U5b0duR0YxcHdoSk9ZS0tkUFhDc1BlV1ZyWXVRVWdBQXJmLzZ2Ck94TUdjTXc1ZTYwYTQ4TUowa1JZWlBQeS9XNnFySnpDczJKeWRrVmdUekZTNnVDSFkyYXFMM1dSZVlUU1FrRWMKNmYxZUIyYStwTDNPdWJXQVkvKzM5L1FNR09WY3RrWT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBbzhWNDRXMkt1U1prTnhvN3JaeXQvYytBbGFpN3hFV3FaYSt4K3FjN1VlVGU5Yk92ClZINnRFckRVZkZmUVU4N3IwTWpsL0RBYzZaeUtqMHZsWFNhSEdSM3IrUkQ4YzBGN05oRWdVMUMrU2J5TzV2clgKbXBLTkRKL0FNMmR0MkV5eXFDd1JsZ01wYXkzTGdkakgwMVhhdkg0cHJPcGJiQS9WNmxSaEF0R0pUNHpZaEdtQQpadDRtSUxOcjVHTDduVGZ0Y0dXWWpOMlZrQkw5QWVEbVFBRUJ3dkpSYzU0bThGUzltSWVRejZtbG50UXMrNU1GCktUSm9udDR2S0Fhem9Vd2QvbG9TcU1jTGFLLzhuNEpkUW55dWFidTF6ZVFocDZrNDk3SlZody9VMTZaSit5SDMKa210TjRKUmZJNm53Z1prVy95Tm8xdExiQnY1eFhLNkdOMXpQclFJREFRQUJBb0lCQUFGaHhEQmF4VVhrcmduTQovZDNzS1lldnZZMEZ2SGZlZ3A2VENmUnNmdEtsRk1DTUFKbTg2K2J4ZVFtSGtDbDA0SWFGZTNOU1VKd2tCd05JCmg2bnVqa3RHOWx2R3FlcXJEY2dhQXVUUkZKbjRybGdDbTlraERYR2kwM05ibHhDeExQekFTbkd5bXlIZFpBODMKYmhBNWREd004SHNXQ3lseFJNUFNiSE1pbzM3NVZOR241UTZuM0xFUnFabE00N1lnaGo5QWx3V05xbTFHUFU5dQo4OXEvekxtWnR6WGw3T2Z2WUdDY2pvQXNkOGpJS1lwY1ZFa2pNVk5sOHBqSFJwTFJOaEZRNTJxQnhvTy9BYjF6Ck5Fc09ocDA4dnE3T1FwMUZJVU9nZkoyVzRIWVMya0FXMVgzQng2MnNxdkRXNWp1cXNaY3NReklGSVdnVlNBcmIKZG9tcE5WMENnWUVBeVpDWGtuTWxoRm5XeTJGV1Q1WVlHUjdlVWtxMFJtMUR4bDZuMktuSVR5RGhJOWkzSHVzQwpoWmZBOGJuUmdTcndEbTNnd1Z5YjByUkRRL2p4SW9GdmUyNDBSNUdkZGt4OGJNR0lkSWdjeGxWZEh6c2t6NDFyCnpad00zUW9kaDhMK1NDVWRxczdkMXVGcUgyVkhuT2lSNEM5NWgxSDFsK1BmMmY0MHBkTkt5S3NDZ1lFQXovLzkKSFdFQ2lqTUYrME5tOEJJZ0huMlZDUlhkWmRqbEtkTzFjcVM3Zkw5OWwxVHY2dXU2c2pqU0pJaXFWUEhWS0FodQoxMEh6YTRRcjBXTDl5MmthdUlva2gxQURuTDBQT25vQ1hGYnR0eDVqUVNPcnJ1Zm1KQzN1Z0ZLWGl5TGNvWkxhClhoVG5FbFNsa1B3SEdJc3NsNkFNeHdCUXpCQy9LM0U0NGk5cCtRY0NnWUFZVEJHNVdhQUFJRVJBSisrYmtHQS8KUnZWTnZpdVZBYjdWdnJ0RTV0SjZsMkFNVGlkazFyZHJHeXZxOTVkRmxzTnhPZFdKK1h2ZkhsT3RjZWkvWEJMdwpNZ3lqUSs1VFFFMFBYeFR2MXlpQXovRjF2azlscFlxRk1uWnFmcm1vajl6UEhZcEIrTVhORFVjWm1iL1VMa1RIClhYR3Myamhjb3Q5dEM3T1UrYTllR1FLQmdCYmhPTTJIZzBrQ2JkRUN6QXJ5WTNnWEpsSzJoZ0VUQjdvL0lJRjQKMzJyTWdac282Njh5dVBtcnlHbmVZcVl2Wjl3Y2VWelNVMTFyVDRxYjBnRVRFYTVrKzdtcXNvc0dQT3VZeWpPdwpHRHdCYXJlYW5lTUNmVTFUaEIyM2VCWUZBckgvUG1nRThwb1FsNW5JTDF1aXk0ZnVRaG1OemxWMExpTXdOQ3FsClBvbjNBb0dBYjFLeElEMDRJT3lBdE4zR1pLK1ZlckM1djBjS1I3bVU0TERPWFJkeENmWWxzMlhVR0hQa0F5YUgKT3RIMzhqVElLbE91M2NPbnVOY0JCMGxodTRhZm9LeHVrTktVeXVycFdFdE9hMktaU2tjVWVZRm5ETVhaV3VVYgpkMkgrQVRaNS9hSzIzQnFWU3RjVHNkbi9hZ1pxWXR5ek55K28zSFVOUTlOWlJpUmVsRzA9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRTzducDQ4SkJadWpmeWNSS3ZpNzNKVEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13T1RFNU1UUXlOVEl5V2hjTk1qWXdPVEU0TVRReQpOVEl5V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ2p4WGpoYllxNUptUTNHanV0bkszOXo0Q1ZxTHZFUmFwbHI3SDZwenRSNU43MXM2OVUKZnEwU3NOUjhWOUJUenV2UXlPWDhNQnpwbklxUFMrVmRKb2NaSGV2NUVQeHpRWHMyRVNCVFVMNUp2STdtK3RlYQprbzBNbjhBeloyM1lUTEtvTEJHV0F5bHJMY3VCMk1mVFZkcThmaW1zNmx0c0Q5WHFWR0VDMFlsUGpOaUVhWUJtCjNpWWdzMnZrWXZ1ZE4rMXdaWmlNM1pXUUV2MEI0T1pBQVFIQzhsRnpuaWJ3VkwyWWg1RFBxYVdlMUN6N2t3VXAKTW1pZTNpOG9Cck9oVEIzK1doS294d3Rvci95ZmdsMUNmSzVwdTdYTjVDR25xVGozc2xXSEQ5VFhwa243SWZlUwphMDNnbEY4anFmQ0JtUmIvSTJqVzB0c0cvbkZjcm9ZM1hNK3RBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVU3WVdydVllSDBRdVFBMWJkc3NINjR6V3RZZG93RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFGQUFrTnhxMmhUSVU0WC90dDZERmFGTXdoMmJubnVyL2RhR0Q2RERId2V2eDFSNENQVHZ4N2x4ClhMVFVxTEYxVkV5S1ZCdXU1Tmc1T1lCYUFnOUtGUURHMGp3bmxNbmxkUXo2NGxUdWlpSkM0WlR1WGZuQ2xxTXoKYjFNN1YyVkdRZi9reE9yZ0xST1hDR1NlYkR2bjJJbmIyQmgzak92Y0grZzJsMitRTnJQVVpjdzd0bDFxWW5CRQpvMG5IYWpmMUVUT204QllHYlJoWHVSNTl5U1U5b0duR0YxcHdoSk9ZS0tkUFhDc1BlV1ZyWXVRVWdBQXJmLzZ2Ck94TUdjTXc1ZTYwYTQ4TUowa1JZWlBQeS9XNnFySnpDczJKeWRrVmdUekZTNnVDSFkyYXFMM1dSZVlUU1FrRWMKNmYxZUIyYStwTDNPdWJXQVkvKzM5L1FNR09WY3RrWT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQUwzSGxGWHp5Skg1U2psa3hqZ0tsUUV3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURreE9URTBNalV5TWxvWERUSTJNRGt4T0RFMApNalV5TWxvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXhCOUNFMWtrc3RJL0Z5YzRKSlhiYmNvcTVYcTkKODlEdEtWK3Y3NE11ZzdXQ1FVZ0Nsd2tpVnRmTWFHQTNYMXMraU1heWx5akFtaytzbldDSnR0U0UrcGx3UG5Cbgp3R0phaHBud3JkU1pWaW1rcDRzSEJNZSt6Tk9sejdjY0t3UzV4aURvMUZjMGI3SzErRmI3eUMyb2x3QXN3dm45CnFrL2ZGL1p5czJVK3dQczVsK3k3SkNPUnM1VGlWQVRLZHJ3ajRCdXh1cGIvaXV2L1FPeWZ3YXBoVkxzSnpQY3IKcTE2ZHpvZUY5UThFQkRURUZZelFhQ2hocUlQcElYNzVKdFhZMUtXSFFmTFRyekszUEw1YTZ0Njd2VE44Tnd5dAo2YXBIUE5WVVJvZ3pVekxSbVM2akMwK2F0dURpWGRuZDNXRHE1eE9zYWRYZHZoYnFHaUJ0NTJOZkdRSURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCVHRoYXU1aDRmUkM1QURWdDJ5d2ZyagpOYTFoMmpBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBSEVHNWFoL1owT3FSSWZYQnJyUW9DWXJmUFRFZ2ZTY0Q4MnkvNk1UT1phUE85SUUKdUVrTmFpbTdGMjFBZ0IybVZ2SlRHOWk0ZEwzTGoyY0xWeUpqVWxiYkczV1c4WDY0bzA1Qnl1WmpXdS9vVTVpbQpvR2FudEo5MXBHU0ZGU2V6empRMlJSY1Vlb2J2MTVDTTNMRGduQzlvdVlrZmdqZWJzYmJXZjBySjNPVjhpN3g3Ci82R1Z5REdXTE9YaHA0NUhXQnF3RHQwbERiTDYrdksrNzhHTUdJSUE2a0VCbHdYcm5TV2hUdU9VNnBrQ0k3dFkKOXhCdXZhaGR4cytnZThubG40Q2xlWW0vOXBiRUJud0FHRUp4Q0c5dk1UQkYzYkVydlBrQ1JlaXowdnJ5UFhGTgo0QU4zMmkyMVlyMWVNRHVOSGM2dUpsT2NWaWhHTzZiK0NoM1RITWc9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcGdJQkFBS0NBUUVBeEI5Q0Uxa2tzdEkvRnljNEpKWGJiY29xNVhxOTg5RHRLVit2NzRNdWc3V0NRVWdDCmx3a2lWdGZNYUdBM1gxcytpTWF5bHlqQW1rK3NuV0NKdHRTRStwbHdQbkJud0dKYWhwbndyZFNaVmlta3A0c0gKQk1lK3pOT2x6N2NjS3dTNXhpRG8xRmMwYjdLMStGYjd5QzJvbHdBc3d2bjlxay9mRi9aeXMyVSt3UHM1bCt5NwpKQ09SczVUaVZBVEtkcndqNEJ1eHVwYi9pdXYvUU95ZndhcGhWTHNKelBjcnExNmR6b2VGOVE4RUJEVEVGWXpRCmFDaGhxSVBwSVg3NUp0WFkxS1dIUWZMVHJ6SzNQTDVhNnQ2N3ZUTjhOd3l0NmFwSFBOVlVSb2d6VXpMUm1TNmoKQzArYXR1RGlYZG5kM1dEcTV4T3NhZFhkdmhicUdpQnQ1Mk5mR1FJREFRQUJBb0lCQVFDMU5kU05vQTVDay9UcgpaYmVBUmw3TElNTmw2WFZkdEt1TlVQWjByWmJxNTJrRS9JNDRFNTZBOHovUktTWEFtOFE2Q0syMjhWYVV2ZzFXCkZIN3FTWTdkSmEwS1pEM1pDb2R1V3dxQTh6RUM1ZE5YWXlRSERMQ0UvUUgxM05EUUJydklEMXhSNW9seXM0TmoKaEt0N21JUnZrUi9LdjhYYitaUyt4VjNSMkRpVmdXeC9QZTdOdE8vVnlacmlycTcxbDVwOWNnYys5UTM1di9kVApJVVhsUnFJS1V1TUE2RjV0MUZ3cDBXaUJTLzVHTnh6aENKZFBpRDJWeW81WVZhUXd4aW9HT2lTZVpaTEFCR1l0CldaVk11Ti92aDBrOE1IaEVwbUR4UnE2MW9CWU9zbTJxVy9oamNyTnR6M1k3OGxlbjJNVTJTdFQxeHVUU1Roby8KZ0VYWUIyY0pBb0dCQU9xenc3U2g0NENrRnNKUkR0bUxIWFZQYStSaUtKK3dQSGEvRGNhZUdJckZDeDJ3NXk2dAppTkVGejNzcjcycVc5TGZUWWNxTnBZZElqano1M0QxcWpwekdvSjQvSzdxSFo5dXhRZldBMHlyTFF3SDh6MWo3CmFFc3dPRGJTczNHU09ZU1Faa0ZQWTJIYllmdHJQMFhqUUtKZ2tlS1RaZy8vaEltNmVmbGhMN0t2QW9HQkFOWHIKUXNlcnVYUE1TdWllc3pTSk5PZjlLRGdVbkRjRk4wVDh4Zys5bjFHVyt1eGZZc3NmSHNUVjJndyswN2srTjFXWApJUGZWanVuNWc5MHpOZ05xM0d5ZzY1TWNqcGhvckZtbDBRNVM0SVNGeUc0YTJLL1VHQ3pOeEhESEhLL214RTFDClg0SUxTYVlvQzcvdDI2aVphK1R0SjFoNzJ5cUUyaTBjYmIxekdKeTNBb0dCQUxVKzBWbEMwMTlhV0VFRE84Wi8KaWVZM3lRZjdUWWZVSHoxTVdTVVNuYjA4WVZNeWM3VTJTYnV4RXdMNWNOQU5kem9tUVJTY3drRndwSGN1TlFndwpxNlVpTnBNK0VWVGdrREcxOTB2UmlrRTM2cTAwUUNObE1xc3R0NXVPcHdpRGRXdUwzNHQ3OVRGeXEzM3UybFBzCkpOUEFZNmhuVDUvM0lMRURrb0lrclNMOUFvR0JBTCt3eExPMlAwWDBFRUFwVGY3SzRMenVEdWRLR0wzNUQ1RGoKVGZ4MitGZ2RpaGJjVnVRYnErL0lqazhnMFlzU3BIVXZLeHpLb3ZrcFhTK1BuMXdxbXdGQXBqaTZnMUV4b3hmbQpUZEtmRTQvTmJsQ3ovKzUzaVg1RW1UNVNQbk9sdjh4WHFNd1luMU9rV1BzUkF5QXU4dzgrTUY3TEJoY3cyMjFICkoxTjMydHM3QW9HQkFOc1ZxVHpZZWUybThlZXE4RHU1cTFnWStFZ1B6WmpObW5ma0Uwc092NENwayszZmFmY0EKR1UrS3hscjF6ZGlQTDVnV2o1TFprUDJMTCtEZTV4eXdDQTJjVUhEckY3NVgxS1c4VzE4Tk9VTHo1ZXlpVjVDTgppamdSR01DclVMTDNsZ3doZCtieHdQajRKMTRBeHdlREVpMmNYdEJoRHY0TDRVcUZZVGQ4Zk5wMAotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRTzducDQ4SkJadWpmeWNSS3ZpNzNKVEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13T1RFNU1UUXlOVEl5V2hjTk1qWXdPVEU0TVRReQpOVEl5V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ2p4WGpoYllxNUptUTNHanV0bkszOXo0Q1ZxTHZFUmFwbHI3SDZwenRSNU43MXM2OVUKZnEwU3NOUjhWOUJUenV2UXlPWDhNQnpwbklxUFMrVmRKb2NaSGV2NUVQeHpRWHMyRVNCVFVMNUp2STdtK3RlYQprbzBNbjhBeloyM1lUTEtvTEJHV0F5bHJMY3VCMk1mVFZkcThmaW1zNmx0c0Q5WHFWR0VDMFlsUGpOaUVhWUJtCjNpWWdzMnZrWXZ1ZE4rMXdaWmlNM1pXUUV2MEI0T1pBQVFIQzhsRnpuaWJ3VkwyWWg1RFBxYVdlMUN6N2t3VXAKTW1pZTNpOG9Cck9oVEIzK1doS294d3Rvci95ZmdsMUNmSzVwdTdYTjVDR25xVGozc2xXSEQ5VFhwa243SWZlUwphMDNnbEY4anFmQ0JtUmIvSTJqVzB0c0cvbkZjcm9ZM1hNK3RBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVU3WVdydVllSDBRdVFBMWJkc3NINjR6V3RZZG93RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFGQUFrTnhxMmhUSVU0WC90dDZERmFGTXdoMmJubnVyL2RhR0Q2RERId2V2eDFSNENQVHZ4N2x4ClhMVFVxTEYxVkV5S1ZCdXU1Tmc1T1lCYUFnOUtGUURHMGp3bmxNbmxkUXo2NGxUdWlpSkM0WlR1WGZuQ2xxTXoKYjFNN1YyVkdRZi9reE9yZ0xST1hDR1NlYkR2bjJJbmIyQmgzak92Y0grZzJsMitRTnJQVVpjdzd0bDFxWW5CRQpvMG5IYWpmMUVUT204QllHYlJoWHVSNTl5U1U5b0duR0YxcHdoSk9ZS0tkUFhDc1BlV1ZyWXVRVWdBQXJmLzZ2Ck94TUdjTXc1ZTYwYTQ4TUowa1JZWlBQeS9XNnFySnpDczJKeWRrVmdUekZTNnVDSFkyYXFMM1dSZVlUU1FrRWMKNmYxZUIyYStwTDNPdWJXQVkvKzM5L1FNR09WY3RrWT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVakNDQWpxZ0F3SUJBZ0lRWTV0YkIyckdCSE9Obk51NXM1YytnVEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13T1RFNU1UUXlOVEl5V2hjTk1qWXdPVEU0TVRReQpOVEl5V2pBb01TWXdKQVlEVlFRRERCMHFMbTFsZEdGc0xtaDFZbUpzWlMxbmNuQmpMbU5wYkdsMWJTNXBiekNDCkFTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTGw0aFl1MHJyRXFLQjdtUy8wbG90dkIKUzJzNDVkdU1ZVy8vN3JFRTdOc2tJRExIOUk5UEtNQzBkdzQyYzhhbFJpdjlyQ1dlN2l2MVJpU2VCV3JJSys3dQpkVG9zdk1udTFHMERDVjBjT1h3ckp3Y1ZQK3dVUnFJVjlVQzJBUXdLd1YvR0prc3pDSzJRekRjK0EvZlhCQmNSCnNnZmZybnVNbGxBQm5pdFN6U25kdUV4UTUxeVZlelg3UndzWDQ4KzdzdElmYWxyNGhCZmNsUmVoMlVpamFOZUMKRWpqVEdITytOcWJWTktETDNOZXhITmZKM0dlNUp4RzdmZExacyt1YnkxZm9CbUFxMm5FaUFCenpWak1XbmNpTgpINkY2OVJiR0Uvazd2NjhLU2xvalNtVzgwa2JPcnkyMWEzMll0d0VZdUVzcHNCMGg1aVZ5Vkh5ZGtJUTVkeTBDCkF3RUFBYU9CaXpDQmlEQU9CZ05WSFE4QkFmOEVCQU1DQmFBd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUcKQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXdId1lEVlIwakJCZ3dGb0FVN1lXcnVZZUgwUXVRQTFiZApzc0g2NHpXdFlkb3dLQVlEVlIwUkJDRXdINElkS2k1dFpYUmhiQzVvZFdKaWJHVXRaM0p3WXk1amFXeHBkVzB1CmFXOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSUtibTA1N2lsVXI5bGhFdkhyeko0VkJxa0NRWnFOS3VFZUUKYjJKVHhqT3I4by9FaFBOVHByV0U0NTZoQUw2aWNTYlkrWm5qd3lFekMxci93anIzcjJlSnNzMUNiT1BhNjd2agpaLy9nSmNLQkxQUHROQ1JUUXZVVE1hdFJ5dHYwd2tORGFocDdpTEdnQlFnemlDTmMzdk8wR1JZZ3hiRnVDM1o1ClJTcnJ2R1JTV0V3TE1nNlJSdDh3WG9mVitzaWdyQUUzdFRlMlJnc2kvSzY4ekRBMUhJQ0M4VkQyOFA5dENtL0YKTlVrWnI3dksyVTM3SzNnaFNYNzQyRXFmZmxZcHVsUmdkOGtnRkNTUGYycW1aZU1CcjZaSXNsTWNBSmJBeDQ1UQpaVGxaaGFkbGIxSTFtMk9keXNIQmY4aUpTRkZOQnNWZGJJejNNelRrVGNwcG96UXhyNkE9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBdVhpRmk3U3VzU29vSHVaTC9TV2kyOEZMYXpqbDI0eGhiLy91c1FUczJ5UWdNc2YwCmowOG93TFIzRGpaenhxVkdLLzJzSlo3dUsvVkdKSjRGYXNncjd1NTFPaXk4eWU3VWJRTUpYUnc1ZkNzbkJ4VS8KN0JSR29oWDFRTFlCREFyQlg4WW1Tek1JclpETU56NEQ5OWNFRnhHeUI5K3VlNHlXVUFHZUsxTE5LZDI0VEZEbgpYSlY3TmZ0SEN4Zmp6N3V5MGg5cVd2aUVGOXlWRjZIWlNLTm8xNElTT05NWWM3NDJwdFUwb012YzE3RWMxOG5jClo3a25FYnQ5MHRtejY1dkxWK2dHWUNyYWNTSUFIUE5XTXhhZHlJMGZvWHIxRnNZVCtUdS9yd3BLV2lOS1pielMKUnM2dkxiVnJmWmkzQVJpNFN5bXdIU0htSlhKVWZKMlFoRGwzTFFJREFRQUJBb0lCQVFDRm1YTlpOMFcvQ0lidAoreVl4cTdLc2FZaFNMQ0luQy9BRUpXOWl4QkY1cVlRb0VERHlLaXRJNUxYOTN1dDI1QWF3R1lLdmR0UkpoZHlJCjgrc2pDQjNkZHBlcTJCOEZ0cXY5K25uOFFDQ0llTzBjQlFxT20reGxSVHZzNlMzSDV0ZDBqZDkzdThNOGcxa1gKVWV5NTBvQjN2WjlvWEkvckgxSUhQNk1Yd2dWWGFjc2NIK2RrdnpmV1gweUdQck9rMVJPVUk1cG50RS9UbWJYQQpIalpIa1JSNkJNdkEwT0JNSmw0TXRvQmNTVVM1ZnZsM2psTWxDZytFVURYSzcvTkY3SFcyYTdycUZOcmxteWhXCmxQMUw0dGF0c3BEVlpnZ3YyYmdTdDFVOWFtQlIzMzFKcyt2eDBOK2NkTHlkRVcxZFo0TEt2TmZhNXJ0eFplZ0YKTGdOcGYwUmhBb0dCQU1Jbi8wRit4b3V2K1JlZlZFZDdJeEFVYm0yT3I1SkkrY2MzbmJRN2g0SlJsYXlxWWNNOQphY3dDdDVEMHRZVDhTWHVKdkRObmFDQmN5LzVpWm12U3E3Q1dCbkZubHhSV2NRcVFiL2JlUmhnNmFVRWR2V1FDCk9ieDRQU0MwRHd0a1hnOFEwekEvZXJhQlBkdW9ieVJ0MXlHTjU4V0VSeTQvQzhnbVUybVp1YW5iQW9HQkFQU00KU2xjd1ZFL1llN29yNHpucmVnRmxHOWl2a3B4TlFETUllSFk3VzdHMXVWajlDdnpRbXVheXdSN1I2SEJsZzduUwo3MTFTN3BFUDlCVytFdVU5Z3NMT01haWltQ3YvRVRGU0RFOVJoRWpuVStiTkJRZmZleW1xL2ZoejQvWTZXL0p4ClVsUGRuSC9IL2NnTDYvVE1xd3p4d0pSRWNKSUd3YS9rMnVxSHZ3V1hBb0dCQUpyVTJLczdWVXc2TmhPUGZOOVEKSkdNRFdCaklTOTBGa3lNNmgrb2QrdStDN2pCMjQyV1dTUk5uSzBwT3k1N1VyaWoxYXY4M1BJTnFYVWRzNHk2agpIMFhBTGowcmxnQ2krcHlwR0pDdkt3alJNL1M0cWJyaVIzYTBFRk5QSkJ3Nm13TzZzQi91ejRaUlJLb3lCUWZ4CkREbDI5OWk4cHlNTEpmTWtGU3JHYTVnM0FvR0JBSlVFNkVnNUt5ZDh3K2l1MWNoMXRlTWp1ZFJSS1FZV0RRa00KSUZ2cnovUjZ5SGR4dTBCVDNoQzIzUGZxOGJtTUlya1owTU1OeGxLZlpoM1p0YW43MGJMajgxN1B0ZXNaZzJDSwpudlcydHVXMkVXcVRoSDFIc2NXeWJSRDVqZkI5bjRvZGhBMlcvY2JnRjhYUGZmbXV2bzBreERXVmZ3TjlHb29VCjYxSC9abWdCQW9HQU5UbGl2M2NrVW8zdVk4TFIyZEpCckd5Q25GbUd4WjE4VHRESTd6NHd0Rjc4ODcwdXJYNzAKQXpzVERPU1ZwVmdSVFRMdUxZNnNSeXFSZ0M1ODFkY2p2TGlEdysvYjQ5RzR2MDFVY3FCZnE1aE5BU2VBV2dQVApLZ2dxcmdKMFdJU3RUTmk4MTZCcU85K3BveHNnSDZBblRPbzZNN1Jra2ZIUFBjTldaQjNkdjdNPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 50%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: f049617d1c36e5fd8f1f831f24d496a04fdf0698b734de92a256b33055409dfa
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.20.20
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/operator-generic:v1.14.2@sha256:52f70250dea22e506959439a7c4ea31b10fe8375db62f5c27ab746e3a2af866d
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        readinessProbe:
          failureThreshold: 5
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 5
          timeoutSeconds: 3
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: 375a925bed4758ffc0fbd25a2ca46b1e775668d02925f0281af97cd647ada807
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.14.2@sha256:a89030b31f333e8fb1c10d2473250399a1a537c27d022cd8becc1a65d1bef1d6
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          tcpSocket:
            port: grpc
        securityContext:
          capabilities:
            drop:
            - ALL
          runAsGroup: 65532
          runAsNonRoot: true
          runAsUser: 65532
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      securityContext:
        fsGroup: 65532
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              - key: ca.crt
                path: hubble-server-ca.crt
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: 02d6b04b131029fae39270192dcff10fa3a64af9d1d4d0049f1efbc3f5526a34
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.12.0@sha256:1c876cfa1d5e35bc91e1025c9314f922041592a88b03313c22c1f97a5d2ba88f
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.12.0@sha256:8a79a1aad4fc9c2aa2b3e4379af0af872a89fcec9d99e117188190671c66fc2e
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: f049617d1c36e5fd8f1f831f24d496a04fdf0698b734de92a256b33055409dfa
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.20.20
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.20.20
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.20.20
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        projected:
          defaultMode: 256
          sources:
          - secret:
              name: cilium-clustermesh
              optional: true
          - secret:
              items:
              - key: tls.key
                path: common-etcd-client.key
              - key: tls.crt
                path: common-etcd-client.crt
              - key: ca.crt
                path: common-etcd-client-ca.crt
              name: clustermesh-apiserver-remote-cert
              optional: true
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              - key: ca.crt
                path: client-ca.crt
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
