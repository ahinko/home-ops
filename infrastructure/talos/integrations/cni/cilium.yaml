apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  - ciliumcidrgroups
  - ciliuml2announcementpolicies
  - ciliumpodippools
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  - ciliuml2announcementpolicies/status
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  - ciliumcidrgroups.cilium.io
  - ciliuml2announcementpolicies.cilium.io
  - ciliumpodippools.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumpodippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumpodippools
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-algorithm: maglev
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: dsr
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "1"
  cluster-name: metal
  cni-exclusive: "false"
  cni-log-file: /var/run/cilium/cilium-cni.log
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  disable-cnp-status-updates: "false"
  egress-gateway-reconciliation-trigger-interval: 1s
  enable-auto-protect-node-port-range: "true"
  enable-bandwidth-manager: "true"
  enable-bbr: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "false"
  enable-bpf-masquerade: "true"
  enable-bpf-tproxy: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ipv4: "true"
  enable-ipv4-big-tcp: "false"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-networkpolicy: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "true"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  endpoint-status: policy
  external-envoy-proxy: "false"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA drop tcp flow port-distribution icmp http
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipam-cilium-node-update-rate: 15s
  ipv4-native-routing-cidr: 10.244.0.0/16
  k8s-client-burst: "10"
  k8s-client-qps: "5"
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  mesh-auth-enabled: "true"
  mesh-auth-gc-interval: 5m0s
  mesh-auth-queue-size: "1024"
  mesh-auth-rotated-identities-queue-size: "1024"
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  proxy-connect-timeout: "2"
  proxy-max-connection-duration-seconds: "0"
  proxy-max-requests-per-connection: "0"
  proxy-prometheus-port: "9964"
  remove-cilium-node-taints: "true"
  routing-mode: native
  set-cilium-is-up-condition: "true"
  set-cilium-node-taints: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-proxy-response-max-delay: 100ms
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
  write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: metal\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ngops: true\ngops-port: \"9893\"\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max:
    \nsort-buffer-drain-timeout: \ntls-hubble-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-hubble-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUk4NXI5UjlGL0pqazFiblg1elNzaVl3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRFeE5EQTRNREV3TVZvWERUSTJNVEV4TXpBNApNREV3TVZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF1dDU0VGhMbVBoME1YNUpFSjBNZUl4aUt5YjhHYXdZOXMxR0xBNFhkNGdVSWZ0ZDkKWWJCalVKTWR5YmwwKzJkY01DS0w5UVRQWDU4NEczdHYwSXg3MmNoNU5FaURGMzFPd09uZEt6ZnBwUEgvL0x2RQplbVNXK3Y3L0gzQ2dEWnNrbVJvdWlBaWJUWDEzV0FTRWk3STBRTzhTb3hxNjFidGFDdlZuNllPaDlyQlpKaGE2CkxsVWxaTFJqVXk2cWRqeWZTRlhTbjhuQTJNekhBNXpGekdoUnc3alVEbTNZcmEybXNYclRCaHpYRUNiV3JWV1QKc0R5OWRRS1g3SStTVnpXUEhhNU1ldVYvK1dPSmFLQ3pHSm1IcFdRakdOTjdFTjJWWWNLRWpXLzZaTlU3YW56RQo1eGxWUDVxb1RHL1RtTjRpRHRIR0VZUDl2ckp2TmwvbzNNSlZ5UUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGTkpKQ002VnQ4SDFyOHRIdTVPU1U0QzE4VHd5TUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQmo4eTlJMHZTdzZDeHI1TXEvZzBGUzVWeTZvalI0N2NUV2NGTGZpL3h0TFBxMk0rZ1I4ZmNoCldtWTBYN1lLdGRZNHNqOWs5Y1B5cDIyWFRzV3FNc0Y2VDZBbCtrZkhJU1VKZXM3TkdTa1BjdUNraUJuTStHOFIKUHVOb0FScnpYMmM5Zk5xYzZicXJ6YXU4S0NDdXBPY3p5Ujg3K3IzOVRYRDhMa0E2RDQwOWJXSm8ydS8vUXJpcQpvekxFQ1FVWXZZOGpsVHUvenAybDhSdDluWWx1STRVaWJKTk5hK0lxcjEvdXRCVktaZjB3UWRBNGZmMWJ2c1VhCmxWUFdaekpvVVI5YVQ1VUJEZWRnVUh5emdHMHJHWUdtaUswT2dyTGFXNmUzQ2Jnd0RvRTY0bFlCS09WYXBjb2wKZkdHVlQyWUlQNzVYYTloRWhMSU0ybXJ5SEtEWTlMWjgKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdXQ1NFRoTG1QaDBNWDVKRUowTWVJeGlLeWI4R2F3WTlzMUdMQTRYZDRnVUlmdGQ5ClliQmpVSk1keWJsMCsyZGNNQ0tMOVFUUFg1ODRHM3R2MEl4NzJjaDVORWlERjMxT3dPbmRLemZwcFBILy9MdkUKZW1TVyt2Ny9IM0NnRFpza21Sb3VpQWliVFgxM1dBU0VpN0kwUU84U294cTYxYnRhQ3ZWbjZZT2g5ckJaSmhhNgpMbFVsWkxSalV5NnFkanlmU0ZYU244bkEyTXpIQTV6RnpHaFJ3N2pVRG0zWXJhMm1zWHJUQmh6WEVDYldyVldUCnNEeTlkUUtYN0krU1Z6V1BIYTVNZXVWLytXT0phS0N6R0ptSHBXUWpHTk43RU4yVlljS0VqVy82Wk5VN2FuekUKNXhsVlA1cW9URy9UbU40aUR0SEdFWVA5dnJKdk5sL28zTUpWeVFJREFRQUJBb0lCQURjRVRzazF1VUhxVFgxSgowL1QzUnNVd2NaUXFRSnA3OE9oOWhuOFlCNWFHd3RTTlh5WEd4OGF1T2FQdGpTcURhTm5uSWV1V2FmT09MZmV4ClpOOHlyVGdXVk5EMjFGbXpFOStxT3VxQmdMR0dha2FmaFo0L1JWQktpUlJabFZYTUtuOUUvUlFoN0k5bzlCMGUKMzJNOXFUTEE4R3pDN3VVRVR1TlJFekhtQm1aWlRtWHY3cGFFSkdtM0Z3TFZBNHJwdXFGTXBiVWxwOXBKS3RsMApaNjQ1OHZVcUFLNy9vTCtHMmlWK3FmOWUrZHA3K2lwaGlqYnVSbEJXMzhmWDMzaCt3NjdWVkhXVE9qSzZYL2FHCnFwTVFDTlNaZ0pWYVN5WTdVeVJMdVlpMDh6ZnZMWW9MWEhhKzZ2QW9QZmdDOXhjU3puNXZqWkdSQ2gyNEVjM2YKMVNWTDNERUNnWUVBM3M4YkpSYndEZ2kyVTJ0emNVMVpxRW1MU3I3ZWJveFVOZytxTUtuOXBIVEJyMHVQZHIwYQpZazVoM1YvRlRLZ3NNZ2YzaTdQWERUSVJNRGlPZ3Z2QnN0NFliRERwZ0NWdTNaamgzdWdLRU5XSnJ4VDNFdzJECkp2SldFQ0hvdVBCWGJBcWR4bjFBK0JJdThxZWUwdTZ6Zk52dnYrdHZOdm5JZ3R2Z2JZckRVVlVDZ1lFQTFyVEgKNlRxbWxOdzdNS002M2VFR2N0eXRIY0RMR0NKSzc5WE16c0xKdzVpL1hrYlB5cDZuRVIyOGpvODBGaDgvZERvNApyTHpnMldWOVV4TmRGSnM2SzRxWnpLclh0eGhYMHh5WXhwdHYwblRwaGRsSlhmMHcxUTEwOHNhWFlIMWN2WjZQCjdNZC9KLy9pTndBWlZqQU5XeUtrZzlUN0lsdjJ3bXBEeWtaTFFxVUNnWUVBaUdKVngxcEhEeEFlS3VuMi9EL1EKeGNaZTBSNE1vYmFjUll0SkxnaWdEZTY2TUVjY1JoNXk3QUgydmI5RjBpcVBBd0VGY2lwZlZPQjB6UU9SbUhQcQptVWFCeEpnY0ZpalR1Q2xBK1dVbjVDNFIzVzREMzFIQ0dqRDBwV05jUlBnNVN4VWtocjljNlh5WDZFamFXMXRwCjJ0LzEzWkNMdnljZXFadFZ3VGZUWHhFQ2dZQlZaRWNSOG5xb1A4TG13RFM4WkMvZFpQa1JHVWx0Q3M2RS9xSmIKSlV0N21IZWI5a3ZVU1M4bTlvMjBvUzNWRW81NUdtTEtDTURnbGFXM2NiOFdYL3BOc08wa1lsb3kvdUtIR3h1RAorZlFLWHVjMWpjckpMOWJKRlhZS3pJTU9KQzNMV0pIaldTQ3dkdXV3ZGtDZGI3VVFKd0lKVUo2azlyQjRlQzBICitOY2I1UUtCZ0FrRG1CNGRXaWViUlN5Z25YcjZ2TWlDT2ZOR1N3UVFhU01OVld4V0crbENqdVRjdW1hdFRvTnkKNDB4azA2dWRlNy9xV2M4d1RrN3ROY1hwMXlmaDFiYmpzbUszUUVld2IrRkxudTFnOGRudjJPU1pkQ2gySVBaYwo3ckUwbXlZdkJUZm0yUll1N2wwaDlMVWFJTkswdXl4eHVrUStseVdHek9oM085SzNVeStYCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUk4NXI5UjlGL0pqazFiblg1elNzaVl3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRFeE5EQTRNREV3TVZvWERUSTJNVEV4TXpBNApNREV3TVZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF1dDU0VGhMbVBoME1YNUpFSjBNZUl4aUt5YjhHYXdZOXMxR0xBNFhkNGdVSWZ0ZDkKWWJCalVKTWR5YmwwKzJkY01DS0w5UVRQWDU4NEczdHYwSXg3MmNoNU5FaURGMzFPd09uZEt6ZnBwUEgvL0x2RQplbVNXK3Y3L0gzQ2dEWnNrbVJvdWlBaWJUWDEzV0FTRWk3STBRTzhTb3hxNjFidGFDdlZuNllPaDlyQlpKaGE2CkxsVWxaTFJqVXk2cWRqeWZTRlhTbjhuQTJNekhBNXpGekdoUnc3alVEbTNZcmEybXNYclRCaHpYRUNiV3JWV1QKc0R5OWRRS1g3SStTVnpXUEhhNU1ldVYvK1dPSmFLQ3pHSm1IcFdRakdOTjdFTjJWWWNLRWpXLzZaTlU3YW56RQo1eGxWUDVxb1RHL1RtTjRpRHRIR0VZUDl2ckp2TmwvbzNNSlZ5UUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGTkpKQ002VnQ4SDFyOHRIdTVPU1U0QzE4VHd5TUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQmo4eTlJMHZTdzZDeHI1TXEvZzBGUzVWeTZvalI0N2NUV2NGTGZpL3h0TFBxMk0rZ1I4ZmNoCldtWTBYN1lLdGRZNHNqOWs5Y1B5cDIyWFRzV3FNc0Y2VDZBbCtrZkhJU1VKZXM3TkdTa1BjdUNraUJuTStHOFIKUHVOb0FScnpYMmM5Zk5xYzZicXJ6YXU4S0NDdXBPY3p5Ujg3K3IzOVRYRDhMa0E2RDQwOWJXSm8ydS8vUXJpcQpvekxFQ1FVWXZZOGpsVHUvenAybDhSdDluWWx1STRVaWJKTk5hK0lxcjEvdXRCVktaZjB3UWRBNGZmMWJ2c1VhCmxWUFdaekpvVVI5YVQ1VUJEZWRnVUh5emdHMHJHWUdtaUswT2dyTGFXNmUzQ2Jnd0RvRTY0bFlCS09WYXBjb2wKZkdHVlQyWUlQNzVYYTloRWhMSU0ybXJ5SEtEWTlMWjgKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lRQkF6Q0FFeC9wWStoZDE5SjUramZkREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TVRFME1EZ3dNVEF4V2hjTk1qWXhNVEV6TURndwpNVEF4V2pBak1TRXdId1lEVlFRRERCZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFEWk1qTXJvcURFRCsvTFFBeFhWRjBkTzNJNWpWbm4KZFZNL2cxOTlSWkNteVF6bVpYQmROdlJZNUZjTXYwTmcxVDNEcTlkUEJLSzB6Z2pOYWVSNi9xbC9Yd0dlU2c4Nwp4VCtodUhpOU5RVVBLQ21xelJJb1FzMVFGY3Z4YWFWMGJOSFBZUm5WYys3Vm1hWjZHT1RMYnFXOEdmV1BJTU5vCm5NZ01oYVFXSllPQkQ4S05UdmFLdXF6Yy8vZkVQUGh0UE1qS1NtUzJRWm5scFRiQURJSWZmd01yZFNTUlVNUFcKNDZrbFcrdlFMZERkbjlpbVppaGlra3VLV3JhSHFXUlJ0R0dFYUI4VTBhdjVBTUxzanBCcmZza3VJMGlBWjZoWQpjMnNqU2hRWjJ0ZXczdU5XQ01sTmg2dHdLaVBsSHpIcjlPRFZaNUVUOFFTU2Z1WGJKM1g5Tnp3ekFnTUJBQUdqCmdZWXdnWU13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZOSkpDTTZWdDhIMXI4dEh1NU9TVTRDMQo4VHd5TUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bExYSmxiR0Y1TG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFtcDl2UzhuV2JDVitvOXk3OHpFeFlkUXg2ZS9qSU1IcWdJTGhOUitYRGc1NDV5Vk4KeXR3ZWdGMTFPOFVyNkFHMzZVSDFQVjhvKzNuRWNQTFJEcFVRNlBlV2hYb0tQeG1OMERZMk80U1FndUM5QkRzRwp3VDJHTUt6VGtibE40dXRtRW1ZUEhIN1hZTkZGd3RxZWZWUHhRRUN0TmZTNmhIb1ExSDVXaHpMVFNQVjJ6NEZ5ClZTMnlTaWI2OWdKTzRsM2RYeUhheFlxYnVqVWIzcWhEQ3o2SnlpN25uZ2szUlFXRjQ3SXoyOGdJNjV1TVk0dXoKL3FvUjkxTFJyVFc2bTU1VXRmRmhTRDRXWHVBN25FTDk1eGVrSWU2NVc2b2RuM2JobE1wLzlVVzd4WCsxbU81aQpuTEpMckkwdDlxS0R5QjF1aEpSazZKaUZrVHpPVldaeEN1NVJWZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBMlRJeks2S2d4QS92eTBBTVYxUmRIVHR5T1kxWjUzVlRQNE5mZlVXUXBza001bVZ3ClhUYjBXT1JYREw5RFlOVTl3NnZYVHdTaXRNNEl6V25rZXY2cGYxOEJua29QTzhVL29iaDR2VFVGRHlncHFzMFMKS0VMTlVCWEw4V21sZEd6UnoyRVoxWFB1MVptbWVoamt5MjZsdkJuMWp5RERhSnpJRElXa0ZpV0RnUS9DalU3MgppcnFzM1AvM3hEejRiVHpJeWtwa3RrR1o1YVUyd0F5Q0gzOERLM1Vra1ZERDF1T3BKVnZyMEMzUTNaL1lwbVlvCllwSkxpbHEyaDZsa1ViUmhoR2dmRk5HcitRREM3STZRYTM3SkxpTklnR2VvV0hOckkwb1VHZHJYc043alZnakoKVFllcmNDb2o1Ujh4Ni9UZzFXZVJFL0VFa243bDJ5ZDEvVGM4TXdJREFRQUJBb0lCQUZSNUdyL0EyNGdGcnJ5OQpKMCtieHk5RVhKT1hyenkvTytaNjROdW0vN0J1aDI3Z1N3aG1CRGpDYmp6TjhwV3B1Z0R0UjZzNjRWRXl4T2VuClpLNlZkelRMcmFSenAyTVd2ejNWc2xmY1ZDQmwvWGFwbFlORkgvY2kweFFNZzhZNVFJeklkalMzaDA5YUdBNXEKdWltSTJqckRXZWNWMWdwTTE5MU82TmVZTllJdStEa2ZEd3ZhbW1iVEJHdkFBNVh0T0QvbkJKYStMbmg3UDJXbApkQ25QQ1ZoUk5pNW9aNm9FbDlNQk9HbzRidmtDNVJEaXlrWktMYjN4SGFoYWJiWXlncjBQY0NqSFIwTzdlemFXCkQ3VStvbWxvODBMY3dyZWxDa1IvVjhkb3B3WXVnS1I0dlhZVUFVQ2NqVFllQjNFUEdrMEkwQmgyK2VqS3NERDkKUTBrcXZia0NnWUVBM2ZTUmFpRUVEQWYwd2ZITFJRa2RYYnFJSzdsUDZyTHN6Z1k2Y1ZGYjZVQngzVVBLMnBragpWOWY0Z1NkdzBaT0pEUVhiaHBCYktFSWhnWEtiT01SbmtVamxyaklPUWJzUThQK2I2VmlmSUtCdUlLUDAxY0ZKCmRqQWxkTkE3K0VRaDV5enRkSVVjTmdndExxTzZmdHJwTFpDUkV1NFByNE9ycHZIZGw5M3NXTWNDZ1lFQStvTEEKbEhmL3M5bXpKVnp1SmFDRU84dWUzVWhuVC9BK3M5emFuVmVLZDhnT1FFbEV6dDltU2U4ekVxU2h5WTFOUXNRUgpKMTZSeFQ1QWJESlB0Q0M4c3YxdHVBcks0eERTNEFRWWNZeHY5U0FIU1B5VDNyL0lUZVpyK3BYL1dNTTFOOVJkCmthM0Nick55Zjl3WGVxUWJvQzlOcUgwZ3RwejhVR0ZZTlFQRFRUVUNnWUJyeG9raHZweG5keW1MVDJ6RHZmUkwKZ2ZzRE9EMnRHbXJRYzhmSEpKbDd2clpMbWRLVHFRNjNaZ0NlUGxlUy9JL3RDZTRaL2xpMVNMOWFTeHRDU21SNwo4S2pPbURIQ0N5TGowMHFTMlZ5VGpETk5tQytYNS81UzdIZ1RxOVdpN1BxRmRaUnNJd0thM2dlS2dTaGExdE9wCk0yeXVnM2lNWW1Sa2NVZUhxZFJOR3dLQmdET0E0bHNqK0x4ZlM4ZW92WVdhNU5UdVhqRWNpN0VSc2JLRSs2VlIKdERSQU96M1lVbjg5eXVmMGQ4bWpjMmZlMXoyYzFmSUVMWEFpQmxpNFYwNnZWRnh3WWpodWI1d1RmMmR6TUJ0WQpSa1JkVzJJVUc4cTJIMVowdzBwM3dGSGRnSG1EL2VEUG1xUHIzT1NRdVhzTGRtcU9qeWJPNHdUb2JhK1E4L09pClhHcnBBb0dBQU1VS2g0U3c1TUlRNUNCcHpsVmJYMWJhcXNEUlYvaExjMkJsOGcxNFV0aTd4WEF5Q0RCZzZBbGUKLzJKQys2K1JJdS9CRmlGYWZ1S21EM3RsYUxZaElSZ1FnTk5XTzVsQk11em9ZZ0FaSVpDUGd6QzdLQmtISVh3aApiNmg2L2NFT3k5UnNJR3NYUUJUTnZPc1QzblZyZzVVV0NNL1QrdS9rWDZ3OTdBa3NPN3c9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUk4NXI5UjlGL0pqazFiblg1elNzaVl3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRFeE5EQTRNREV3TVZvWERUSTJNVEV4TXpBNApNREV3TVZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF1dDU0VGhMbVBoME1YNUpFSjBNZUl4aUt5YjhHYXdZOXMxR0xBNFhkNGdVSWZ0ZDkKWWJCalVKTWR5YmwwKzJkY01DS0w5UVRQWDU4NEczdHYwSXg3MmNoNU5FaURGMzFPd09uZEt6ZnBwUEgvL0x2RQplbVNXK3Y3L0gzQ2dEWnNrbVJvdWlBaWJUWDEzV0FTRWk3STBRTzhTb3hxNjFidGFDdlZuNllPaDlyQlpKaGE2CkxsVWxaTFJqVXk2cWRqeWZTRlhTbjhuQTJNekhBNXpGekdoUnc3alVEbTNZcmEybXNYclRCaHpYRUNiV3JWV1QKc0R5OWRRS1g3SStTVnpXUEhhNU1ldVYvK1dPSmFLQ3pHSm1IcFdRakdOTjdFTjJWWWNLRWpXLzZaTlU3YW56RQo1eGxWUDVxb1RHL1RtTjRpRHRIR0VZUDl2ckp2TmwvbzNNSlZ5UUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGTkpKQ002VnQ4SDFyOHRIdTVPU1U0QzE4VHd5TUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQmo4eTlJMHZTdzZDeHI1TXEvZzBGUzVWeTZvalI0N2NUV2NGTGZpL3h0TFBxMk0rZ1I4ZmNoCldtWTBYN1lLdGRZNHNqOWs5Y1B5cDIyWFRzV3FNc0Y2VDZBbCtrZkhJU1VKZXM3TkdTa1BjdUNraUJuTStHOFIKUHVOb0FScnpYMmM5Zk5xYzZicXJ6YXU4S0NDdXBPY3p5Ujg3K3IzOVRYRDhMa0E2RDQwOWJXSm8ydS8vUXJpcQpvekxFQ1FVWXZZOGpsVHUvenAybDhSdDluWWx1STRVaWJKTk5hK0lxcjEvdXRCVktaZjB3UWRBNGZmMWJ2c1VhCmxWUFdaekpvVVI5YVQ1VUJEZWRnVUh5emdHMHJHWUdtaUswT2dyTGFXNmUzQ2Jnd0RvRTY0bFlCS09WYXBjb2wKZkdHVlQyWUlQNzVYYTloRWhMSU0ybXJ5SEtEWTlMWjgKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVakNDQWpxZ0F3SUJBZ0lRZmp5blVpc2dqVTV5YnZTR0oyYkg2REFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TVRFME1EZ3dNVEF4V2hjTk1qWXhNVEV6TURndwpNVEF4V2pBb01TWXdKQVlEVlFRRERCMHFMbTFsZEdGc0xtaDFZbUpzWlMxbmNuQmpMbU5wYkdsMWJTNXBiekNDCkFTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTGJGTWlQQ29oVGh4MkVZYnU5bENMT1IKT2htSUlHU1g0cTV4RVFpNUgyT01FV3dtbkg1NE9vRzRuQUh0SGFNZmJzRjhYc2h2dkJYcVR2Q3hkcUN1U293UApzeUdGZDFPd2J5czFHb3NscElrYzFxSFJSbUdWODhrRTZJTlYzQTlwZ2M0SmNURTN6SHU2andZb0FNS1JwdzVECjgrMTdmbWtha3BuUUg1RFZaWTd3Q0JPYnRMN3RuWFhCMjdEYzN1K2tJYXRGTTc5YkFOR3N4T3ppSmszN2xPR3UKY05WNE9OMy9YaktDZmVUcVl0dXAxQWYzakxscDBDc1BpcXdZOFoyWjBPb0JHT2VKU0lpUUQwR2RFaFlDdEovbAp0eGpZanUzb0ZUV1orZEQ0eWU1dWpTbTBsZmNNS1FiRzRRZTlGNkw2SDFkbGtjRURrN05jZDB5WFZkOEZwZk1DCkF3RUFBYU9CaXpDQmlEQU9CZ05WSFE4QkFmOEVCQU1DQmFBd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUcKQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXdId1lEVlIwakJCZ3dGb0FVMGtrSXpwVzN3Zld2eTBlNwprNUpUZ0xYeFBESXdLQVlEVlIwUkJDRXdINElkS2k1dFpYUmhiQzVvZFdKaWJHVXRaM0p3WXk1amFXeHBkVzB1CmFXOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBQjZnYmkwWUdubHgrVkFweloyQ09aaklMYWZNYktHRFhWcGEKVk5yK3RpbnYreDhpb2Fub1dtWU1xUGNBUWZNdlZFWUozTjAxRXF6QWkrK3JVSE9uaXZ1ZzZpRXpVSnJwWEZxQgpML2J4SnYxU1R5aXRIWkhuVzVKTjFmVDRFQ2tJblFZV2hQQVppL2liSytvZ0NsVGt3bTNUM09maW01K2EvOGdnCkorQWd2T3lNMWR2eUp6dHZJbkJ5UzBzUDkyUFlZbVlZZ2QrT3pROGFNYnJka09wTnllMXNlclBWVmdocDJrUnQKV29ZMG1uZVArL0VDMlNHUnpKakFBT2NUMktVSmE2eFVDZjVmNmZPSVp4elFDTVJ4V0ZYVXdoVGJpVWhKbDI5SgovcS9xL0xXajJWc0Q0OUpCb2prSER4bFU5WVpIZmpwUkZENStJL3BOZXNPcHVNb09Kbkk9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBdHNVeUk4S2lGT0hIWVJodTcyVUlzNUU2R1lnZ1pKZmlybkVSQ0xrZlk0d1JiQ2FjCmZuZzZnYmljQWUwZG94OXV3WHhleUcrOEZlcE84TEYyb0s1S2pBK3pJWVYzVTdCdkt6VWFpeVdraVJ6V29kRkcKWVpYenlRVG9nMVhjRDJtQnpnbHhNVGZNZTdxUEJpZ0F3cEduRGtQejdYdCthUnFTbWRBZmtOVmxqdkFJRTV1MAp2dTJkZGNIYnNOemU3NlFocTBVenYxc0EwYXpFN09JbVRmdVU0YTV3MVhnNDNmOWVNb0o5NU9waTI2blVCL2VNCnVXblFLdytLckJqeG5ablE2Z0VZNTRsSWlKQVBRWjBTRmdLMG4rVzNHTmlPN2VnVk5abjUwUGpKN202TktiU1YKOXd3cEJzYmhCNzBYb3ZvZlYyV1J3UU9UczF4M1RKZFYzd1dsOHdJREFRQUJBb0lCQUFqRDVrYXV3K1VxZXN4ZQpScHUyaGJkTzVMRnF4TnJ1S2RIaDNFWkYwb3FNb2gxRXNNYWo3M0pmTHlRc2dmcGJ2STBNOE9LOThSQS8vMjh0Cm81bkxJZ29iaXFTMTZPWWJsUWxHYjdKeXFMUm1yS2h3QitjUU1QUFlCMnFkQ0lPNHRKL3o5Zmk5UzFJM3ZUbzMKV3VuNTRFQWY1Q2ZrZjBoOUhNREJxWEhodWhBandBSHdlUUFuY0dackhHRG5aNlZKR29JVWYrVmlaUEtvdGh5VApFdzFWZmxjbi9COTU4UmZoNGdvRDFqWHlLT2ZaSHV2bGl4YlZzYTlhZkpNVkp6bk5ibmRnd1loaU1yODVDOE4rCk1xN243K2tWaDBMN3BkbnNvd21IeWc2aExWaW1scEFsd2xrSVRDcVJuVDNtQjJobWtGZ2h4bFBWQjV1U2dCRFgKYmQrbDJna0NnWUVBeVIxZjJoK0VRbUMyd3hjRjE0Z2VaMXFQU2dDK284aHZNdkZFSW05RVR3TTk4OGpkN3c2Sgpibk1QUk1IR0srNHVlZURvWGt1dFBzejFSREtxMzdxbDJIbGQ5K1pNMVVnaWtweDZzQ21BSnpnYmUyL2syRjE2CjdTZnl2Sm1xZFZWVUhOb2djMWVWd3ZTcGNGWlJJOXJxTGp1R0pRdTJlUWFDZm9mcWVxMTBUY2NDZ1lFQTZLWTEKd0FUSU0yMWdPcENTZStlQWlDQm8zTTJuMGloMnhIV0l0SlhGNFErd3o5amdTaWFJbUZ3Q080UmRGRTkzRGRUcgpRei9RNDJKOHJIeGlaYlA3Mld3NGhGME5tdmNqaDlka2dabUs0Qk9JdCttTXhkU1BuUURNVlRXOVJMcXFsdHZQCmpkUkZneFFCbVhWSjlscFpyUFdVeHp0cjhEQzJLYkUvNWZCWkZuVUNnWUJacGt4NkVSNkY4RkxIK0ZWVVZJc3AKQzBkZ2Q2Q0RwZTlieUF6VlJNQXdjSU9IVG4wUCtXenQzVUJySiszTTIybkFUcStHaVRsN0N5WXg5bHdSUzBSdQprUHVBYkJySDRGWDVBT1AzN3lmL1U1VjhtczVxWEpGVmNqOVVMek83QmdSdXNCVlRGVEhmSyt6ejlLWkswMlVjCm90QVRaM3M1eTlzVHlFYVAxUTVKTlFLQmdCV3pVellxL0FXWUFTN1ZSMlNaVG1ya0l3UGRodmJhWVdHbjJPMkgKUHVMa1ZNaStZUVZwbkxvaGN1L2NROVplSnl1NkhZdXpTeWU2aXdpSHZhSGc3Ty8xNFR1dmRsSnJGUHhad2YwNAp0alI2ZmZreHByalpQK0FVTC9zT3ZTM0kvNXA4dkZwdFgySi9uanFUTHlmMGU0TGZrVllZRzlSV3B0Y3l1bFFYClhDZjFBb0dBREZLMG9LSFk3N0xoZCtnVVdhRllmaWNvRVdGQXFKMDB0azh3QnlCQS8wNG5ZaExSeWVaK3BWYWgKKy9GaWx4WUlQdU15UUxIaTFsaWJmbzVoRzBjSXJDT0c3UUV0YUErdnVEODUzR2dUak1sUTdQMldIR3RFNE9nNApKV1o5TFZ5K3VBTUZXdHVjVmJMSnc3Q3lMMG9JSk1oR3Y0aDRsTDdOR3BTTEkrTHNqVmc9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 50%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: fd497284b1c8d966be7dea373aed7f8d1e3192fa9b94bebce9a05e46176f6006
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: localhost
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        image: quay.io/cilium/operator-generic:v1.14.4@sha256:f0f05e4ba3bb1fe0e4b91144fa4fea637701aba02e6c00b23bd03b4a7e1dfd55
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        readinessProbe:
          failureThreshold: 5
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 5
          timeoutSeconds: 3
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: 375a925bed4758ffc0fbd25a2ca46b1e775668d02925f0281af97cd647ada807
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.14.4@sha256:ca81622fd9f04c1316bf4144bde5dbce613758810f6022f6c706b14c9c0815db
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          tcpSocket:
            port: grpc
        securityContext:
          capabilities:
            drop:
            - ALL
          runAsGroup: 65532
          runAsNonRoot: true
          runAsUser: 65532
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      securityContext:
        fsGroup: 65532
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              - key: ca.crt
                path: hubble-server-ca.crt
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: 02d6b04b131029fae39270192dcff10fa3a64af9d1d4d0049f1efbc3f5526a34
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.12.1@sha256:9e5f81ee747866480ea1ac4630eb6975ff9227f9782b7c93919c081c33f38267
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.12.1@sha256:1f86f3400827a0451e6332262467f894eeb7caf0eb8779bd951e2caa9d027cbe
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: fd497284b1c8d966be7dea373aed7f8d1e3192fa9b94bebce9a05e46176f6006
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: KUBERNETES_SERVICE_HOST
          value: localhost
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        image: quay.io/cilium/cilium:v1.14.4@sha256:4981767b787c69126e190e33aee93d5a076639083c21f0e7c29596a519c64a2e
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                set -o errexit
                set -o pipefail
                set -o nounset

                # When running in AWS ENI mode, it's likely that 'aws-node' has
                # had a chance to install SNAT iptables rules. These can result
                # in dropped traffic, so we should attempt to remove them.
                # We do it using a 'postStart' hook since this may need to run
                # for nodes which might have already been init'ed but may still
                # have dangling rules. This is safe because there are no
                # dependencies on anything that is part of the startup script
                # itself, and can be safely run multiple times per node (e.g. in
                # case of a restart).
                if [[ "$(iptables-save | grep -c 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN')" != "0" ]];
                then
                    echo 'Deleting iptables rules created by the AWS CNI VPC plugin'
                    iptables-save | grep -v 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN' | iptables-restore
                fi
                echo 'Done!'
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: localhost
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        image: quay.io/cilium/cilium:v1.14.4@sha256:4981767b787c69126e190e33aee93d5a076639083c21f0e7c29596a519c64a2e
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.14.4@sha256:4981767b787c69126e190e33aee93d5a076639083c21f0e7c29596a519c64a2e
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: localhost
        - name: KUBERNETES_SERVICE_PORT
          value: "7445"
        image: quay.io/cilium/cilium:v1.14.4@sha256:4981767b787c69126e190e33aee93d5a076639083c21f0e7c29596a519c64a2e
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.14.4@sha256:4981767b787c69126e190e33aee93d5a076639083c21f0e7c29596a519c64a2e
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        projected:
          defaultMode: 256
          sources:
          - secret:
              name: cilium-clustermesh
              optional: true
          - secret:
              items:
              - key: tls.key
                path: common-etcd-client.key
              - key: tls.crt
                path: common-etcd-client.crt
              - key: ca.crt
                path: common-etcd-client-ca.crt
              name: clustermesh-apiserver-remote-cert
              optional: true
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              - key: ca.crt
                path: client-ca.crt
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
