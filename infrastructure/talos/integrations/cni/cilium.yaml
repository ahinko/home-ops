apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  - ciliumcidrgroups
  - ciliuml2announcementpolicies
  - ciliumpodippools
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  - ciliuml2announcementpolicies/status
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  - ciliumcidrgroups.cilium.io
  - ciliuml2announcementpolicies.cilium.io
  - ciliumpodippools.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumpodippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumpodippools
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-algorithm: maglev
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: dsr
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "1"
  cluster-name: metal
  cni-exclusive: "false"
  cni-log-file: /var/run/cilium/cilium-cni.log
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  disable-cnp-status-updates: "false"
  egress-gateway-reconciliation-trigger-interval: 1s
  enable-auto-protect-node-port-range: "true"
  enable-bandwidth-manager: "true"
  enable-bbr: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "false"
  enable-bpf-masquerade: "true"
  enable-bpf-tproxy: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ipv4: "true"
  enable-ipv4-big-tcp: "false"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-networkpolicy: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "true"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  endpoint-status: policy
  external-envoy-proxy: "false"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA drop tcp flow port-distribution icmp http
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipam-cilium-node-update-rate: 15s
  ipv4-native-routing-cidr: 10.244.0.0/16
  k8s-client-burst: "10"
  k8s-client-qps: "5"
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  mesh-auth-enabled: "true"
  mesh-auth-gc-interval: 5m0s
  mesh-auth-queue-size: "1024"
  mesh-auth-rotated-identities-queue-size: "1024"
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  proxy-connect-timeout: "2"
  proxy-max-connection-duration-seconds: "0"
  proxy-max-requests-per-connection: "0"
  proxy-prometheus-port: "9964"
  remove-cilium-node-taints: "true"
  routing-mode: native
  set-cilium-is-up-condition: "true"
  set-cilium-node-taints: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-proxy-response-max-delay: 100ms
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
  write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: metal\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ngops: true\ngops-port: \"9893\"\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max:
    \nsort-buffer-drain-timeout: \ntls-hubble-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-hubble-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUw5UDVXSTd4QUVMeTVaQXN5czJYSmN3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURreU5URTVNamN3TWxvWERUSTJNRGt5TkRFNQpNamN3TWxvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUE1bHEzWUdCeFBwWEhvbkZuRDRMdk1EbTIramx3Q0lNUkRtSnJTa1Fub1Q0VGluQm8KNjhJMGJOaFNYR2ptTGtldTN6WDMzZnFOemNuaHhmL1hEVUJpMTJDbXJuNi9WU2hJM0RGdWpJWVJyMG1OZlJiTgpubVkrRldpcEpvc3hxdFN6eHF1RGpXb1dRV1kzcjlJWEdHUlkyTkpzRzltYmdMNGFyMFB4Y0x5QUErMGZCTXZCCkhkQ1ZJYzd5S2xwSjdNUDZSbEpTTm5KcnB2Y0p6dG5hWGF3L0N3eUdqQ3Q4cmNFaUVNZDV1N1hFOEZzcVF3ODYKeGlqL2l6MWhqUlpPczkvdjE0MUpRZS9HbXpab1hYWkR6Nk1YQmV4N2JXejVYUGJBZy9OOVhoRG5MeGc3N0krbgpsbUp1Z1hJNTZ4SUVVNHhFWHNiTERRbm9xcTRZOEN0cjdyMTFyd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGUHZKWGxpc2cwYmZ5eU5RaGNBaXl3dDBud0krTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQmcvRWlzeWZQL1FvZHJVVndmc2tjd0g1dzBHaDN0K1ZyZTl3NHNvSjFkRDZZZ2p2NUNoVmpVCjJEaEFtaVdXdmhSWnNnZTllMnhGNWJVZGVtaTJndFlESWNNa2pNbytlbkpxMVNzWjhQRTJhbmFZaTZWZHMxcnAKM3N3M050VGpFTlJrTlZpelJCT3FpQk8zcElQOEs2V09YMUx0R2lyUUFuRUhEUEV5YXlDRjFQdXBzUEJmRVFsYwpNY0xqMGFtcE9JeXVLUTdSc1ErcElyaGFaaFFKUWt3MjNQcGpsdnowM1FzRHBJeHpSV3pWMDlQK01vVHpkL1F2Cks1dVRvMUhoN2lZdks2RGN4eFVKY1h0MWtwM2hEdWFSMk5KZ01vbG41ajZBYUFId3FGcTFyazdIb2xKVmpxbDgKQ0VZQW0rRWNKMUl1L3pOdmVsVFd3eGt0ckhuOVlHNDkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBNWxxM1lHQnhQcFhIb25GbkQ0THZNRG0yK2psd0NJTVJEbUpyU2tRbm9UNFRpbkJvCjY4STBiTmhTWEdqbUxrZXUzelgzM2ZxTnpjbmh4Zi9YRFVCaTEyQ21ybjYvVlNoSTNERnVqSVlScjBtTmZSYk4Kbm1ZK0ZXaXBKb3N4cXRTenhxdURqV29XUVdZM3I5SVhHR1JZMk5Kc0c5bWJnTDRhcjBQeGNMeUFBKzBmQk12QgpIZENWSWM3eUtscEo3TVA2UmxKU05uSnJwdmNKenRuYVhhdy9Dd3lHakN0OHJjRWlFTWQ1dTdYRThGc3FRdzg2Cnhpai9pejFoalJaT3M5L3YxNDFKUWUvR216Wm9YWFpEejZNWEJleDdiV3o1WFBiQWcvTjlYaERuTHhnNzdJK24KbG1KdWdYSTU2eElFVTR4RVhzYkxEUW5vcXE0WThDdHI3cjExcndJREFRQUJBb0lCQVFDWUg3Q2FaUlprVG1YWQpVU3ZPZ3BtVEw0bzNGVmQzUjVjcitMTUNDS0JqUzZ0NzhXQlkwWmZ0aWE1YWVLd0tSQ3lvRyt2bEhHSXBWUGxVCjJQQWNRRGtHSXozd1hxUGNpUTRVM0ZBMVhSU3d2ZEpDbVp5UXp0U1JMdDBHSjBaVm1zSmVvVVh2VGZBRW9JeUcKQUNoZ1kyU0pTKzA1Tnl3S2lZRDEzZGpFcXJlZjN1ZHlkem5ZZHZxdG0xQThqZzN2bWhDN1ZVZEd5NHJvZ3pRawpEQ3Fsblg5RkhIZ25IWXpUTkJWM2YzTGNaTktBK3dQVktSeDloMjJ2VjRJRkxvWTFuRkY0amd0SUpHRUk3MTBPCkFoT2FsYXJxMnFsL2RzTWZkZG8veVE2bnlXWVZBN1I3bm9ndHZxUFJNZUJQN3MzNkVkeXdqeFN0aHk0Vk1OWFIKUlMvY0lueUJBb0dCQVB4ZWRHQVordlV4d2hFRGlNVWRLQjNoaEhtbmV6bkFadFdOZ2xJUGQ5cVNlOFlHRlIrRgp1Qi83T3llaHBZbmlCd1EvM1NhM3ZIdjJFYjJoZG9YOHpvaHRWNFBMSEoxRnVpWUgrcjhjNnh3TldPaTU4Ny9oCkY5SlprVytBNEp4NVlvMVZqa0xhbFRpeFU2b1dkN1R4aXI2TWp6ODRzSWNXVk5ld3ZtUmtXMDFEQW9HQkFPbXIKTFFDVVArTHFWaVN0Z0NsTzhrUE5pTmFZSVFQNStiODg1RjBqcWMrdW9UeEtobjBMbzFCZ2tYYnc4Y05sc2hqYgpScHI1RzFkd3pGU0prd2p6YnQydmZUT1doL2FmZmJ6b1hrUGp5Q0dVc3Q5OURlTlRONlVTQ29XVC9CQTdZS08xCjF4RXdXM0c0aFR5aHNTRnVIdXBvbjg3YXR1azRMUloxVGl1WEpWa2xBb0dCQUpFcHY2VDdyTGZYSERydkhuL0wKU3FVTmNFY055RHFxNmp2U1B2RDJ4c2twMHhwUHExekxiT0t3ZnhGSDBORmord2M5dVBhcFh6aXFqUC9YM1RZcQorWjNOenpZVzRlbXhEdWNMVmZjU0trYWpnczJ6RUhzQmZkTllBK2p3WjhKNXErK0NFK2R1bGNEYmR6Vng0UDlxCnBKVUFndkVwcVppNmhxamVtRlZreUlQREFvR0FSU3FGRktITlUxYTREdjFJYlhIUDVtQUZmRGZsdGU2ZGpZengKcjl3cG5LNzlUUUptVXNkS0hUV29lVU9TM0pyU24rYndQRmsyVGFpMjR1TWlJY2trN1B2UUhLQVhPTm8yOXQ3MQpZRFVoZlVjdHQxZWw3NzhuUG5aYnBQU0w3U1lXVWY4MlhRRXFZRHdWUEVCRVZUZnFjTXB0VzJhRU0vNkw0aFR4CkFaZ28xdjBDZ1lCQlRzQlpIMCtEWm16VjJQc1RkMUlJOHQwOFdvWW1sZWVWZGFHYzRzL3d3Tk4zTGUyWjQzMnYKSFluekRFalRBZEVUaHg1WTJNSXBHaWZ6bkl3eDVLRTY0R0NWUGJacFVBd05XZ0VqcWNlSSt1RnY4a0h0ZFp3YwpyOEQ0UEJuNGZianVGNXNybERzVHo3Z2oxcFNuNDliQnFab3M3R0N4bFA5QVY5Um9yemF3YWc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUw5UDVXSTd4QUVMeTVaQXN5czJYSmN3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURreU5URTVNamN3TWxvWERUSTJNRGt5TkRFNQpNamN3TWxvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUE1bHEzWUdCeFBwWEhvbkZuRDRMdk1EbTIramx3Q0lNUkRtSnJTa1Fub1Q0VGluQm8KNjhJMGJOaFNYR2ptTGtldTN6WDMzZnFOemNuaHhmL1hEVUJpMTJDbXJuNi9WU2hJM0RGdWpJWVJyMG1OZlJiTgpubVkrRldpcEpvc3hxdFN6eHF1RGpXb1dRV1kzcjlJWEdHUlkyTkpzRzltYmdMNGFyMFB4Y0x5QUErMGZCTXZCCkhkQ1ZJYzd5S2xwSjdNUDZSbEpTTm5KcnB2Y0p6dG5hWGF3L0N3eUdqQ3Q4cmNFaUVNZDV1N1hFOEZzcVF3ODYKeGlqL2l6MWhqUlpPczkvdjE0MUpRZS9HbXpab1hYWkR6Nk1YQmV4N2JXejVYUGJBZy9OOVhoRG5MeGc3N0krbgpsbUp1Z1hJNTZ4SUVVNHhFWHNiTERRbm9xcTRZOEN0cjdyMTFyd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGUHZKWGxpc2cwYmZ5eU5RaGNBaXl3dDBud0krTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQmcvRWlzeWZQL1FvZHJVVndmc2tjd0g1dzBHaDN0K1ZyZTl3NHNvSjFkRDZZZ2p2NUNoVmpVCjJEaEFtaVdXdmhSWnNnZTllMnhGNWJVZGVtaTJndFlESWNNa2pNbytlbkpxMVNzWjhQRTJhbmFZaTZWZHMxcnAKM3N3M050VGpFTlJrTlZpelJCT3FpQk8zcElQOEs2V09YMUx0R2lyUUFuRUhEUEV5YXlDRjFQdXBzUEJmRVFsYwpNY0xqMGFtcE9JeXVLUTdSc1ErcElyaGFaaFFKUWt3MjNQcGpsdnowM1FzRHBJeHpSV3pWMDlQK01vVHpkL1F2Cks1dVRvMUhoN2lZdks2RGN4eFVKY1h0MWtwM2hEdWFSMk5KZ01vbG41ajZBYUFId3FGcTFyazdIb2xKVmpxbDgKQ0VZQW0rRWNKMUl1L3pOdmVsVFd3eGt0ckhuOVlHNDkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQUllcnRDWGZMRHJ1cTFSY1RvdTI3QUF3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURreU5URTVNamN3TWxvWERUSTJNRGt5TkRFNQpNamN3TWxvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTBIamZEdDZ1dnlUaGJwNUg4WUpHMW5OOXNzRmwKeklXanJFa2Q5Sis1UncxRjlxYysyRzZEME9VblZKU01hY1JyL1V5QWNXMXVLZWJQMUhDemVJMjMzTlM2SCthTApmUGRFelJzM1dEK291VEo2V0dsQXRBVEl6cy9WOTdwdWdxY1V3M1FoSXJYTXFiQjBuVWZBdTVENStuVk95ZHpuCmlkZkZVUWRhdVQvbWRCWVk4UTBFMHlnTzg4SDJ6ei9ZTk5KdnBYbXFkbXdrSUJidDQ4M1dGSDVCTjdBUCt1TWcKR3FxZVIrY1ZsWkdxaEc1bVdPWXVZY0RnRGZuMWt2Wm1lSnI2dm9LTG4rRUVadTkwL3JxM2RVOWo0YkErUDZIZApIZUptQ3lwZVFINzJpUGd0ZVFWeXhPaWpJZXF1YlFDeUxBWnF1ajQyNUdNMXhpbklFQllGRUJHRElRSURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCVDd5VjVZcklORzM4c2pVSVhBSXNzTApkSjhDUGpBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBSlZndDg0NDQ5VUFYamVuUGNUR1oxaEFqUUF5T1JPMTljZXVqSUowRHY5dzB3d0cKRjNRRWZGMXEzQ1d3alMwT1Vyc01Sck9JSldZTjJaR21SekVxR1c4VGNxWm96QjRLVVBBdUVOSk1BSUhxY3huNApxejhISXZDK0RHSUhpQTlOY1JNMjVZSHlVQU9oMVFDTXJMZnNyQmt3RXg5L1dBSURlZnIraStvd0cvc3JrMzNVCkp4dnNCNFV2ZU9lTk1JYzBBNVByUFFHN1pVS1VuSytuRFFrTFcxM012VE9PV1BRZituU0xCb2xIRXl5Qll2ZUMKL0c0MXU3ampYU0N5emdxcDRqa2lPVEgzakZ1UXJibi9kelNWS1VPOW1uQnF4aDB0ayt4QUlXMERPNGRiaW5EQwpFNmgzYi9ZTGJXajc2SFdsci9ESzdSai9ESkN6czJiRDVFMk9Ga3M9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBMEhqZkR0NnV2eVRoYnA1SDhZSkcxbk45c3NGbHpJV2pyRWtkOUorNVJ3MUY5cWMrCjJHNkQwT1VuVkpTTWFjUnIvVXlBY1cxdUtlYlAxSEN6ZUkyMzNOUzZIK2FMZlBkRXpSczNXRCtvdVRKNldHbEEKdEFUSXpzL1Y5N3B1Z3FjVXczUWhJclhNcWJCMG5VZkF1NUQ1K25WT3lkem5pZGZGVVFkYXVUL21kQllZOFEwRQoweWdPODhIMnp6L1lOTkp2cFhtcWRtd2tJQmJ0NDgzV0ZINUJON0FQK3VNZ0dxcWVSK2NWbFpHcWhHNW1XT1l1ClljRGdEZm4xa3ZabWVKcjZ2b0tMbitFRVp1OTAvcnEzZFU5ajRiQStQNkhkSGVKbUN5cGVRSDcyaVBndGVRVnkKeE9pakllcXViUUN5TEFacXVqNDI1R00xeGluSUVCWUZFQkdESVFJREFRQUJBb0lCQVFESVZDNTgrbzNQemwvMgp6WkR5eWk3S0t3Y1NQSGhYZGVCWFVaZkFsN0FTVC9YNFZMUzJoRlNVNjIvRS9rNkQ0S1dwTGRlTHFBMmhwRlA0Cm9DaEdZMkRZaTI4ajhvWCtHeHI1UWZzSUNYeFlJdUtnak53SllVT2FRT3dxOXZMMUNCdVN5c2lBczFTdGg0dzQKQzFod3Bac2lDNUlmdHZDa2JEMEhaVnJRQTFDd0lVSzhvT3F1cVhZS3hsOWV4M0tGMVVPUk5OR2Q4NUFkdnRobgpRTzhWY2ZxVWptSlFlOCtLTHpYOWszMTBuUURkblkwM0hQeGE4QXZEa3loNnA0MmZPMnlwMEZlRVo2OXoxbVhRCkZLWExZSDUwNkRHYklkZGs1SkNhZU54Y01SeHI0ODZVc3U1RE5HT3RXd3RzQmsxYXhhVlEwbmljUEFUbGpudEQKaEJUdXFGcXhBb0dCQU5hdlRmL24wa2hkM25XVm54TEkxcDNJUjdlUDF2NUMyLzlkZ0VDemw5d0NmRlhsRXhiVAppWFR5bUlkcGZubmsxaVlERTVJS1g0VWVVdWs5V0pFZnBJbi9qeEs2ZVdiOHFPVUg2eTJFVk9uY0ZOakdCNHl0ClhPNldsd3FmR0tRUll6K2hCa2lydUdzV1o4UCtDd3NKTGxEMUc3RzJ0VTY1Qmh5NXRMRGY3MjVOQW9HQkFQaVgKZm9MRzF0REdneUxFUXIwcUtoa1FjdVpWTG9iOTBMRm5PcUNOTlQxUTU2OFU5RlVTeTBKNTJWcVZTR1lGd2hHRApIQnFEc2UybW12QTYzbTNGMWJCM3JnaHhrb3FvUHk2SmNNNFpRdHU0MHpvTUsvd01NcXBFZGVhb0NDVjJ1UjRlCkNjdGxabUtkUzNWTCswa1BZSUV3ZElSbEpMSm1RQTA2N1pHWExkb2xBb0dBWjQzUDFleUFaaC9CT242ZGFIWXYKNzVPMzVEY2h3U3VHNnJxekxvSnljZEZSSUMySzg2dTkxZ2RldzVLRFMxQ3lhMHQ0bVMwZnZocE9hK3NIV1prbAp5TnJZckhQK00wc1VQTVdCRDBlUm5leG1zZGx6c3N1ODAra1htaXY3dXNnWVU0emNkeGs5cjRuekszclM0TlBnCjMzUWJrN0ZKNjFzY002YndIWkVtOE5FQ2dZQnRadTZNUzBtNnM4SitpSFQrbnhITDJndFhCdUhsRXNySGFEREsKKzVvVWxBaUNhdXhrakZMYnZKaEZYekZ2aE5VMXM4ZW9lNURRaitQY0dXeE9UeVNOOXYybVJhVkNWRzBKNC82NwpGUzd4VjlQTjFoRjlhVGphNmlvaENvNGJQcmFWWkk3VzdwY3lpeHJzVWpZU255dlBieTI0SG5NWitCbjBPSnpZCjEvbWI2UUtCZ0hMTkh0UFNZWnpYdDdPZTZIeWxiZHljSXNzekVERFdnL3JVUndzNXgwQzltVzJyUGZGUEhObWoKZFlPYk5IYkthL3V5T01YQjJsN3Z6ZXlsdnJjb0xCWXlISTFmMDFZN2sxUXpzZlh5SmRWMGZsQ21wTmtjcmFPVAppL1FPL2FaN1h4bXlJc01nYThvWlY4dkFwVmlaM2xDWGlpK1MycFQvSW8xdFNyNUVSZHd6Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUw5UDVXSTd4QUVMeTVaQXN5czJYSmN3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURreU5URTVNamN3TWxvWERUSTJNRGt5TkRFNQpNamN3TWxvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUE1bHEzWUdCeFBwWEhvbkZuRDRMdk1EbTIramx3Q0lNUkRtSnJTa1Fub1Q0VGluQm8KNjhJMGJOaFNYR2ptTGtldTN6WDMzZnFOemNuaHhmL1hEVUJpMTJDbXJuNi9WU2hJM0RGdWpJWVJyMG1OZlJiTgpubVkrRldpcEpvc3hxdFN6eHF1RGpXb1dRV1kzcjlJWEdHUlkyTkpzRzltYmdMNGFyMFB4Y0x5QUErMGZCTXZCCkhkQ1ZJYzd5S2xwSjdNUDZSbEpTTm5KcnB2Y0p6dG5hWGF3L0N3eUdqQ3Q4cmNFaUVNZDV1N1hFOEZzcVF3ODYKeGlqL2l6MWhqUlpPczkvdjE0MUpRZS9HbXpab1hYWkR6Nk1YQmV4N2JXejVYUGJBZy9OOVhoRG5MeGc3N0krbgpsbUp1Z1hJNTZ4SUVVNHhFWHNiTERRbm9xcTRZOEN0cjdyMTFyd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGUHZKWGxpc2cwYmZ5eU5RaGNBaXl3dDBud0krTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQmcvRWlzeWZQL1FvZHJVVndmc2tjd0g1dzBHaDN0K1ZyZTl3NHNvSjFkRDZZZ2p2NUNoVmpVCjJEaEFtaVdXdmhSWnNnZTllMnhGNWJVZGVtaTJndFlESWNNa2pNbytlbkpxMVNzWjhQRTJhbmFZaTZWZHMxcnAKM3N3M050VGpFTlJrTlZpelJCT3FpQk8zcElQOEs2V09YMUx0R2lyUUFuRUhEUEV5YXlDRjFQdXBzUEJmRVFsYwpNY0xqMGFtcE9JeXVLUTdSc1ErcElyaGFaaFFKUWt3MjNQcGpsdnowM1FzRHBJeHpSV3pWMDlQK01vVHpkL1F2Cks1dVRvMUhoN2lZdks2RGN4eFVKY1h0MWtwM2hEdWFSMk5KZ01vbG41ajZBYUFId3FGcTFyazdIb2xKVmpxbDgKQ0VZQW0rRWNKMUl1L3pOdmVsVFd3eGt0ckhuOVlHNDkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVakNDQWpxZ0F3SUJBZ0lRYzR6NkRYNmxCakhxbjJkaHJ1VW5oekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13T1RJMU1Ua3lOekF5V2hjTk1qWXdPVEkwTVRreQpOekF5V2pBb01TWXdKQVlEVlFRRERCMHFMbTFsZEdGc0xtaDFZbUpzWlMxbmNuQmpMbU5wYkdsMWJTNXBiekNDCkFTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTFhQTXFnYnY0QlN2U1VnMlU4SXJEeVQKYU50OXpGSE05SWgwT2lRS1JUUE4vdDNCNEFkUGM3cU1Db1VYZVVoT1JmeFdmdERFVmQrTWJYVFlLNS9tTGJtLwpQZEloRmpIMXVVTlNGTlNvZ3UzZ2JKMklFTTFVMVhLOXVKbUU0YTRZdXNua2NwMWc3ck41VVREWE92K0dYZVlmCk0wcU04dG5ucVZZTjdiOTBtSXE4T0sxOUhwYnhoZVBtWEhvSEZnQ3ZORnNxYjhhbitRQldsbnVJVFk0N25pbU4KZys5UFFsTE04MEhRVUFyODlyRFVCVFMwQUxSQTF3dnJibmRxNVQ3QzVxNHFybTRML1c5ZDJMMWpXbEtaOFMxVgpLYjltOTZDSzVua2JCMUUxK3k5Z2hsV0VrZU1tRzV1a0RwbVV3dmUrcFR6UmJTWFZseWpNYU83alEvdnZGK0VDCkF3RUFBYU9CaXpDQmlEQU9CZ05WSFE4QkFmOEVCQU1DQmFBd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUcKQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXdId1lEVlIwakJCZ3dGb0FVKzhsZVdLeURSdC9MSTFDRgp3Q0xMQzNTZkFqNHdLQVlEVlIwUkJDRXdINElkS2k1dFpYUmhiQzVvZFdKaWJHVXRaM0p3WXk1amFXeHBkVzB1CmFXOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSWdWeVZmWW13NlRmYnZmRVY3NHVGcERBU2dPaUFQZi9EREsKVkxOUk5HQUx6OTJ6eVBkZ0Z1WDh0cFJHZGlicEYxRUd2eUN3bGFXQXZoeDBkRUxhY3FaSVZVTDVOZ2hTNjVEQgphMTVHb2hVSkI4VmdNelpabkpKVVBDVk1IaEJNamFFUDZVYmp0Y2t3QTZaNk4ySEx0ZFdkamxjRWk2ZTZWL2J1CjhaZG9hcW5PZTdTTVd4TGV6QW1aQ09XSnlQVGJsSE5sMUJiWnR4ZmtUNklySGtRSzN0ODdqSkhLNzZoWGZqWksKU0dhZ3VNQlhLVlN3aXhvcGFVTGduTnV4TkYzLzBjZWJGTnBnVndoaW9IcnJCQzMrazlBM1hRblJxREUvZit0VwpoaHpUbFg1OTJUNjNVK09odEM0MmthTFV5UjFRMDlFRkJmd0Z5aGkxZGE5QTZuS2ZXdnc9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdGM4eXFCdS9nRks5SlNEWlR3aXNQSk5vMjMzTVVjejBpSFE2SkFwRk04MyszY0hnCkIwOXp1b3dLaFJkNVNFNUYvRlorME1SVjM0eHRkTmdybitZdHViODkwaUVXTWZXNVExSVUxS2lDN2VCc25ZZ1EKelZUVmNyMjRtWVRocmhpNnllUnluV0R1czNsUk1OYzYvNFpkNWg4elNvenkyZWVwVmczdHYzU1lpcnc0clgwZQpsdkdGNCtaY2VnY1dBSzgwV3lwdnhxZjVBRmFXZTRoTmpqdWVLWTJENzA5Q1VzenpRZEJRQ3Z6MnNOUUZOTFFBCnRFRFhDK3R1ZDJybFBzTG1yaXF1Ymd2OWIxM1l2V05hVXBueExWVXB2MmIzb0lybWVSc0hVVFg3TDJDR1ZZU1IKNHlZYm02UU9tWlRDOTc2bFBORnRKZFdYS014bzd1TkQrKzhYNFFJREFRQUJBb0lCQUVVbXRPN0o5eEc0NXFaYgpreXdEY1hkczNnSTJHK08xSUFGU3E5YVBiWGpoemlITW53aEl5UXpZUFJ3WUxKSTY2MVdxRkh3VllWQXcybVVKCjM3WG0xOWVCak9NQ29LMko5OWhLUFJBUnRCTUVQR3ZDbUJseFBlcHhqT2dmYWJOTlJxYUoxS3BWZHhVZWZLb20KQXhPenFMMWhlcUhOY0lVL0h1SlRVKzF4VEovZmlWSjNPT2U0QyswdTVoaUdyZEQ5OW5QZUtPUVo5Ryt3cEdwNAo0eFZSRVhMUXA3R3BHVHl1VTBVWTI3ZDVWSkJIN0wzM09NNTdnSmFiMjg1VTNDTCtRSlpaYS9GSGNTWXFwTDVJCmpFejJhdHd0Y1ozcGdKZVNaOVp5QVpRWktaemlWWGoyNG1CajlCdE9tdXVyblZYNy9Rd0hiV09FWXJUVEFEQXMKUkd0S1ZHMENnWUVBMVFtVll3dC9ld2FDWEJOUTdKb3BoKzZURjd1TDhNZXVRV0NocVZPVE53YTI1VTJNaktwMworSXdhVDNuajFabkxNSUVQZW03MFJNZVY3T3dNWFhpZnJkMGlKNTkrY3FvQmtyR1FhMG9pcXVueTVJTmpoUE85CnVDdDU5YUFnVnFUZXZnSVFrbnQ5MGlRTFFzUW5ka3pFdG5FM1BSckNBa0JNanNpVTA0VFdGSHNDZ1lFQTJubHAKcE9abG9USE5MSFNCcUhReG0rNnN3bUx1QkYwTEZtcDRQbVBNUDE4MFRCbFlzWTFEeHhGbWJBZE9KSDVMVVl0NgpKSURoNVhGQ3Q4eCtvOHJCVFVucE5keWpyZ1dFNmJMKzcwT1gxNmpieHR2SzcvS1RhSEZ6MXY5bitFMTJjM2puCmN3cks4VzRlNFB5dkFiMytOR3o0UWFnb2hSY2JqaWtEVkMwTEhGTUNnWUIxdUFQNlpRSWVneXhKb01yWTB4OGIKNC9NWDdDU1orbDBKOTFHZGRYY2xzdW9ocjBaNC9FR3E4QkFoMXFMVkIxVEdDcXI0NXBMSDV0bXJ2NHZkb3FmcAp0UVlJaXhPZVhON2Rwb3k5SEl3bmtYc01WcVlKYzM1a1pISFNEcGVRQ1M2a0pCUHdQWmo3STd1dE95THJOZVNGClErNVlMNDhCRzNLeWU1ZnhnYmVpUFFLQmdRQ0p5MkFWY0hlVEpxMElwK2NMVDFYbXlxL04zc1hPbkx5Y2c4U1oKWFNwNm9kcURVTTAvRnlFemtrYnVSZUZFWlIrdUsvRjZ5b3N2d3JMWTZETExyZHNqbTBWckFtRitKZDhCNHpLbAp5QlVpSVUrVTZoWGlKelpQL3BhWWVQaWpoSC84THJxVU5hOXdmUXNlem1DM0VaVWVqY2c2NlF1OWZhaVVqa3VhCk1OcThId0tCZ0RwM3ZGVjRlRGlQd0R4RkJxNWEweHBwRWNLMkczbTlpU3ZYWW9WejFIRDIwWDI4WjVHWHlvMlEKSENXRzZCZFZab1R2TDB6N01iQlNsMXpKTEVjWk0veFN0YU83SHRqQTRTNWF4TmZKLzZJM2pxMHh0WnNTRURjWQpUb0wwOGVCS3VyRitxTTl6TldNWVBrU0EyV3lTdjFpV3V1V0d2ajBNVmc1Y1l6K0lYRWpXCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 50%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: fd497284b1c8d966be7dea373aed7f8d1e3192fa9b94bebce9a05e46176f6006
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.20.20
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/operator-generic:v1.14.2@sha256:52f70250dea22e506959439a7c4ea31b10fe8375db62f5c27ab746e3a2af866d
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        readinessProbe:
          failureThreshold: 5
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 5
          timeoutSeconds: 3
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: 375a925bed4758ffc0fbd25a2ca46b1e775668d02925f0281af97cd647ada807
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.14.2@sha256:a89030b31f333e8fb1c10d2473250399a1a537c27d022cd8becc1a65d1bef1d6
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          tcpSocket:
            port: grpc
        securityContext:
          capabilities:
            drop:
            - ALL
          runAsGroup: 65532
          runAsNonRoot: true
          runAsUser: 65532
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      securityContext:
        fsGroup: 65532
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              - key: ca.crt
                path: hubble-server-ca.crt
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: 02d6b04b131029fae39270192dcff10fa3a64af9d1d4d0049f1efbc3f5526a34
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.12.0@sha256:1c876cfa1d5e35bc91e1025c9314f922041592a88b03313c22c1f97a5d2ba88f
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.12.0@sha256:8a79a1aad4fc9c2aa2b3e4379af0af872a89fcec9d99e117188190671c66fc2e
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: fd497284b1c8d966be7dea373aed7f8d1e3192fa9b94bebce9a05e46176f6006
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.20.20
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.20.20
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.20.20
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        projected:
          defaultMode: 256
          sources:
          - secret:
              name: cilium-clustermesh
              optional: true
          - secret:
              items:
              - key: tls.key
                path: common-etcd-client.key
              - key: tls.crt
                path: common-etcd-client.crt
              - key: ca.crt
                path: common-etcd-client-ca.crt
              name: clustermesh-apiserver-remote-cert
              optional: true
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              - key: ca.crt
                path: client-ca.crt
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
