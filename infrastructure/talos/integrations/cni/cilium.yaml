apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
  - list
  - delete
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  - ciliumcidrgroups
  - ciliuml2announcementpolicies
  - ciliumpodippools
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  - ciliuml2announcementpolicies/status
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  - ciliumcidrgroups.cilium.io
  - ciliuml2announcementpolicies.cilium.io
  - ciliumpodippools.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumpodippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumpodippools
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-algorithm: maglev
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: dsr
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "1"
  cluster-name: metal
  cni-exclusive: "false"
  cni-log-file: /var/run/cilium/cilium-cni.log
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  disable-cnp-status-updates: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bandwidth-manager: "true"
  enable-bbr: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "true"
  enable-bpf-masquerade: "true"
  enable-bpf-tproxy: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ipv4: "true"
  enable-ipv4-big-tcp: "false"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-networkpolicy: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-announcements: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "true"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  endpoint-status: policy
  external-envoy-proxy: "false"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA drop tcp flow port-distribution icmp http
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipam-cilium-node-update-rate: 15s
  ipv4-native-routing-cidr: 10.244.0.0/16
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  l2-announcements-lease-duration: 120s
  l2-announcements-renew-deadline: 60s
  l2-announcements-retry-period: 1s
  mesh-auth-enabled: "true"
  mesh-auth-expired-gc-interval: 15m0s
  mesh-auth-queue-size: "1024"
  mesh-auth-rotated-identities-queue-size: "1024"
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  proxy-connect-timeout: "2"
  proxy-max-connection-duration-seconds: "0"
  proxy-max-requests-per-connection: "0"
  proxy-prometheus-port: "9964"
  remove-cilium-node-taints: "true"
  routing-mode: native
  set-cilium-is-up-condition: "true"
  set-cilium-node-taints: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-proxy-response-max-delay: 100ms
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
  write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: metal\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ngops: true\ngops-port: \"9893\"\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max:
    \nsort-buffer-drain-timeout: \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUlHcmxEcU5iOCs3YnpWbTJpa1lKcnd3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURjeE9URXpOVGN4TlZvWERUSTJNRGN4T0RFegpOVGN4TlZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF2bHNUc1kxSktvK0tEcjdZbDhEbXlIZkJ6T1BVYWpER1lUWXQ3ZktZbmt4c3d4WlYKQWFjZllIUU11YTJrTTUxVDJIUHpiK0MwTUFnT2FpU1ZwM1drOVU5WVhBcUE1M2hzdytMb1c0YlRkc1M1OG5pego1eVpQcGpqTXFZaGVDU1JxT0hNOVV1Q3RCMEh1WWZhbEM2dUdCQlZQM0JGN1hxWmNzbENhbXkyWXJ6YnJjMzR2CmdmRW5UZG5QT1pyaENmd3FzODlMLy8rbGJyNTVTOUI0ckVBT01Td3BwRFRldm1qbnBWSHJ4RUxrdEZJbUVrUFQKMG1BWjFLd3drLzdIZVpuWDVVODBGSDBWN2J5NlFHT2pSNHVuTHl1RXBzWUl3OWI0UWpnYndnYWV2RWJTWG90MQpaMS8xdVBMZ0F3RTMxT1dtN2JoOHRkNnRnMlpRVFdsT2g3REpCUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGSUUrWWh2MDkrNDF3S3FGVGQzbkJ4Zk4vUkFFTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ2UzSGkxWUVndjhhdHJNbjhadWQ4TTdnTU9qSnRUSC9Eak82MTNOU2tSL25nQ28yNDBDMlV4Cm5NZGlpbDg3RVBNZ1BNS0xFaCtObjRYREVvTzZuZ2lHVGlpRWhsMGZ4UkhxN2tMcmlqVVpWcVgyeHQ3aGN0d3AKbFZreDMvN29FQzF3R3A2NGFPRVJkU3R3QWU0VVlaZmF0aGhzTzduekhrQ1Uvd2NqNjFYK1U0cFRpWVViQm5iZwpZZG9MaEhLaVRHNTV1Y05kSlR5d0tuaWpTa3Y0RWRFd3B2SURIb01xVElaNmpsNTlJZldoYTFZaWpmZUpoVzlGCnhnU1ZuU2MxN0RzWTlRWlFjOVJaUWplSTNrZEZ2RTRDNTZuSWVEb2N4eUZDVzhGZVdlK2pld1Z6ZmdlNmpGNGIKQk44RmFGb1I5cGM4Qy9kcUluWExNb1dZRStSVVFySkwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdmxzVHNZMUpLbytLRHI3WWw4RG15SGZCek9QVWFqREdZVFl0N2ZLWW5reHN3eFpWCkFhY2ZZSFFNdWEya001MVQySFB6YitDME1BZ09haVNWcDNXazlVOVlYQXFBNTNoc3crTG9XNGJUZHNTNThuaXoKNXlaUHBqak1xWWhlQ1NScU9ITTlVdUN0QjBIdVlmYWxDNnVHQkJWUDNCRjdYcVpjc2xDYW15MllyemJyYzM0dgpnZkVuVGRuUE9acmhDZndxczg5TC8vK2xicjU1UzlCNHJFQU9NU3dwcERUZXZtam5wVkhyeEVMa3RGSW1Fa1BUCjBtQVoxS3d3ay83SGVablg1VTgwRkgwVjdieTZRR09qUjR1bkx5dUVwc1lJdzliNFFqZ2J3Z2FldkViU1hvdDEKWjEvMXVQTGdBd0UzMU9XbTdiaDh0ZDZ0ZzJaUVRXbE9oN0RKQlFJREFRQUJBb0lCQVFDcHZUOFBXUVFBTHFTVgp4M29OdjlaS3RmY2JRNkVhMjhsWno5MGV5KzlwWUk2dlcwK0x2TUdPMll5cldYb05DR0pHcGdaU0lkV3E2dFFuCnM5MjZ5SDNDdlBEMmllc3QvRVZJV3lLRTB2SG5lejZ3Unc5c3M4M2NVOU96N01TbGRGSS9hZ3NweHV5amh4Z1IKUk1VaFpkNkg3NVVaa0lFcEFrR3dRNDNKaDl3Wmg5M1NzdERRVjIvZEROTWpZMk1EZWhFSG1PanJkNWdGWXFqdgpHekxjckE1anR0T1NUOUxyU25JZExPYTROYmFXY2pKVzN0VFdDeWtnMnFTOTNUQ2ZJWVh1eWhSb0xDMVc0bXVmCm5ja1ZoZWZ4OEVpanVrSW9JVDUxWkF2cXdReGNock5GWm12M0VJb3k3Q1VnZkxTcnNONG1iRnFIZktGdHNad1IKR09qZ1lZeGhBb0dCQU93UE52dk5mSHVuUVQxNStHd2lrU0MyZ29MU09qRGVCdWtpUUNYSGVGd1NPSnNUa1IxKwpnNTNYbCtZYTlic2JSM0lsNnluMUtoMFp4eUFlbUQzNXA5Z2RLZHlyOU16cDBNckZwcVE0UWVXVVgydnJmK1BKCmV6UHNJTjEwT3YyT1V2bGRXcmpaeEpRSnlDaDNHcW9qSEVHRFliSTVGZTBETnovSnVpbG5mcnR0QW9HQkFNNXYKaFRyQzdJUGEzTnFXdjNFS2RWN251YjllY0J3UldmZ3RYWlpnd0o3cjdMK0Z1dXN1Tjl0dEo4d0VIREFYOW9KUAo3anVkLzVINVVNSjJxWmJobCt0N0IzSjJSOWJsSlBKOUlOaHhiRlNnMWs5SnRmbE5JemsybUovR0gzWWFLUmw5CjFwM1NJOG4va1VzeWk0eXB6WVgrTHV4S0JDdll4eFVYNjYxQXRPejVBb0dBZGs0bHcwcTN3WTBRWUV3Wm1iQTEKUmN6U1dkZ2NlOU02YVdyVjlWa2oxQmo1cjVhOTJxZEdOVHdRajYwaFRGV2VsL0d6Q3dNb3lRN2JRaGl6T2hROQo3MHltWjBieTJDT3lsWDA3U0FBOTNsNWUrRW85ZlI3RUZVQ1pOQU9GY1AvOFM2ZGl5Vk95ZG5MMGtuc21yUEFOCndET2xLZG44U0IyZGVlV1MzQjlYWDMwQ2dZQjl4ZEpkVjg5MEVrK0cybHV2U3BqeUJxclQzbnpkalBETTFRNzEKQk9PMnI3VWhoeCs0RkFPeUs5SVlhZFNtdEtMYkNFbjBockhrUlFzZ1A5M1pjSDczMkpCVCs1NlBYakxoanIwSgpRaW1uY2dyQWFmOTE4YnBwTEV0VzVRWGNGZG8ranIzSWovU0FLTFprSTFxRWpCd003QzI0aHV2OXJ1aTBnRXQxCjFqdWxPUUtCZ1FERTRVek1UdDdabXMwU3hqT2ZMODBIbkM0OS9qYmNFQk55cFAzUWRTWGprWnhEM09zeGtwY2QKZWw3b1VvaG5MMkFrdG5vakdDY2QzT0RqYWI2T1ZQTFVTRmJFUk4xYzJXbW5Ec3NWLzErYzFEd1R2NGNnQTdEQwpSVHExWGZXdmpITWg2WFFyQjNiZGFtZmFvREFDMHBPa2k5c0dYeTNpUUxmeEZZVTU1djFGVlE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUlHcmxEcU5iOCs3YnpWbTJpa1lKcnd3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURjeE9URXpOVGN4TlZvWERUSTJNRGN4T0RFegpOVGN4TlZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF2bHNUc1kxSktvK0tEcjdZbDhEbXlIZkJ6T1BVYWpER1lUWXQ3ZktZbmt4c3d4WlYKQWFjZllIUU11YTJrTTUxVDJIUHpiK0MwTUFnT2FpU1ZwM1drOVU5WVhBcUE1M2hzdytMb1c0YlRkc1M1OG5pego1eVpQcGpqTXFZaGVDU1JxT0hNOVV1Q3RCMEh1WWZhbEM2dUdCQlZQM0JGN1hxWmNzbENhbXkyWXJ6YnJjMzR2CmdmRW5UZG5QT1pyaENmd3FzODlMLy8rbGJyNTVTOUI0ckVBT01Td3BwRFRldm1qbnBWSHJ4RUxrdEZJbUVrUFQKMG1BWjFLd3drLzdIZVpuWDVVODBGSDBWN2J5NlFHT2pSNHVuTHl1RXBzWUl3OWI0UWpnYndnYWV2RWJTWG90MQpaMS8xdVBMZ0F3RTMxT1dtN2JoOHRkNnRnMlpRVFdsT2g3REpCUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGSUUrWWh2MDkrNDF3S3FGVGQzbkJ4Zk4vUkFFTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ2UzSGkxWUVndjhhdHJNbjhadWQ4TTdnTU9qSnRUSC9Eak82MTNOU2tSL25nQ28yNDBDMlV4Cm5NZGlpbDg3RVBNZ1BNS0xFaCtObjRYREVvTzZuZ2lHVGlpRWhsMGZ4UkhxN2tMcmlqVVpWcVgyeHQ3aGN0d3AKbFZreDMvN29FQzF3R3A2NGFPRVJkU3R3QWU0VVlaZmF0aGhzTzduekhrQ1Uvd2NqNjFYK1U0cFRpWVViQm5iZwpZZG9MaEhLaVRHNTV1Y05kSlR5d0tuaWpTa3Y0RWRFd3B2SURIb01xVElaNmpsNTlJZldoYTFZaWpmZUpoVzlGCnhnU1ZuU2MxN0RzWTlRWlFjOVJaUWplSTNrZEZ2RTRDNTZuSWVEb2N4eUZDVzhGZVdlK2pld1Z6ZmdlNmpGNGIKQk44RmFGb1I5cGM4Qy9kcUluWExNb1dZRStSVVFySkwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lRS2k5d21CK1oxUmNuNXpEWGozWmU0ekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TnpFNU1UTTFOekUyV2hjTk1qWXdOekU0TVRNMQpOekUyV2pBak1TRXdId1lEVlFRRERCZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFERmw0RGk1UFhGUUt5RENGQi92UHFjL0VwcFM3dUYKdHdGd2NCTlp3RUFWT3RKaHF5eFhXb2hycWp2Nk5XT1d5Nlo0dEREVGNHajg3SUdZVjhXd3grMTg4OGVrNGI3Ygp1QnlacnAremNnR1BrWTJlMDdyMFM0dnFSZGNRcVZiT0xmUGZFNkJQcCtzOHBvY2xtTU9CUWdndmlid1VpNnQ1Cm5vQ1NSNGd5QS9IdXNFUlcwSlBjZFZ4YThNQjdobnowV0NNbXU0cWpjMG1ENWRnRVp0UkZGMTV4UVozekNDekoKQVRSU29TVUM3cDFTQ29Wd2ZmZnRHajlrMFEwQXh3V09zRlRjRWRxTG4xQ0RCemFzMmhOUXBYbW5reFN1bnVqNgowMlBXajBuOVlZVXFTcWRKaytRTHJEU0Y1YUdQdEMxNzBYS1VWYUpQY05kTFpqYkppWDhtemk4cEFnTUJBQUdqCmdZWXdnWU13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZJRStZaHYwOSs0MXdLcUZUZDNuQnhmTgovUkFFTUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bExYSmxiR0Y1TG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFlM2dhcEtTV3NDNk44UEJ1WUp5NlA3eDhsdys3QlVtQkNBb2d5N2FqaFBiNm9wUWcKTTViUWhFTG5rbjZRVDBDTjZNaEY2cEdFdzNKZU0vTnlBNkFJYjJKMStJaG9Ea2xKZ2xhK0YraGx6bjU4RmZXRwpGc0lNcDZ4VVpMdGtoeWtRQ2NNK21BOEFZcVlmVGJVaHY1NFd4K3NPWFFFTUhpWU5JOXZnakViaitTak9QcDQwCndEemZUSVIzUW9sM1Q3U1JFNE5LY282NXJpaklzR0JFQVoxWm91NG1JTVRQaElaZE1KdlBBVWl0UGFNeUNLcFMKVW5MbXRMb0Uvem84dnRGM2g2OEwrd2d0QXlkZWZkYlZLcVJEc2NMamp2bVI5MzBPZjNiNXB0TXRKU21ZdzJLZgowT0hhSitteFdvZ3d6T001cEFuNU1nTGI3YmRLZW5SWW5NUFZSUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeFplQTR1VDF4VUNzZ3doUWY3ejZuUHhLYVV1N2hiY0JjSEFUV2NCQUZUclNZYXNzClYxcUlhNm83K2pWamxzdW1lTFF3MDNCby9PeUJtRmZGc01mdGZQUEhwT0crMjdnY21hNmZzM0lCajVHTm50TzYKOUV1TDZrWFhFS2xXemkzejN4T2dUNmZyUEthSEpaakRnVUlJTDRtOEZJdXJlWjZBa2tlSU1nUHg3ckJFVnRDVAozSFZjV3ZEQWU0Wjg5RmdqSnJ1S28zTkpnK1hZQkdiVVJSZGVjVUdkOHdnc3lRRTBVcUVsQXU2ZFVncUZjSDMzCjdSby9aTkVOQU1jRmpyQlUzQkhhaTU5UWd3YzJyTm9UVUtWNXA1TVVycDdvK3ROajFvOUovV0dGS2txblNaUGsKQzZ3MGhlV2hqN1F0ZTlGeWxGV2lUM0RYUzJZMnlZbC9KczR2S1FJREFRQUJBb0lCQUdEZ2V5ekRuVXhzL1NmeApkNlpwZldaaXZBa01QSkMrdlZIbllWVnIwUCtYcTNaL2Vtb0oxVUVVWWZ1M0dYRGh3R2tGejdxYkxwNXpSc2J1Cm9kcWU2MjJNQ0tKcW5DMFdBOC9Gc2o5RThrYjEwajNCQ2JTbEphQmpSYUxCby9IS3pmcmRvSWZ0aUlSZ0VYcjUKZjBGc29wN01KUTdkdStFUk9YQis2ZU83MDI1MjJQSDZwOG5OcHk2OVBnays1YzU3d3M4RWJSNWs1OGtJLzhURQozS0ExR0dIekhFKzdpS0pGODNoRzZRcHE2RXR4OFlDTlBURk56M1l5WVg2NVJoM2RSMFpRV3EvZlJUSXkycDRSCncyaEJ6SXRMZ0xYSkZNZjdpTEJFNGU1azRBTW9qSTVyVHFQTFFqMGRqbnlPa2RsNVUvSk5wbGZVdkVSMXB6bTQKbkVyS1VoRUNnWUVBN1Fubk1uQ2hoWUVPWjlsc0l2Mlkwc0dMS0FsbWQ3Zkw2YlE1VkIxdXMySDhTbEdvaVp2VAo5bmlrQVZwVURmM2VrT1NNU2VOM2U2Nm14b3VrRDE3YTlkZ3daQXZXU29ScCtzYzNscjd2UFlsSnJnNExTTDRwClE4UnIwbk5GMGU3ZlF1YVRnWkdsbUdCeTJ3L0xiOHI2ZXU4U05JcXpWazZHY2RybmxCdTV6cXNDZ1lFQTFXWE4KM1NuQXBZUDJrNW9nM0RNWUJwanpHZExLdFBEVzU2dWlxNDBsZmhuS25XSWx5d2VWUjB4NU9aTFdnODQxMjl4TApjSXIvaHhqNWpQbE9Jd2hpa2xPbWo5VTFqeVVra3JzL0c5VUNNL3V0VnpGUEx3Z01EVTFHSjMzUkExRkczNERNCnQ2TDJOcHd4TVc4Q3FhMVBFWTdBWVZQMi9uSFpKS05zamQxTHFYc0NnWUVBeEtHTGJUY3JkaERwdjFJSU56cUIKZEl0akFWSlM4d3EvbDkyT0ZPM1piK3JmbTFNRDZTc2YrUHg0cURxak1Yd2dEYmZaZkUyNlJ4cEpkTGhQM3dSRAp4TjZTdmR0bjV5YlN0MXBkRGFyVDBRczYySzBEeFZNaDdmcFpxeGsrbVBoN3NnYU41RlRLdG8yRG1aOFBsbXdkCnZxN2xQanEwcStxMThtcXg0aFhoMjhNQ2dZRUF4ZmtzZzRHNHQ5VTFiTG9Rd2ppa2tYcFVEaUVBN2R5QmcydzMKL2U5MFdRaVVjRzRkb2IzblA3NHl1TGNCVEVhQ3NQWXZCcm50VmVoVm0vT3VDZEk5b0lMNmczWEp1b002NnVYTQpKb1gzQlVMNERXd3hpZkJ0UGVueXE3Q051QVl2T2lyRHdabnQwYndWNTBhVnNkU1hCakxwUjJJZVF2QmNBeUdhCkZBSzVyd0VDZ1lBSXZ1bjkzaUFHd3MwMDhOZEdaNG9ZQTRDTFFTYnJKS3hTVlRvdUVraDRhZkFmcUM4bDlxcTcKUnQyc3lQeGpqYk5xMWpHTkkwSEM4NDJjYnMxRW5vd2pTN2kzVlZBK2lFNjBxemQ1a1hQWlNOellKbnpndVJWQwpWU1h3UlVUbEE5T2FPYkFIRHFKaExWSS93YUNHdkpOSndlbElaMzlBZTVtNlF1NzhFV09RREE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUlHcmxEcU5iOCs3YnpWbTJpa1lKcnd3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURjeE9URXpOVGN4TlZvWERUSTJNRGN4T0RFegpOVGN4TlZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF2bHNUc1kxSktvK0tEcjdZbDhEbXlIZkJ6T1BVYWpER1lUWXQ3ZktZbmt4c3d4WlYKQWFjZllIUU11YTJrTTUxVDJIUHpiK0MwTUFnT2FpU1ZwM1drOVU5WVhBcUE1M2hzdytMb1c0YlRkc1M1OG5pego1eVpQcGpqTXFZaGVDU1JxT0hNOVV1Q3RCMEh1WWZhbEM2dUdCQlZQM0JGN1hxWmNzbENhbXkyWXJ6YnJjMzR2CmdmRW5UZG5QT1pyaENmd3FzODlMLy8rbGJyNTVTOUI0ckVBT01Td3BwRFRldm1qbnBWSHJ4RUxrdEZJbUVrUFQKMG1BWjFLd3drLzdIZVpuWDVVODBGSDBWN2J5NlFHT2pSNHVuTHl1RXBzWUl3OWI0UWpnYndnYWV2RWJTWG90MQpaMS8xdVBMZ0F3RTMxT1dtN2JoOHRkNnRnMlpRVFdsT2g3REpCUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGSUUrWWh2MDkrNDF3S3FGVGQzbkJ4Zk4vUkFFTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ2UzSGkxWUVndjhhdHJNbjhadWQ4TTdnTU9qSnRUSC9Eak82MTNOU2tSL25nQ28yNDBDMlV4Cm5NZGlpbDg3RVBNZ1BNS0xFaCtObjRYREVvTzZuZ2lHVGlpRWhsMGZ4UkhxN2tMcmlqVVpWcVgyeHQ3aGN0d3AKbFZreDMvN29FQzF3R3A2NGFPRVJkU3R3QWU0VVlaZmF0aGhzTzduekhrQ1Uvd2NqNjFYK1U0cFRpWVViQm5iZwpZZG9MaEhLaVRHNTV1Y05kSlR5d0tuaWpTa3Y0RWRFd3B2SURIb01xVElaNmpsNTlJZldoYTFZaWpmZUpoVzlGCnhnU1ZuU2MxN0RzWTlRWlFjOVJaUWplSTNrZEZ2RTRDNTZuSWVEb2N4eUZDVzhGZVdlK2pld1Z6ZmdlNmpGNGIKQk44RmFGb1I5cGM4Qy9kcUluWExNb1dZRStSVVFySkwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVakNDQWpxZ0F3SUJBZ0lRWW5mREpJZCtMM2hnaXhKNmlxVzdkREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TnpFNU1UTTFOekUxV2hjTk1qWXdOekU0TVRNMQpOekUxV2pBb01TWXdKQVlEVlFRRERCMHFMbTFsZEdGc0xtaDFZbUpzWlMxbmNuQmpMbU5wYkdsMWJTNXBiekNDCkFTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBT2V1SDZQTnh6OTZMVVppUk9ERTJka2sKclJDeHF5eWxkVkRvVEhmZ1BUck9oYWhrRHpwUjlVYzYxRFFQTDBOUWZMT3RzNjAzTTFsY1dBVWFwanRyL1BHOQpHRGhZVDM3UlJrOFhacWRDWDY0UlJVdUhSWWUvTGdJdmxSSktjbnpMeHBiSFcrV3R2TkZmdUsxVENQUHZvdS8xCkt2bW44WEpDS0x5V01aNzZ1bWxiZ05qd2JnMWxra0dFQjlqa0VqaUNtY2xmOWxvNnMyRE91N1JuTkVPY0N6RlkKZy84RmM1eDB3T3RsNzl5WW1taTZENmZFaUVJYXBQbHF6ZTU5V2NuVUYzMzAxRHVBK3pFSmMza0dsNStCeG1BZQpPcVJRQ3RCTDVXSXcrb1MvTlkyRDNIN2lLc05ET0dqbThLbjJlQjQ2dnMxV1owdEoyWTNWTGdtVjRWNGVGV1VDCkF3RUFBYU9CaXpDQmlEQU9CZ05WSFE4QkFmOEVCQU1DQmFBd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUcKQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXdId1lEVlIwakJCZ3dGb0FVZ1Q1aUcvVDM3alhBcW9WTgozZWNIRjgzOUVBUXdLQVlEVlIwUkJDRXdINElkS2k1dFpYUmhiQzVvZFdKaWJHVXRaM0p3WXk1amFXeHBkVzB1CmFXOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSkIrVlFkVVoxdzRtNkU1ZllFZWgzaitYMWNoZmI4LzJBeEwKYnR2SzNlVW42SUhzdllXUGJ5enJWTTVFRXl5c2pnNzhtMDQwQjNaNVY0RVlkOGRBN2ZBTWZaUjBQSUNTT3FKdApWNDBBd3U5Ri9xdDkzclM1dzh1V016b0JmWGtTV01Vdjd0M0dvVWY5Y1ZEeUhJV20zSlpQQU93eVFsRFN6TElpCm5ZcERsZWk3eHV0T291MVNCMUtxbXJoOXdJa25vUStWNEw4Q1hWMUVXZDVIUTdzbHdSTW1xVHM3NldzUU5maVUKYTRRRXhzRG1yakZ0NTEwYVdwblVRSGM5aldtTElRcnRLNGhWbmo1NDJ2ajRzMTZWK0hST2N6NWJxNkRmR3pRZwpmZlB4djZmRTNCN1BtYWlvMlg2RUF1NGlMNDg5ZC9HRGVZUU5zNzBDVmFHd0RsTU9haFk9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBNTY0Zm84M0hQM290Um1KRTRNVFoyU1N0RUxHckxLVjFVT2hNZCtBOU9zNkZxR1FQCk9sSDFSenJVTkE4dlExQjhzNjJ6clRjeldWeFlCUnFtTzJ2ODhiMFlPRmhQZnRGR1R4ZG1wMEpmcmhGRlM0ZEYKaDc4dUFpK1ZFa3B5Zk12R2xzZGI1YTI4MFYrNHJWTUk4KytpNy9VcSthZnhja0lvdkpZeG52cTZhVnVBMlBCdQpEV1dTUVlRSDJPUVNPSUtaeVYvMldqcXpZTTY3dEdjMFE1d0xNVmlEL3dWem5IVEE2Mlh2M0ppYWFMb1BwOFNJClFocWsrV3JON24xWnlkUVhmZlRVTzREN01RbHplUWFYbjRIR1lCNDZwRkFLMEV2bFlqRDZoTDgxallQY2Z1SXEKdzBNNGFPYndxZlo0SGpxK3pWWm5TMG5aamRVdUNaWGhYaDRWWlFJREFRQUJBb0lCQVFDdzF3Ly9rRXJPQVF3ZAo5VlJ0M05RTUV4cW02M2FsRllaK3cxSGJEcWF1QklXeEN1ODByT3B6L0V1TmtTbWFVQTFmZU83MUFIV0plQnNYCmlrZm9nMzBIYURiY2kwdmltUXI1dy9ydklKSzM0eWJwaDg5aTFtTGYrRUhwUERvM1Y3TzEwMllwNG51RnRYTFoKbWMvem9xN1VTbWNMT1UzcTBPVVhUZTJDVkErRjZvWStNS0ZyZEtwZno1QnU1dlpud2MxcWc5VUFMdEtBbXBXTgpNdHRYNnZycml4Q1J2VXVMSkR6cDBmYlMzK1dOdXBNWFBwbFBVRTR4UFVDY09wQ2drVGZNMWZPQXpGNThFQ1VuCk9wT014Qjlha0puM1NaYlFuSkJvMWNlc1ZYS1RLZG42Wm41QStPZGNmVGRIZHpCSVFRc1JGRUVwdWpPTVpYSlQKNmtFQ3ZHb0JBb0dCQVA2MGRXZVZSellvcTJjRUh0cndTTzR6cFJCTGJNd1ZXcUo0ZjJuZXhQZmpHTkZmakQyRAp5SUt3N1FycXc2bVd4U1J2Kzkva0I4bkpjSU1POTdQanZuNTVBM1RoTStXOUYvcjl2YnVqT2M0YWY3aFpPajZXCnpWMlExTkRKWDZtTmV3cEJqbkJRV1ZrdXA5a2xZNWV5TmRTV0J6TTZNMXl2UGRpaU90bUxacXpWQW9HQkFPamIKc2NPM0xURDJ4aDg0eW0zY3R3RE04OFJzM1p4Z2VJZVJ3VmhIYWFDWkxoS0Zoem9RdTBTVmg0RzRyNFRmWW00WQpTc05tRnZhSEZNVjdYWi9kVUUzbldzQk9UbVhHa1dDZDF2TDAxT2dHZlVoOGNPWlZVUC9vdndnRzlyN0RWcFRqCm45VkVmZFFsWW1kelRnUXFiUXpYT2RJd1R1Qm5GTWdIblJWRVZzNVJBb0dCQUoydEkzMHphWGs2cGhsSThMMEMKd1hOTTMyTjkvZVU5VnZWN2VRMFdUb05Td0J0bGRoRGkweThzemlIVEFidXJ6WEZvTGRvRmRWalM3bWNEemc0Nwo3OEtsc2FFYWhTRTA5WEo0d0lzM1dlS2dmdTZsdGl2bStVMXlDbjBTSExsL0QydGkrQVhKaC9ad3JwSDcxbktqCmJUV2todUtNcGgwN2t5TFlFMngzSXVIZEFvR0JBSXNKR25Rc3ZGdi9ETDc1cnN5NE84RExuMFdLWnl3RzRoQzQKYzhSZEozR1A1TldFU3dEZG1xTlIwUTRna3hSNE9SSlppTkp3ODRjUmt0SnpYYXlsZlZ4MnBsWXFxMTdUbUZ3agpBb1Fnc2JzMG5MdWFLZU10eitadE54cjQ1WDF6cncvSmRkYm1SV2RWUnhOVDRxSlVIcmJMRDZnejFmVGhONlJUCi8zUUNVUDV4QW9HQVZYYWJSTjRvUnNHZlFQdDFTTGE2NGh2dGRkajB6a2tZN1ZRbE9ydmlmTG5VTldEcGFMTWUKT3JSK20xZkRCN2FMdm5McXRXYmtZQWhKNHh0N2lxaGlGRStoSUxhRW1Mb2dDaW1paXQwZThLbllHayszQnBkOApPbThzVjV1eE5vbG1YbDExQ0V3S0poN25nbjZIOElHdnIyS2ErTUFaQmJzeFhUK0NqTk44SDZvPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 50%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: 84e87f4bac3d56f525639369517c33b7c4008eb349356198ff4e2ed40f35dc5d
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.20.20
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/operator-generic:v1.14.0-rc.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        readinessProbe:
          failureThreshold: 5
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 5
          timeoutSeconds: 3
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: 27bb5ccbefe991afbb56a832364bc893e292d9ce2875b33e872fe0db3cb93f5f
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.14.0-rc.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          tcpSocket:
            port: grpc
        securityContext:
          capabilities:
            drop:
            - ALL
          runAsGroup: 65532
          runAsNonRoot: true
          runAsUser: 65532
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      securityContext:
        fsGroup: 65532
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              - key: ca.crt
                path: hubble-server-ca.crt
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: 02d6b04b131029fae39270192dcff10fa3a64af9d1d4d0049f1efbc3f5526a34
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.11.0@sha256:bcb369c47cada2d4257d63d3749f7f87c91dde32e010b223597306de95d1ecc8
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.11.0@sha256:14c04d11f78da5c363f88592abae8d2ecee3cbe009f443ef11df6ac5f692d839
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: 84e87f4bac3d56f525639369517c33b7c4008eb349356198ff4e2ed40f35dc5d
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.20.20
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.14.0-rc.0
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.20.20
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.14.0-rc.0
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.14.0-rc.0
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.20.20
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.14.0-rc.0
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.14.0-rc.0
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        projected:
          defaultMode: 256
          sources:
          - secret:
              name: cilium-clustermesh
              optional: true
          - secret:
              items:
              - key: tls.key
                path: common-etcd-client.key
              - key: tls.crt
                path: common-etcd-client.crt
              - key: ca.crt
                path: common-etcd-client-ca.crt
              name: clustermesh-apiserver-remote-cert
              optional: true
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              - key: ca.crt
                path: client-ca.crt
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
