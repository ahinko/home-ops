#!/bin/bash

# Home Assistant MQTT Discovery for wmbusmeters
# Generated by Ansible

MQTT_HOST="{{ mqtt_broker_host }}"
MQTT_PORT="{{ mqtt_broker_port }}"
{% if mqtt_username and mqtt_password %}
MQTT_USER="{{ mqtt_username }}"
MQTT_PASS="{{ mqtt_password }}"
{% endif %}
DISCOVERY_PREFIX="{{ mqtt_discovery_prefix }}"

# Build MQTT command
MQTT_CMD="mosquitto_pub -h $MQTT_HOST -p $MQTT_PORT"
{% if mqtt_username and mqtt_password %}
MQTT_CMD="$MQTT_CMD -u $MQTT_USER -P $MQTT_PASS"
{% endif %}

{% for meter in wmbusmeters_meters %}
echo "Publishing Home Assistant discovery for {{ meter.name }}..."

# 1. Main sensor (total water consumption)
TOPIC="$DISCOVERY_PREFIX/sensor/wmbusmeters_{{ meter.id }}_total/config"
PAYLOAD='{
  "name": "Water Meter {{ meter.id }} Total",
  "unique_id": "wmbusmeters_{{ meter.id }}_total",
  "state_topic": "wmbusmeters/{{ meter.id }}",
  "value_template": "{{ "{{ value_json.total_m3 }}" }}",
  "unit_of_measurement": "m³",
  "device_class": "water",
  "state_class": "total_increasing",
  "icon": "mdi:water",
  "device": {
    "identifiers": ["wmbusmeters_{{ meter.id }}"],
    "name": "Water Meter {{ meter.id }}",
    "model": "{{ meter.model | default('Water Meter') }}",
    "manufacturer": "{{ meter.manufacturer | default('Unknown') }}"
  }
}'
$MQTT_CMD -r -t "$TOPIC" -m "$PAYLOAD"

# 2. Target reading (billing period baseline)
TOPIC="$DISCOVERY_PREFIX/sensor/wmbusmeters_{{ meter.id }}_target/config"
PAYLOAD='{
  "name": "Water Meter {{ meter.id }} Target",
  "unique_id": "wmbusmeters_{{ meter.id }}_target",
  "state_topic": "wmbusmeters/{{ meter.id }}",
  "value_template": "{{ "{{ value_json.target_m3 }}" }}",
  "unit_of_measurement": "m³",
  "device_class": "water",
  "state_class": "total",
  "icon": "mdi:water-outline",
  "device": {
    "identifiers": ["wmbusmeters_{{ meter.id }}"],
    "name": "Water Meter {{ meter.id }}",
    "model": "{{ meter.model | default('Water Meter') }}",
    "manufacturer": "{{ meter.manufacturer | default('Unknown') }}"
  }
}'
$MQTT_CMD -r -t "$TOPIC" -m "$PAYLOAD"

# 3. Current flow rate
TOPIC="$DISCOVERY_PREFIX/sensor/wmbusmeters_{{ meter.id }}_flow/config"
PAYLOAD='{
  "name": "Water Meter {{ meter.id }} Flow Rate",
  "unique_id": "wmbusmeters_{{ meter.id }}_flow",
  "state_topic": "wmbusmeters/{{ meter.id }}",
  "value_template": "{{ "{{ value_json.flow_m3h }}" }}",
  "unit_of_measurement": "m³/h",
  "device_class": "volume_flow_rate",
  "state_class": "measurement",
  "icon": "mdi:water-pump",
  "device": {
    "identifiers": ["wmbusmeters_{{ meter.id }}"],
    "name": "Water Meter {{ meter.id }}",
    "model": "{{ meter.model | default('Water Meter') }}",
    "manufacturer": "{{ meter.manufacturer | default('Unknown') }}"
  }
}'
$MQTT_CMD -r -t "$TOPIC" -m "$PAYLOAD"

# 4. Maximum flow rate
TOPIC="$DISCOVERY_PREFIX/sensor/wmbusmeters_{{ meter.id }}_max_flow/config"
PAYLOAD='{
  "name": "Water Meter {{ meter.id }} Max Flow Rate",
  "unique_id": "wmbusmeters_{{ meter.id }}_max_flow",
  "state_topic": "wmbusmeters/{{ meter.id }}",
  "value_template": "{{ "{{ value_json.max_flow_m3h }}" }}",
  "unit_of_measurement": "m³/h",
  "device_class": "volume_flow_rate",
  "state_class": "measurement",
  "icon": "mdi:water-pump",
  "device": {
    "identifiers": ["wmbusmeters_{{ meter.id }}"],
    "name": "Water Meter {{ meter.id }}",
    "model": "{{ meter.model | default('Water Meter') }}",
    "manufacturer": "{{ meter.manufacturer | default('Unknown') }}"
  }
}'
$MQTT_CMD -r -t "$TOPIC" -m "$PAYLOAD"

# 5. Minimum flow rate
TOPIC="$DISCOVERY_PREFIX/sensor/wmbusmeters_{{ meter.id }}_min_flow/config"
PAYLOAD='{
  "name": "Water Meter {{ meter.id }} Min Flow Rate",
  "unique_id": "wmbusmeters_{{ meter.id }}_min_flow",
  "state_topic": "wmbusmeters/{{ meter.id }}",
  "value_template": "{{ "{{ value_json.min_flow_m3h }}" }}",
  "unit_of_measurement": "m³/h",
  "device_class": "volume_flow_rate",
  "state_class": "measurement",
  "icon": "mdi:water-pump-off",
  "device": {
    "identifiers": ["wmbusmeters_{{ meter.id }}"],
    "name": "Water Meter {{ meter.id }}",
    "model": "{{ meter.model | default('Water Meter') }}",
    "manufacturer": "{{ meter.manufacturer | default('Unknown') }}"
  }
}'
$MQTT_CMD -r -t "$TOPIC" -m "$PAYLOAD"

# 6. Maximum flow temperature
TOPIC="$DISCOVERY_PREFIX/sensor/wmbusmeters_{{ meter.id }}_max_flow_temp/config"
PAYLOAD='{
  "name": "Water Meter {{ meter.id }} Max Flow Temperature",
  "unique_id": "wmbusmeters_{{ meter.id }}_max_flow_temp",
  "state_topic": "wmbusmeters/{{ meter.id }}",
  "value_template": "{{ "{{ value_json.max_flow_temperature_c }}" }}",
  "unit_of_measurement": "°C",
  "device_class": "temperature",
  "state_class": "measurement",
  "icon": "mdi:thermometer-high",
  "device": {
    "identifiers": ["wmbusmeters_{{ meter.id }}"],
    "name": "Water Meter {{ meter.id }}",
    "model": "{{ meter.model | default('Water Meter') }}",
    "manufacturer": "{{ meter.manufacturer | default('Unknown') }}"
  }
}'
$MQTT_CMD -r -t "$TOPIC" -m "$PAYLOAD"

# 7. Minimum flow temperature
TOPIC="$DISCOVERY_PREFIX/sensor/wmbusmeters_{{ meter.id }}_min_flow_temp/config"
PAYLOAD='{
  "name": "Water Meter {{ meter.id }} Min Flow Temperature",
  "unique_id": "wmbusmeters_{{ meter.id }}_min_flow_temp",
  "state_topic": "wmbusmeters/{{ meter.id }}",
  "value_template": "{{ "{{ value_json.min_flow_temperature_c }}" }}",
  "unit_of_measurement": "°C",
  "device_class": "temperature",
  "state_class": "measurement",
  "icon": "mdi:thermometer-low",
  "device": {
    "identifiers": ["wmbusmeters_{{ meter.id }}"],
    "name": "Water Meter {{ meter.id }}",
    "model": "{{ meter.model | default('Water Meter') }}",
    "manufacturer": "{{ meter.manufacturer | default('Unknown') }}"
  }
}'
$MQTT_CMD -r -t "$TOPIC" -m "$PAYLOAD"

# 8. Minimum external temperature
TOPIC="$DISCOVERY_PREFIX/sensor/wmbusmeters_{{ meter.id }}_min_ext_temp/config"
PAYLOAD='{
  "name": "Water Meter {{ meter.id }} Min External Temperature",
  "unique_id": "wmbusmeters_{{ meter.id }}_min_ext_temp",
  "state_topic": "wmbusmeters/{{ meter.id }}",
  "value_template": "{{ "{{ value_json.min_external_temperature_c }}" }}",
  "unit_of_measurement": "°C",
  "device_class": "temperature",
  "state_class": "measurement",
  "icon": "mdi:thermometer-low",
  "device": {
    "identifiers": ["wmbusmeters_{{ meter.id }}"],
    "name": "Water Meter {{ meter.id }}",
    "model": "{{ meter.model | default('Water Meter') }}",
    "manufacturer": "{{ meter.manufacturer | default('Unknown') }}"
  }
}'
$MQTT_CMD -r -t "$TOPIC" -m "$PAYLOAD"

# 9. Status
TOPIC="$DISCOVERY_PREFIX/sensor/wmbusmeters_{{ meter.id }}_status/config"
PAYLOAD='{
  "name": "Water Meter {{ meter.id }} Status",
  "unique_id": "wmbusmeters_{{ meter.id }}_status",
  "state_topic": "wmbusmeters/{{ meter.id }}",
  "value_template": "{{ "{{ value_json.status }}" }}",
  "icon": "mdi:check-circle-outline",
  "device": {
    "identifiers": ["wmbusmeters_{{ meter.id }}"],
    "name": "Water Meter {{ meter.id }}",
    "model": "{{ meter.model | default('Water Meter') }}",
    "manufacturer": "{{ meter.manufacturer | default('Unknown') }}"
  }
}'
$MQTT_CMD -r -t "$TOPIC" -m "$PAYLOAD"

# 10. Target date
TOPIC="$DISCOVERY_PREFIX/sensor/wmbusmeters_{{ meter.id }}_target_date/config"
PAYLOAD='{
  "name": "Water Meter {{ meter.id }} Target Date",
  "unique_id": "wmbusmeters_{{ meter.id }}_target_date",
  "state_topic": "wmbusmeters/{{ meter.id }}",
  "value_template": "{{ "{{ value_json.target_date }}" }}",
  "device_class": "date",
  "icon": "mdi:calendar",
  "device": {
    "identifiers": ["wmbusmeters_{{ meter.id }}"],
    "name": "Water Meter {{ meter.id }}",
    "model": "{{ meter.model | default('Water Meter') }}",
    "manufacturer": "{{ meter.manufacturer | default('Unknown') }}"
  }
}'
$MQTT_CMD -r -t "$TOPIC" -m "$PAYLOAD"

# 11. Last seen timestamp
TOPIC="$DISCOVERY_PREFIX/sensor/wmbusmeters_{{ meter.id }}_last_seen/config"
PAYLOAD='{
  "name": "Water Meter {{ meter.id }} Last Seen",
  "unique_id": "wmbusmeters_{{ meter.id }}_last_seen",
  "state_topic": "wmbusmeters/{{ meter.id }}",
  "value_template": "{{ "{{ value_json.timestamp }}" }}",
  "device_class": "timestamp",
  "icon": "mdi:clock-outline",
  "device": {
    "identifiers": ["wmbusmeters_{{ meter.id }}"],
    "name": "Water Meter {{ meter.id }}",
    "model": "{{ meter.model | default('Water Meter') }}",
    "manufacturer": "{{ meter.manufacturer | default('Unknown') }}"
  }
}'
$MQTT_CMD -r -t "$TOPIC" -m "$PAYLOAD"

# 12. RSSI (signal strength)
TOPIC="$DISCOVERY_PREFIX/sensor/wmbusmeters_{{ meter.id }}_rssi/config"
PAYLOAD='{
  "name": "Water Meter {{ meter.id }} Signal Strength",
  "unique_id": "wmbusmeters_{{ meter.id }}_rssi",
  "state_topic": "wmbusmeters/{{ meter.id }}",
  "value_template": "{{ "{{ value_json.rssi_dbm }}" }}",
  "unit_of_measurement": "dBm",
  "device_class": "signal_strength",
  "state_class": "measurement",
  "icon": "mdi:wifi",
  "device": {
    "identifiers": ["wmbusmeters_{{ meter.id }}"],
    "name": "Water Meter {{ meter.id }}",
    "model": "{{ meter.model | default('Water Meter') }}",
    "manufacturer": "{{ meter.manufacturer | default('Unknown') }}"
  }
}'
$MQTT_CMD -r -t "$TOPIC" -m "$PAYLOAD"

{% endfor %}

echo "Home Assistant discovery published successfully!"
