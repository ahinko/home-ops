---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: cloudflare-ddns
  namespace: networking
spec:
  schedule: "*/15 * * * *"
  concurrencyPolicy: "Forbid"
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 5
  startingDeadlineSeconds: 10
  jobTemplate:
    spec:
      backoffLimit: 1
      ttlSecondsAfterFinished: 300
      template:
        metadata:
          annotations:
            botkube.io/disable: "true"
        spec:
          restartPolicy: Never
          containers:
            - name: cloudflare-ddns
              image: ghcr.io/onedr0p/kubernetes-kubectl:1.25.2
              envFrom:
                - secretRef:
                    name: cloudflare-ddns
                - secretRef:
                    name: cloudflare-ddns-healthcheck
              command:
                - "/bin/sh"
                - "-ec"
                - |
                  set -o nounset
                  set -o errexit

                  ipv4=$(curl -s https://ipv4.icanhazip.com/)

                  record4=$(curl -s -X GET \
                    "https://api.cloudflare.com/client/v4/zones/$CLOUDFLARE_ZONE_ID/dns_records?name=$CLOUDFLARE_RECORD_NAME&type=A" \
                    -H "Authorization: Bearer $CLOUDFLARE_API_TOKEN" \
                    -H "Content-Type: application/json" \
                  )

                  old_ipv4=$(echo "$record4" | sed -n 's/.*"content":"\([^"]*\).*/\1/p')

                  if [ -z "$old_ipv4" ]; then
                      printf "%s - Unable to get old IP from Cloudflare" "$(date -u)"
                      exit 1
                  fi

                  if [ "$ipv4" = "$old_ipv4" ]; then
                    printf "%s - Success - IP Address '%s' has not changed" "$(date -u)" "$ipv4"
                    curl -fsS -m 10 --retry 5 -o /dev/null $HEALTHCHECK_URL
                    exit 0
                  fi

                  record4_identifier=$(echo "$record4" | sed -n 's/.*"id":"\([^"]*\).*/\1/p')

                  update4=$(curl -s -X PUT \
                    "https://api.cloudflare.com/client/v4/zones/$CLOUDFLARE_ZONE_ID/dns_records/$record4_identifier" \
                    -H "Authorization: Bearer $CLOUDFLARE_API_TOKEN" \
                    -H "Content-Type: application/json" \
                    --data "{\"id\":\"$CLOUDFLARE_ZONE_ID\",\"type\":\"A\",\"proxied\":true,\"name\":\"$CLOUDFLARE_RECORD_NAME\",\"content\":\"$ipv4\"}" \
                  )
                  if echo "$update4" | grep -q '\"success\":false'; then
                    printf "%s - Yikes - Updating IP Address '%s' has failed" "$(date -u)" "$ipv4"
                    exit 1
                  else
                    printf "%s - Success - IP Address '%s' has been updated" "$(date -u)" "$ipv4"
                    curl -fsS -m 10 --retry 5 -o /dev/null $HEALTHCHECK_URL
                    exit 0
                  fi
