---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app ingress-nginx
  namespace: networking
spec:
  interval: 60m
  chart:
    spec:
      chart: *app
      version: 4.4.0
      sourceRef:
        kind: HelmRepository
        name: ingress-nginx-charts
        namespace: flux-system
      interval: 60m
  dependsOn:
    - name: metallb
      namespace: networking
  # Values link: https://github.com/kubernetes/ingress-nginx/blob/main/charts/ingress-nginx/values.yaml
  values:
    global:
      nameOverride: *app

    controller:
      replicaCount: 2
      extraEnvs:
        - name: TZ
          value: ${TIMEZONE}
      service:
        type: LoadBalancer
        externalTrafficPolicy: Local
        annotations:
          metallb.universe.tf/loadBalancerIPs: "${LB_INGRESS}"
      publishService:
        enabled: true
      ingressClassResource:
        default: true

      # Crowdsec start
      extraVolumes:
        - name: crowdsec-bouncer-plugin
          emptyDir: {}
      extraInitContainers:
        - name: init-clone-crowdsec-bouncer
          image: crowdsecurity/lua-bouncer-plugin:v0.1.11
          imagePullPolicy: IfNotPresent
          env:
            - name: API_URL
              value: "http://crowdsec-service.networking.svc.cluster.local:8080"
            - name: BOUNCER_CONFIG
              value: "/crowdsec/crowdsec-bouncer.conf"

          envFrom:
            - secretRef:
                name: crowdsec-secrets

          command:
            [
              "sh",
              "-c",
              "sh /docker_start.sh; mkdir -p /lua_plugins/crowdsec/; cp -r /crowdsec/* /lua_plugins/crowdsec/",
            ]
          volumeMounts:
            - name: crowdsec-bouncer-plugin
              mountPath: /lua_plugins
      extraVolumeMounts:
        - name: crowdsec-bouncer-plugin
          mountPath: /etc/nginx/lua/plugins/crowdsec
          subPath: crowdsec
      config:
        plugins: "crowdsec"
        lua-shared-dicts: "crowdsec_cache: 50m"
        # Crowdsec end

        client-header-timeout: 120
        client-body-buffer-size: "100M"
        client-body-timeout: 120
        custom-http-errors: 401,403,404,500,501,502,503
        forwarded-for-header: "CF-Connecting-IP"
        hsts-max-age: "31449600"
        keep-alive-requests: 10000
        keep-alive: 120
        log-format-escape-json: "true"
        log-format-upstream:
          '{"time": "$time_iso8601", "remote_addr": "$proxy_protocol_addr", "x_forwarded_for": "$proxy_add_x_forwarded_for", "request_id": "$req_id",
          "remote_user": "$remote_user", "bytes_sent": $bytes_sent, "request_time": $request_time, "status": $status, "vhost": "$host", "request_proto": "$server_protocol",
          "path": "$uri", "request_query": "$args", "request_length": $request_length, "duration": $request_time,"method": "$request_method", "http_referrer": "$http_referer",
          "http_user_agent": "$http_user_agent" }'
        proxy-body-size: "100M"
        ssl-protocols: "TLSv1.3 TLSv1.2"
        use-forwarded-headers: "true"
      metrics:
        enabled: true
        serviceMonitor:
          enabled: true
          namespace: networking
          namespaceSelector:
            any: true

      extraArgs:
        default-ssl-certificate: "networking/${SECRET_DOMAIN/./-}-tls"
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app.kubernetes.io/name
                    operator: In
                    values:
                      - ingress-nginx
                  - key: app.kubernetes.io/instance
                    operator: In
                    values:
                      - ingress-nginx
                  - key: app.kubernetes.io/component
                    operator: In
                    values:
                      - controller
              topologyKey: kubernetes.io/hostname
      podAnnotations:
        configmap.reloader.stakater.com/reload: "cloudflare-ip-ranges,ingress-nginx-controller"
      resources:
        requests:
          memory: 400M
          cpu: 30m
        limits:
          memory: 2000M

    defaultBackend:
      enabled: true
      image:
        repository: ghcr.io/181192/custom-error-pages
        tag: 1.2.1
      extraEnvs:
        - name: ERROR_FILES_PATH
          value: ./themes/shuffle
  valuesFrom:
    # Cloudflare IP Addresses
    # https://www.cloudflare.com/ips/
    - kind: ConfigMap
      name: cloudflare-ip-ranges
      valuesKey: cloudflare-ip-ranges.txt
      targetPath: controller.config.proxy-real-ip-cidr
