---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app postgres17-backup
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      postgres17-backup:
        type: cronjob
        cronjob:
          schedule: "0 3 * * *"
          parallelism: 1
          successfulJobsHistory: 1
          failedJobsHistory: 1

        initContainers:
          postgres:
            image:
              repository: ghcr.io/ahinko/postgres17
              tag: 17.5.7@sha256:012c15271c39e451f0d9387bb35c3d306c9ff1478998f84f2926a71f968b0cd7
            env:
              - name: POSTGRES_DB
                value: "atuin,miniflux,kitchenowl,teslamate,mastodon,homeassistant,romm,docmost,hoppscotch,immich"
              - name: POSTGRES_HOST
                value: "postgres17-rw.databases"
              - name: POSTGRES_EXTRA_OPTS
                value: "-b -C -c --inserts"
              - name: COMPRESS
                value: "true"
              - name: VERIFY_COMPRESSION
                value: "true"
            envFrom:
              - secretRef:
                  name: postgres17-backup-secret
            workingDir: /data
            command:
              - /bin/bash
              - -ec
              - |
                set -o nounset
                set -o errexit

                POSTGRES_PORT=${POSTGRES_PORT:-5432}
                POSTGRES_EXTRA_OPTS=${POSTGRES_EXTRA_OPTS:-""}
                COMPRESS=${COMPRESS:-false}
                VERIFY_COMPRESSION=${VERIFY_COMPRESSION:-false}

                POSTGRES_DBS=$(echo "${POSTGRES_DB}" | tr , " ")

                export PGUSER="${POSTGRES_USER}"
                export PGPASSWORD="${POSTGRES_PASSWORD}"
                export PGHOST="${POSTGRES_HOST}"
                export PGPORT="${POSTGRES_PORT}"

                for DB in ${POSTGRES_DBS}; do
                  BACKUP_FILENAME=${DB}-$(date +%Y%m%d_%H%M%S)
                  BACKUP_PATH=${BACKUP_FILENAME}.sql

                  echo "Backup $DB"

                  # Dump database
                  pg_dump -d ${DB} ${POSTGRES_EXTRA_OPTS} > ${BACKUP_PATH}

                  # Check for errors
                  if [ $? != 0 ] ; then
                      echo "Failed to backup $DB"
                      exit 1;
                  fi

                  if [ ${COMPRESS} == true ]; then
                      gzip -9 ${BACKUP_PATH}

                      # Change file extension since we have compressed it
                      BACKUP_PATH=${BACKUP_PATH}.gz
                  fi

                  # Verify compression
                  if [[ ${COMPRESS} == true && ${VERIFY_COMPRESSION} == true ]]; then
                    gunzip -c ${BACKUP_PATH} > ${BACKUP_FILENAME}.sql

                    if [ $? != 0 ] ; then
                      echo "Failed to decompress backup"
                      exit 1;
                    fi

                    rm ${BACKUP_FILENAME}.sql
                  fi
                done

        containers:
          restic:
            image:
              repository: ghcr.io/ahinko/restic
              tag: 0.18.0
            workingDir: /data
            args:
              - backup
              - --host
              - kubernetes # set a consistent hostname to avoid restic rescans
              - . # use workingDir to get relative paths in backup
            envFrom:
              - secretRef:
                  name: postgres17-backup-secret
            env:
              - name: RESTIC_REPOSITORY
                value: rest:https://restic.hemma.dev/postgres

        pod:
          hostNetwork: true
          hostPID: true
          topologySpreadConstraints:
            - maxSkew: 1
              topologyKey: kubernetes.io/hostname
              whenUnsatisfiable: DoNotSchedule
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: *app

      purne:
        type: cronjob
        cronjob:
          schedule: "32 5 1 * *" # change me - 1st of month at 05:32
          successfulJobsHistory: 1
          failedJobsHistory: 1

        containers:
          restic:
            image:
              repository: restic/restic
              tag: 0.18.0
            args:
              - forget
              - --keep-last=7 # change me - set retention policy
              - --keep-weekly=4 # see: https://restic.readthedocs.io/en/latest/060_forget.html
              - --prune
            envFrom:
              - secretRef:
                  name: postgres17-backup-secret
            env:
              - name: RESTIC_REPOSITORY
                value: rest:https://restic.hemma.dev/postgres

    persistence:
      backupdata:
        type: emptyDir
        globalMounts:
          - path: /data
