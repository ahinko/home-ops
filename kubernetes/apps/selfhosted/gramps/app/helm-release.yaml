---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app gramps
spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: app-template
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      gramps:
        annotations:
          reloader.stakater.com/auto: "true"
        pod:
          enableServiceLinks: false
          topologySpreadConstraints:
            - maxSkew: 1
              topologyKey: kubernetes.io/hostname
              whenUnsatisfiable: DoNotSchedule
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: *app
        containers:
          app:
            image: &image
              repository: ghcr.io/gramps-project/grampsweb
              tag: v25.4.1
            envFrom:
              - secretRef:
                  name: gramps-secret
            env: &envs
              GRAMPSWEB_TREE: "Ahinko" # will create a new tree if not exists
              GRAMPSWEB_CELERY_CONFIG__broker_url: "redis://dragonfly.databases.svc.cluster.local:6379/3"
              GRAMPSWEB_CELERY_CONFIG__result_backend: "redis://dragonfly.databases.svc.cluster.local:6379/3"
              GRAMPSWEB_RATELIMIT_STORAGE_URI: "redis://dragonfly.databases.svc.cluster.local:6379/4"
              GRAMPSWEB_USER_DB_URI: sqlite:////app/users/users.sqlite
            resources:
              requests:
                cpu: 10m
                memory: 100Mi
              limits:
                memory: 2048Mi
          worker:
            image: *image
            command:
              ["celery", "-A", "gramps_webapi", "worker", "--loglevel=INFO"]
            envFrom:
              - secretRef:
                  name: gramps-secret
            env: *envs
            resources:
              requests:
                cpu: 10m
                memory: 100Mi
              limits:
                memory: 1024Mi
    service:
      app:
        controller: gramps
        ports:
          http:
            port: &port 5000

    route:
      app:
        hostnames: ["{{ .Release.Name }}.hemma.dev"]
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - name: *app
                port: *port

    persistence:
      data:
        type: persistentVolumeClaim
        existingClaim: "${VOLSYNC_CLAIM}"
        advancedMounts:
          gramps:
            app:
              - path: "/app/users"
                subPath: "app/users"
              - path: "/app/cache"
                subPath: "app/cache"
              - path: "/app/indexdir"
                subPath: "app/indexdir"
              - path: "/app/thumbnail_cache"
                subPath: "app/thumbnail_cache"
              - path: "/app/secret"
                subPath: "app/secret"
              - path: "/root/.gramps/grampsdb"
                subPath: "root/.gramps/grampsdb"
              - path: "/app/media"
                subPath: "app/media"
            worker:
              - path: "/app/users"
                subPath: "app/users"
              - path: "/app/cache"
                subPath: "app/cache"
              - path: "/app/indexdir"
                subPath: "app/indexdir"
              - path: "/app/thumbnail_cache"
                subPath: "app/thumbnail_cache"
              - path: "/app/secret"
                subPath: "app/secret"
              - path: "/root/.gramps/grampsdb"
                subPath: "root/.gramps/grampsdb"
              - path: "/app/media"
                subPath: "app/media"

      tmpfs:
        type: emptyDir
        globalMounts:
          - path: /tmp
