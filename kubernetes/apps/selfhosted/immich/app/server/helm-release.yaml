---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: immich-server
spec:
  interval: 60m
  chart:
    spec:
      chart: app-template
      version: 2.4.0
      interval: 60m
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system

  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false

  dependsOn:
    - name: immich-typesense

  values:
    controllers:
      main:
        strategy: RollingUpdate
        annotations:
          reloader.stakater.com/auto: "true"

        pod:
          enableServiceLinks: false
          topologySpreadConstraints:
            - maxSkew: 1
              topologyKey: kubernetes.io/hostname
              whenUnsatisfiable: DoNotSchedule
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: immich-server

        containers:
          main:
            image:
              repository: ghcr.io/immich-app/immich-server
              tag: v1.90.2
            args:
              - start-server.sh

            env:
              # General
              LOG_LEVEL: log
              IMMICH_CONFIG_FILE: /config/immich-config.json
              IMMICH_MEDIA_LOCATION: &mediaLocation /usr/src/app/upload
              # Ports
              SERVER_PORT: &port 3001
              # Database
              DB_HOSTNAME:
                valueFrom:
                  secretKeyRef:
                    name: database-immich-user
                    key: HOST
              DB_USERNAME:
                valueFrom:
                  secretKeyRef:
                    name: database-immich-user
                    key: LOGIN
              DB_PASSWORD:
                valueFrom:
                  secretKeyRef:
                    name: database-immich-user
                    key: PASSWORD
              DB_DATABASE_NAME:
                valueFrom:
                  secretKeyRef:
                    name: database-immich-user
                    key: DATABASE_NAME
              DB_PORT: 5432
              # Redis
              REDIS_HOSTNAME:
                valueFrom:
                  configMapKeyRef:
                    name: immich-configmap
                    key: REDIS_HOSTNAME
              # Typesense
              TYPESENSE_ENABLED:
                valueFrom:
                  configMapKeyRef:
                    name: immich-configmap
                    key: TYPESENSE_ENABLED
              TYPESENSE_API_KEY:
                valueFrom:
                  secretKeyRef:
                    name: immich-secret
                    key: TYPESENSE_API_KEY
              TYPESENSE_HOST:
                valueFrom:
                  configMapKeyRef:
                    name: immich-configmap
                    key: TYPESENSE_HOST
              TYPESENSE_PORT:
                valueFrom:
                  configMapKeyRef:
                    name: immich-configmap
                    key: TYPESENSE_PORT
              TYPESENSE_PROTOCOL:
                valueFrom:
                  configMapKeyRef:
                    name: immich-configmap
                    key: TYPESENSE_PROTOCOL
            resources:
              requests:
                cpu: 100m
                memory: 256Mi
              limits:
                memory: 2048Mi

    service:
      main:
        ports:
          http:
            port: *port

    ingress:
      main:
        enabled: true
        className: nginx
        annotations:
          external-dns.alpha.kubernetes.io/target: ipv4.${SECRET_DOMAIN}
          nignx.ingress.kubernetes.io/force-ssl-redirect: "true"
          nginx.ingress.kubernetes.io/proxy-body-size: "0"
          nginx.ingress.kubernetes.io/upstream-hash-by: "$client_ip"
        hosts:
          - host: &host photos.${SECRET_DOMAIN}
            paths:
              - path: /
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *host

    persistence:
      config:
        enabled: true
        type: configMap
        name: immich-server-config
        globalMounts:
          - path: /config

      library:
        type: persistentVolumeClaim
        existingClaim: immich-nfs
        globalMounts:
          - path: *mediaLocation
