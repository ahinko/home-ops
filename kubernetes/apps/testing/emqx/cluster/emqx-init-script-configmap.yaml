---
apiVersion: v1
kind: ConfigMap
metadata:
  name: emqx-init-script-configmap
data:
  emqx_init.sh: |
    #!/bin/bash

    # Define Base URL
    BASE_API_URL="http://$HOST/api/v5"

    while ! curl -s \
        "$BASE_API_URL/status";
    do
        echo "waiting for EMQX to start..";
        sleep 5;
    done;

    echo "EMQX started, ready to initialize..";
    echo "Logging in with user $EMQX_DASHBOARD_ADMIN_USER on $BASE_API_URL..";

    LOGIN_RESPONSE=$(curl -s -X POST \
      "$BASE_API_URL/login" \
      -H "Content-Type: application/json" \
      -d "{ \"username\": \"$EMQX_DASHBOARD_ADMIN_USER\", \"password\": \"$EMQX_DASHBOARD_ADMIN_PASSWORD\"}"
    )

    # Parse response using jq to extract api_key value
    API_KEY=$(echo "$LOGIN_RESPONSE" | jq -r '.token')

    # Loop over usernames and passwords defined as environment variables
    while IFS='=' read -r env_var; do
        # Extract username and password from the environment variable
        creds=$(echo "$env_var" | cut -d '=' -f 2)

        username=$(echo "$creds" | cut -d ':' -f 1)
        password=$(echo "$creds" | cut -d ':' -f 2)

        # Make POST request to create user
        response=$(curl -s -X POST \
            "$BASE_API_URL/authentication/password_based:built_in_database/users" \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer $API_KEY" \
            -d "{\"user_id\": \"$username\", \"password\": \"$password\", \"is_superuser\": true}")

        echo "debug: $response"

        # Check if API call was successful
        if [ $? -eq 0 ]; then
            echo "User $username created successfully (or already existed)."
        else
            echo "Error creating user $username. Response: $response"
        fi
    done < <(env | grep '^USER_[0-9]\+=' | sort)

    echo 'done!'
    sleep infinity
