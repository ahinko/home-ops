---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: gatus
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  values:
    controllers:
      gatus:
        pod:
          annotations:
            reloader.stakater.com/auto: "true"

        initContainers:
          init-config:
            image:
              repository: ghcr.io/home-operations/k8s-sidecar
              tag: 1.30.10@sha256:dd3b1f0c4e6b4512b2deb50c58acf65fd0f0927120a59a95eec854d32a6c9ce3
            env:
              FOLDER: /config
              LABEL: gatus.io/enabled
              NAMESPACE: ALL
              RESOURCE: both
              UNIQUE_FILENAMES: true
              METHOD: WATCH
            restartPolicy: Always
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 128Mi

        containers:
          app:
            image:
              repository: ghcr.io/twin/gatus
              tag: v5.25.2
            env:
              TZ: America/New_York
              GATUS_CONFIG_PATH: /config
              GATUS_DELAY_START_SECONDS: 5
              GATUS_WEB_PORT: &port 80

            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 128Mi

    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000

    service:
      app:
        ports:
          http:
            port: *port

    serviceMonitor:
      app:
        endpoints:
          - port: http

    route:
      app:
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/description: Uptime monitoring
          gethomepage.dev/group: Kubernetes
          gethomepage.dev/icon: sh-gatus.svg
          gethomepage.dev/name: Gatus
          gethomepage.dev/app: gatus
        hostnames: ["status.hemma.dev"]
        parentRefs:
          - name: internal
            namespace: networking
            sectionName: https

    rbac:
      roles:
        gatus:
          type: ClusterRole
          rules:
            - apiGroups: [""]
              resources: ["configmaps", "secrets"]
              verbs: ["get", "watch", "list"]
      bindings:
        gatus:
          type: ClusterRoleBinding
          roleRef:
            identifier: gatus
          subjects:
            - identifier: gatus
    serviceAccount:
      gatus: {}

    persistence:
      config:
        type: emptyDir

      config-file:
        type: configMap
        name: gatus-configmap
        globalMounts:
          - path: /config/config.yaml
            subPath: config.yaml
            readOnly: true
