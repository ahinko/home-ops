---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app rook-ceph-cluster
  namespace: rook-ceph
spec:
  interval: 60m
  chart:
    spec:
      chart: *app
      version: v1.9.8
      sourceRef:
        kind: HelmRepository
        name: rook-ceph-charts
        namespace: flux-system
      interval: 60m
  dependsOn:
    - name: rook-ceph-operator
      namespace: rook-ceph
  install:
    createNamespace: true
    remediation: # perform remediation when helm install fails
      retries: 3
  upgrade:
    remediation: # perform remediation when helm upgrade fails
      retries: 3
      remediateLastFailure: true # remediate the last failure, when no retries remain
    cleanupOnFail: true
  # Values link: https://github.com/rook/rook/blob/release-1.9/deploy/charts/rook-ceph-cluster/values.yaml
  values:
    toolbox:
      enabled: true
      image: rook/ceph:v1.9.8

    configOverride: |
      [global]
      bdev_enable_discard = true
      bdev_async_discard = true
      bluefs_buffered_io = false

    ingress:
      dashboard:
        ingressClassName: nginx
        annotations:
          nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
          nginx.ingress.kubernetes.io/server-snippet: |
            proxy_ssl_verify off;

          hajimari.io/enable: "true"
          hajimari.io/icon: "server"
          hajimari.io/appName: "Rook"
        host:
          name: rook.${SECRET_DOMAIN}
          path: "/"
        tls:
          - hosts:
              - rook.${SECRET_DOMAIN}

    cephClusterSpec:
      network:
        provider: host

      # Note about ceph version. v16.2.7 was used when recreating the cluster since we had issues with
      # prepare osd pods failing. Might also have been due to resource limitations. Did change both at the same time
      # so I'm not exactly sure what the fix was.
      cephVersion:
        image: quay.io/ceph/ceph:v17.2.3
      dataDirHostPath: /var/lib/rook
      mon:
        count: 3
        allowMultiplePerNode: false
      dashboard:
        enabled: true

      storage: # cluster level storage configuration and selection
        useAllNodes: false
        useAllDevices: false
        config:
          osdsPerDevice: "1"

        nodes:
          - name: "zeus"
            devices:
              - name: "/dev/disk/by-id/ata-Samsung_SSD_870_EVO_500GB_S62BNJ0NC15701B"
          - name: "helios"
            devices:
              - name: "/dev/disk/by-id/ata-Samsung_SSD_860_EVO_500GB_S3Z2NR0N408073D"
          - name: "iris"
            devices:
              - name: "/dev/disk/by-id/ata-Samsung_SSD_860_EVO_500GB_S3Z2NR0N408037N"
          - name: "poseidon"
            devices:
              - name: "/dev/disk/by-id/ata-Samsung_SSD_850_EVO_500GB_S2RBNXBH235330E"

      resources:
        mgr:
          limits:
            cpu: "1000m"
            memory: "1Gi"
          requests:
            cpu: "100m"
            memory: "512Mi"
        mon:
          limits:
            cpu: "1500m"
            memory: "2Gi"
          requests:
            cpu: "50m"
            memory: "500M"
        osd:
          limits:
            cpu: "1500m"
            memory: "4Gi"
          requests:
            cpu: "50m"
            memory: "2Gi"
        mgr-sidecar:
          limits:
            cpu: "500m"
            memory: "100Mi"
          requests:
            cpu: "100m"
            memory: "40Mi"
        crashcollector:
          limits:
            cpu: "400m"
            memory: "60Mi"
          requests:
            cpu: "30m"
            memory: "60Mi"
        logcollector:
          limits:
            cpu: "500m"
            memory: "1Gi"
          requests:
            cpu: "100m"
            memory: "100Mi"
        cleanup:
          limits:
            cpu: "500m"
            memory: "1Gi"
          requests:
            cpu: "200m"
            memory: "100Mi"

    cephFileSystems:
      - name: myfs
        spec:
          metadataPool:
            replicated:
              size: 3
          dataPools:
            - failureDomain: host
              replicated:
                size: 3
          metadataServer:
            activeCount: 1
            activeStandby: true
        storageClass:
          enabled: true
          isDefault: false
          name: rook-cephfs
          reclaimPolicy: Delete
          parameters:
            csi.storage.k8s.io/provisioner-secret-name: rook-csi-cephfs-provisioner
            csi.storage.k8s.io/provisioner-secret-namespace: rook-ceph
            csi.storage.k8s.io/controller-expand-secret-name: rook-csi-cephfs-provisioner
            csi.storage.k8s.io/controller-expand-secret-namespace: rook-ceph
            csi.storage.k8s.io/node-stage-secret-name: rook-csi-cephfs-node
            csi.storage.k8s.io/node-stage-secret-namespace: rook-ceph
            csi.storage.k8s.io/fstype: ext4

    cephBlockPools: []
    cephObjectStores: []
