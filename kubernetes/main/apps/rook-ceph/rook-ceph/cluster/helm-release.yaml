---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app rook-ceph-cluster
spec:
  interval: 30m
  chart:
    spec:
      chart: *app
      version: v1.14.6
      sourceRef:
        kind: HelmRepository
        name: rook-ceph-charts
        namespace: flux-system
      interval: 30m
  dependsOn:
    - name: rook-ceph-operator
      namespace: rook-ceph
    - name: snapshot-controller
      namespace: storage
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: false
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  # Values link: https://github.com/rook/rook/blob/release-1.14/deploy/charts/rook-ceph-cluster/values.yaml
  values:
    toolbox:
      enabled: false

    monitoring:
      enabled: true
      createPrometheusRules: true

    configOverride: |
      [global]
      bdev_enable_discard = true
      bdev_async_discard = true
      osd_class_update_on_start = false

    ingress:
      dashboard:
        ingressClassName: nginx
        host:
          name: &host rook.${SECRET_DOMAIN}
          path: "/"
        tls:
          - hosts:
              - *host

    cephClusterSpec:
      placement:
        all:
          tolerations:
            - effect: NoSchedule
              key: node-role.kubernetes.io/control-plane
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
                - matchExpressions:
                    - key: kubernetes.io/arch
                      operator: In
                      values:
                        - amd64

      mgr:
        modules:
          - name: pg_autoscaler
            enabled: true

      network:
        provider: host
        connections:
          requireMsgr2: true

      dataDirHostPath: /var/lib/rook

      crashCollector:
        disable: false

      dashboard:
        enabled: true
        urlPrefix: /
        ssl: false
        prometheusEndpoint: http://vmselect-victoria-metrics.observability.svc.cluster.local:8481/select/0/prometheus

      storage: # cluster level storage configuration and selection
        useAllNodes: false
        useAllDevices: false
        config:
          osdsPerDevice: "1"

        nodes:
          - name: cp03
            devices:
              - name: "/dev/disk/by-id/nvme-Samsung_SSD_970_EVO_Plus_1TB_S4EWNX0W596594W"
          - name: w01
            devices:
              - name: "/dev/disk/by-id/nvme-Samsung_SSD_970_EVO_Plus_1TB_S4EWNX0W596621H"
          - name: w02
            devices:
              - name: "/dev/disk/by-id/nvme-Samsung_SSD_970_EVO_Plus_1TB_S4EWNX0W596620V"
          - name: w03
            devices:
              - name: "/dev/disk/by-id/nvme-Samsung_SSD_970_EVO_Plus_1TB_S4EWNX0W596610A"

      resources:
        mgr:
          limits:
            memory: "2Gi"
          requests:
            cpu: "100m"
            memory: "512Mi"
        mon:
          limits:
            memory: "2Gi"
          requests:
            cpu: "50m"
            memory: "500M"
        osd:
          limits:
            memory: "4Gi"
          requests:
            cpu: "50m"
            memory: "2Gi"
        mgr-sidecar:
          limits:
            memory: "100Mi"
          requests:
            cpu: "100m"
            memory: "40Mi"
        crashcollector:
          limits:
            memory: "60Mi"
          requests:
            cpu: "30m"
            memory: "60Mi"
        logcollector:
          limits:
            memory: "1Gi"
          requests:
            cpu: "100m"
            memory: "100Mi"
        cleanup:
          limits:
            memory: "1Gi"
          requests:
            cpu: "200m"
            memory: "100Mi"

    cephFileSystems:
      - name: myfs
        spec:
          metadataPool:
            replicated:
              size: 3
          dataPools:
            - failureDomain: host
              replicated:
                size: 3
          metadataServer:
            activeCount: 1
            activeStandby: true
        storageClass:
          enabled: true
          isDefault: false
          name: ceph-filesystem
          reclaimPolicy: Delete
          allowVolumeExpansion: true
          mountOptions: []
          volumeBindingMode: Immediate
          parameters:
            csi.storage.k8s.io/provisioner-secret-name: rook-csi-cephfs-provisioner
            csi.storage.k8s.io/provisioner-secret-namespace: rook-ceph
            csi.storage.k8s.io/controller-expand-secret-name: rook-csi-cephfs-provisioner
            csi.storage.k8s.io/controller-expand-secret-namespace: rook-ceph
            csi.storage.k8s.io/node-stage-secret-name: rook-csi-cephfs-node
            csi.storage.k8s.io/node-stage-secret-namespace: rook-ceph
            csi.storage.k8s.io/fstype: ext4

    cephFileSystemVolumeSnapshotClass:
      enabled: true
      name: csi-ceph-filesystem
      isDefault: false
      deletionPolicy: Delete

    cephBlockPools:
      - name: ceph-blockpool
        spec:
          failureDomain: host
          replicated:
            size: 3
        storageClass:
          enabled: true
          name: ceph-block
          isDefault: true
          reclaimPolicy: Delete
          allowVolumeExpansion: true
          volumeBindingMode: Immediate
          parameters:
            imageFormat: "2"
            imageFeatures: layering
            csi.storage.k8s.io/provisioner-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/provisioner-secret-namespace: rook-ceph
            csi.storage.k8s.io/controller-expand-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/controller-expand-secret-namespace: rook-ceph
            csi.storage.k8s.io/node-stage-secret-name: rook-csi-rbd-node
            csi.storage.k8s.io/node-stage-secret-namespace: rook-ceph
            csi.storage.k8s.io/fstype: ext4
    cephBlockPoolsVolumeSnapshotClass:
      enabled: true
      name: csi-ceph-blockpool
      isDefault: false
      deletionPolicy: Delete

    cephObjectStores:
      - name: ceph-objectstore
        spec:
          metadataPool:
            failureDomain: host
            replicated:
              size: 3
          dataPool:
            failureDomain: host
            erasureCoded:
              dataChunks: 2
              codingChunks: 1
          preservePoolsOnDelete: true
          gateway:
            hostNetwork: false
            port: 80
            resources:
              requests:
                cpu: 100m
                memory: 1Gi
              limits:
                memory: 2Gi
            instances: 2
            priorityClassName: system-cluster-critical
          healthCheck:
            bucket:
              interval: 60s
        storageClass:
          enabled: true
          name: ceph-bucket
          reclaimPolicy: Delete
          volumeBindingMode: Immediate
          parameters:
            region: us-east-1
        ingress:
          enabled: false
          ingressClassName: nginx
          annotations:
            nginx.ingress.kubernetes.io/proxy-body-size: "0"
            nginx.ingress.kubernetes.io/proxy-request-buffering: "off"
          host:
            name: rgw.${SECRET_DOMAIN}
            path: /
