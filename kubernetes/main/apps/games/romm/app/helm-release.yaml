---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: romm
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.1.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
      interval: 30m
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      romm:
        pod:
          annotations:
            reloader.stakater.com/auto: "true"

          securityContext:
            runAsUser: ${APP_UID}
            runAsGroup: ${APP_GID}
            fsGroup: ${APP_GID}
            fsGroupChangePolicy: "OnRootMismatch"

        containers:
          app:
            image:
              repository: rommapp/romm
              tag: 3.1.0

            resources:
              requests:
                cpu: 10m
                memory: 100Mi
              limits:
                memory: 1024Mi

            env:
              REDIS_HOST: "dragonfly.databases.svc.cluster.local"
              REDIS_PORT: 6379

              DB_PORT: 5432
              DB_HOST:
                valueFrom:
                  secretKeyRef:
                    name: database-romm-user
                    key: HOST
              DB_NAME:
                valueFrom:
                  secretKeyRef:
                    name: database-romm-user
                    key: DATABASE_NAME
              DB_USER:
                valueFrom:
                  secretKeyRef:
                    name: database-romm-user
                    key: ROLE
              DB_PASSWD:
                valueFrom:
                  secretKeyRef:
                    name: database-romm-user
                    key: PASSWORD

            envFrom:
              - secretRef:
                  name: romm-secret

    service:
      app:
        controller: romm
        ports:
          http:
            port: 8080

    ingress:
      app:
        className: "nginx"
        hosts:
          - host: &host "romm.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host

    persistence:
      data:
        existingClaim: "${VOLSYNC_CLAIM}"
        globalMounts:
          - path: /romm

      media:
        existingClaim: romm-nfs
        globalMounts:
          - path: /romm/library
