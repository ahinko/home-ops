---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: immich-server
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.6.0
      interval: 30m
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system

  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false

  values:
    controllers:
      immich-server:
        annotations:
          reloader.stakater.com/auto: "true"

        pod:
          enableServiceLinks: false
          topologySpreadConstraints:
            - maxSkew: 1
              topologyKey: kubernetes.io/hostname
              whenUnsatisfiable: DoNotSchedule
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: immich-server

          nodeSelector:
            kubernetes.io/hostname: s01

        containers:
          app:
            image:
              repository: ghcr.io/immich-app/immich-server
              tag: v1.124.2

            env:
              # General
              LOG_LEVEL: verbose
              IMMICH_MEDIA_LOCATION: &mediaLocation /usr/src/app/upload
              # Ports
              SERVER_PORT: &port 2283
              # Database
              DB_HOSTNAME: "postgres16-rw.databases.svc.cluster.local"
              DB_PORT: 5432
              DB_DATABASE_NAME: "immich"
              DB_USERNAME:
                valueFrom:
                  secretKeyRef:
                    name: immich-secret
                    key: DB_USERNAME
              DB_PASSWORD:
                valueFrom:
                  secretKeyRef:
                    name: immich-secret
                    key: DB_PASSWORD

            envFrom:
              - configMapRef:
                  name: immich-configmap

            resources:
              requests:
                cpu: 100m
                memory: 256Mi
              limits:
                memory: 4096Mi

            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api/server/ping
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api/server/ping
                    port: *port
                  failureThreshold: 30
                  periodSeconds: 5
                  successThreshold: 1
                  timeoutSeconds: 1

    service:
      app:
        controller: immich-server
        ports:
          http:
            port: *port

    ingress:
      app:
        className: nginx
        annotations:
          external-dns.alpha.kubernetes.io/target: ipv4.${SECRET_DOMAIN}
          nignx.ingress.kubernetes.io/force-ssl-redirect: "true"
          nginx.ingress.kubernetes.io/proxy-body-size: "0"
          nginx.ingress.kubernetes.io/upstream-hash-by: "$client_ip"
          gethomepage.dev/enabled: "true"
          gethomepage.dev/description: Photo management and backup
          gethomepage.dev/group: Selfhosted
          gethomepage.dev/icon: sh-immich.svg
          gethomepage.dev/name: Immich
        hosts:
          - host: &host photos.${SECRET_DOMAIN}
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host

    persistence:
      library:
        type: hostPath
        hostPath: /var/mnt/tank/immich
        globalMounts:
          - path: *mediaLocation
