---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app gramps
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.6.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
      interval: 30m
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      gramps:
        annotations:
          reloader.stakater.com/auto: "true"

        pod:
          enableServiceLinks: false

          topologySpreadConstraints:
            - maxSkew: 1
              topologyKey: kubernetes.io/hostname
              whenUnsatisfiable: DoNotSchedule
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: *app

        containers:
          app:
            image: &image
              repository: ghcr.io/gramps-project/grampsweb
              tag: v24.12.2

            envFrom:
              - secretRef:
                  name: gramps-secret

            env: &envs
              GRAMPSWEB_TREE: "Ahinko" # will create a new tree if not exists
              GRAMPSWEB_CELERY_CONFIG__broker_url: "redis://dragonfly.databases.svc.cluster.local:6379/3"
              GRAMPSWEB_CELERY_CONFIG__result_backend: "redis://dragonfly.databases.svc.cluster.local:6379/3"
              GRAMPSWEB_RATELIMIT_STORAGE_URI: redis://dragonfly.databases.svc.cluster.local:6379/4
              GRAMPSHOME: /data
              GRAMPSWEB_SEARCH_INDEX_DB_URI: sqlite:////data/search_index.db
              GRAMPSWEB_MEDIA_BASE_DIR: /data/media
              GRAMPSWEB_USER_DB_URI: sqlite:////data/users.sqlite
              GRAMPSWEB_THUMBNAIL_CACHE_CONFIG__CACHE_DIR: /data/thumbnail_cache

            resources:
              requests:
                cpu: 10m
                memory: 100Mi
              limits:
                memory: 2048Mi

          worker:
            image: *image
            command:
              ["celery", "-A", "gramps_webapi", "worker", "--loglevel=INFO"]

            envFrom:
              - secretRef:
                  name: gramps-secret

            env: *envs

            resources:
              requests:
                cpu: 10m
                memory: 100Mi
              limits:
                memory: 1024Mi

    service:
      app:
        controller: gramps
        ports:
          http:
            port: 5000

    ingress:
      app:
        className: nginx
        annotations:
          #   external-dns.alpha.kubernetes.io/target: ipv4.${SECRET_DOMAIN}
          gethomepage.dev/enabled: "true"
          gethomepage.dev/description: Genealogy
          gethomepage.dev/group: Selfhosted
          gethomepage.dev/icon: sh-gramps.svg
          gethomepage.dev/name: Gramps
        hosts:
          - host: &host "gramps.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host

    persistence:
      data:
        type: persistentVolumeClaim
        existingClaim: "${VOLSYNC_CLAIM}"
        globalMounts:
          - path: /data

      tmpfs:
        type: emptyDir
        globalMounts:
          - path: /tmp
