---
# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: "3"

vars:
  CONTROLLER:
    sh: talosctl config info --output json | jq --raw-output '.endpoints[]' | shuf -n 1

tasks:
  wait_for_health:
    internal: True
    desc: Wait for services in cluster to be healthy
    cmds:
      # Ensure CephCluster is healthy
      - kubectl -n rook-ceph wait --for jsonpath='{.status.ceph.health}'='HEALTH_OK' --timeout {{ .TIMEOUT | default "30s" }} cephcluster rook-ceph
      # Ensure CloudNative-PG cluster has 3 ready instances
      - kubectl -n databases wait --for jsonpath='{.status.readyInstances}'='3' --timeout {{ .TIMEOUT | default "30s" }} cluster postgres18

  talosconfig:
    desc: Get an updated version of talosconfig
    cmds:
      - cp {{ .TALOS_DIR }}/clusterconfig/talosconfig {{ .TALOSCONFIG }}

  generate:
    desc: Generate Talos machine configurations
    dir: "{{.TALOS_DIR}}"
    cmds:
      - op run --env-file="./talsecret.env" -- talhelper genconfig
    sources:
      - talconfig.yaml
      - talsecret.yaml
    generates:
      - clusterconfig/*.yaml
      - clusterconfig/talosconfig

  apply:
    desc: Apply Talos config on a node, NODE=required
    requires:
      vars:
        - NODE
    dir: "{{.TALOS_DIR}}"
    cmds:
      - task: generate
      - task: wait_for_health
        vars: { TIMEOUT: 30s }
      - talhelper gencommand apply -n {{.NODE}} | bash

  upgrade:
    desc: Upgrade Talos on a node, NODE=required
    requires:
      vars:
        - NODE
    dir: "{{.TALOS_DIR}}"
    cmds:
      - task: generate
      - task: wait_for_health
        vars: { TIMEOUT: 30s }
      - talhelper gencommand upgrade -n {{.NODE}} --extra-flags=--stage | bash
    preconditions:
      - talosctl --nodes {{.NODE}} get machineconfig
      - which talosctl yq

  upgrade:k8s:
    desc: Upgrade Kubernetes
    dir: "{{.TALOS_DIR}}"
    cmds:
      - task: generate
      - task: wait_for_health
        vars: { TIMEOUT: 30s }
      - talosctl -n {{.CONTROLLER}} etcd snapshot etcd.backup
      - talhelper gencommand upgrade-k8s | bash

  write-to-usb:
    desc: Write Talos image to USB drive, use configuration to determine architecture and schematic, NODE=required
    dir: "{{.TALOS_DIR}}"
    requires:
      vars:
        - NODE
    vars:
      IMAGE_URL:
        sh: talhelper genurl image -n {{.NODE}} -c {{.TALOS_DIR}}/talconfig.yaml
    cmds:
      - echo "Downloading image from {{.IMAGE_URL}}"
      - curl -L -o {{.ROOT_DIR}}/talos-{{.NODE}}.raw.xz {{.IMAGE_URL}} && xz -d {{.ROOT_DIR}}/talos-{{.NODE}}.raw.xz
      - "diskutil list"
      - |
        echo "Path to USB drive:"
        read path;
        diskutil unmount ${path} || true
        diskutil unmountDisk ${path} || true
        echo "Writing image to: ${path}";
        sudo dd if={{.ROOT_DIR}}/talos-{{.NODE}}.raw of=${path} conv=fsync bs=4M
      - "rm {{.ROOT_DIR}}/talos-{{.NODE}}.raw"
