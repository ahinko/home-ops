{
  regexManagers: [
    {
      description: 'Process Kubernetes versions',
      fileMatch: [
        'infrastructure/kubernetes/upgrade-k8s.sh',
        'infrastructure/kubernetes/talconfig.yaml'
      ],
      matchStrings: [
        'kubernetesVersion: (?<currentValue>.*)',
        '--to (?<currentValue>.*)'
      ],
      depNameTemplate: 'ghcr.io/siderolabs/kubelet',
      datasourceTemplate: 'docker'
    },
    {
      description: 'Process Talos versions',
      fileMatch: [
          'infrastructure/kubernetes/upgrade-talos.sh',
          'infrastructure/kubernetes/talconfig.yaml',
      ],
      matchStrings: [
        'talosVersion: (?<currentValue>.*)',
        'installer:(?<currentValue>.*)',
      ],
      depNameTemplate: 'ghcr.io/siderolabs/installer',
      datasourceTemplate: 'docker'
    },
    {
      description: 'Process CLI versions',
      fileMatch: [
          '.taskfiles/.+\\.yaml$'
      ],
      matchStrings: [
        'github.com\/(?<depName>.*?)\/releases\/download\/(?<currentValue>[a-z0-9.]*)',
      ],
      datasourceTemplate: 'github-releases'
    },
    {
      description: 'Process Cilium Quick Install for new versions',
      fileMatch: [
        '.taskfiles/kubernetes.yaml$'
      ],
      matchStrings: [
        'add (?<depName>.*?) (?<registryUrl>.*)\n .*\n .* --version (?<currentValue>.*) cilium'
      ],
      datasourceTemplate: 'helm'
    },
    {
      description: 'Process UDM-PRO dependencies in Ansible playbook + role',
      fileMatch: [
        'infrastructure/udm-pro/.+\\.yaml$'
      ],
      matchStrings: [
        'depName=(?<depName>.*?)\n[a-z_]*: (?<currentValue>.*)'
      ],
      datasourceTemplate: 'github-releases'
    },
    {
      description: 'Process UDM-PRO dependencies in UDM-PRO scripts',
      fileMatch: [
        'infrastructure/udm-pro/.+\\.sh$',
      ],
      matchStrings: [
        '\n  (?<depName>.*?):(?<currentValue>.*) # renovate'
      ],
      datasourceTemplate: 'docker'
    },
    {
      "description": "Process git repository resources like CRDs etc",
      "fileMatch": [
        "kubernetes/.+\\.yaml$",
      ],
      "matchStrings": [
        "renovate: datasource=(?<datasource>.*)\n *url: https:\/\/github\\.com\/(?<depName>.*?)\\.git\n *ref:\n *tag: (?<currentValue>.*)\n",
        "renovate\n *url: https:\/\/github\\.com\/(?<depName>.*?)\\.git\n *ref:\n *tag: (?<currentValue>.*)\n",
        "renovate\n  - https:\/\/github\\.com\/(?<depName>.*?)\/releases\/download\/(?<currentValue>[a-z0-9.]*)",
      ],
      "datasourceTemplate": "github-releases"
    },
    {
      "description": "Process CRD dependencies",
      "fileMatch": ["kubernetes/.+\\.ya?ml$"],
      "matchStrings": [
        // GitRepository where 'Git release/tag' matches 'Helm' version, used for when crd is a file
        "registryUrl=(?<registryUrl>\\S+) chart=(?<depName>\\S+)\n *#?- https:\\/\\/raw.githubusercontent.com\\/([\\w\\d\\-_]+\\/[\\w\\d\\-_]+)\\/(?<currentValue>[\\w\\d\\.\\-_]+)\\/.*\n",
        // GitRepository where 'Git release/tag' matches 'Helm' version, used when crds are in a folder
        "registryUrl=(?<registryUrl>\\S+) chart=(?<depName>\\S+)\n.*?(?<currentValue>[^-\\s]*)\n",
        // Kustomization where 'GitHub release artifact URL' matches 'Docker image' version
        "datasource=(?<datasource>\\S+) image=(?<depName>\\S+)\n.*?-\\s(.*?)\/(?<currentValue>[^/]+)\/[^/]+\n",
        // Kustomization where 'GitHub release artifact URL' matches 'Docker image' version
        "datasource=(?<datasource>\\S+) image=(?<depName>\\S+)\n *#?- https:\\/\\/raw.githubusercontent.com\\/([\\w\\d\\-_]+\\/[\\w\\d\\-_]+)\\/(?<currentValue>[\\w\\d\\.\\-_]+)\\/.*\n"
      ],
      "datasourceTemplate": "{{#if datasource}}{{{datasource}}}{{else}}helm{{/if}}"
    },
  ],
}
