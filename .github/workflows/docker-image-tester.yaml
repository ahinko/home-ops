---
# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: "Docker Image Test"

on:
  pull_request:
    branches: ["main"]
    paths: ["kubernetes/**"]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.ref }}
  cancel-in-progress: true

jobs:
  changed-files:
    name: Get Changed Files
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.changed-files.outputs.all_changed_and_modified_files }}
    steps:
      - name: Generate Token
        uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: "${{ secrets.HOMEOPS_BOT_APP_ID }}"
          private-key: "${{ secrets.HOMEOPS_BOT_PRIVATE_KEY }}"

      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: "${{ steps.app-token.outputs.token }}"
          fetch-depth: 0

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v42
        with:
          files: kubernetes/**/{helm-release,backup,cronjob}.yaml
          json: true
          quotepath: false
          escape_json: false

      - name: List all changed files
        run: echo "${{ steps.changed-files.outputs.all_changed_and_modified_files }}"

  extract-images:
    name: Extract images from Helm Release
    runs-on: ubuntu-latest
    needs:
      - changed-files
    if: ${{ needs.changed-files.outputs.matrix != '[]' }}
    strategy:
      matrix:
        files: ${{ fromJSON(needs.changed-files.outputs.matrix) }}
      max-parallel: 4
      fail-fast: false
    outputs:
      matrix: ${{ steps.extract-images.outputs.images }}
    steps:
      - name: Generate Token
        uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: "${{ secrets.HOMEOPS_BOT_APP_ID }}"
          private-key: "${{ secrets.HOMEOPS_BOT_PRIVATE_KEY }}"

      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: "${{ steps.app-token.outputs.token }}"

      - name: Extract Images from Helm Release
        id: extract-images
        run: |
          images=$(npx zx ".github/scripts/extract-images.mjs" --kubernetes-dir "./kubernetes" --helmrelease "${{ matrix.files }}")
          echo "images=${images}" >> $GITHUB_OUTPUT
          echo "${images}"

  test-images:
    name: Test images from Helm Release
    runs-on: ubuntu-latest
    needs:
      - "extract-images"
    if: ${{ needs.extract-images.outputs.matrix != '[]' }}
    strategy:
      matrix:
        images: ${{ fromJSON(needs.extract-images.outputs.matrix) }}
      max-parallel: 4
      fail-fast: false
    steps:
      - name: Test Images from Helm Release
        run: docker pull ${{ matrix.images }}

  test-images-success:
    needs:
      - test-images
    if: ${{ always() }}
    name: Test images from Helm Release successful
    runs-on: ubuntu-latest
    steps:
      - name: Check matrix status
        if: >-
          ${{
               contains(needs.*.result, 'failure')
            || contains(needs.*.result, 'cancelled')
          }}
        run: exit 1
